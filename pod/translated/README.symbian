Puede leer este archivo en cualquier editor de texto (verá algunos caracteres extraños, pero puede ignorarlos).
Está escrito en formato POD (vea pod/perlpod.pod), un formato diseñado específicamente para ser legible tal cual.

=head1 NAME

perlsymbian - Perl versión 5 en el sistema operativo Symbian

=head1 DESCRIPCIÓN

Este documento describe varias características del sistema operativo Symbian que afectarán a cómo Perl versión 5 (de ahora en adelante sólo Perl) se compila y/o ejecuta.

B<NOTE: esta adaptación (hasta la 0.4.1) no compila en el entorno gráfico del S.O. Symbian; en lugar de eso aparece como una DLL Symbian>. La DLL incluye una clase en C++ llamada CPerlBase, que uno pueda (derivar, y) entonces, usar para incrustar Perl en sus aplicaciones; vea F<symbian/README>.

La adaptación básica de Perl a Symbian solo implementa la funcionalidad básica de POSIX; no implementa ningún enlace para Perl de ningún Symbian posterior o Serie 60, Serie 80 o UIQ.

También es posible generar ejecutables Symbian para "miniperl" y "perl", pero ya que no existe un interfaz estándar de línea de comandos para Symbian (ni teclados completos en los dispositivos), su utilidad es principalmente como demostraciones.

=head2 Compilar Perl en Symbian

(0) Necesita tener instalado el apropiado SDK Symbian.

Estas instrucciones se han probado bajo varias SDK Symbian de Nokia Series 60 (1.2 a 2.6, 2.8 también debería funcionar; 1.2 compila pero no funciona), Series 80 2.0, y SDK Nokia 7710 (Series 90).
Puede obtener los SDK desde el foro de Nokia (L<http://www.forum.nokia.com/>).
También se ha hecho una adaptación -deprisa y corriendo- a UIQ 2.1.

Un prerequisito para cualquiera de los SDK es el de instalar ActivePerl desde ActiveState, L<http://www.activestate.com/Products/ActivePerl/>

Tener el SDK instalado también significa que necesita tener instalado o bien Metrowerks CodeWarrior (2.8 y 3.0 se usaron en las pruebas) o bien el Microsoft Visual C++ 6.0 (SP3, mínimo, SP5 recomendado).

Note que por ejemplo la instalación del SDK de Series 60 2.0 VC habla sobre ActivePerl compilación 518, que ya no existe (a mediados de 2005) en el sitio web de ActiveState.  El ActivePerl 5.8.4 compilación 810 se usó con éxito en la compilación de Perl sobre Symbian.  Los ActivePerl 5.6.x no funcionan.

Otros SDK o compiladores como Visual.NET, la versión de solo línea de comandos de Visual.NET, Borland, GnuPoc o sdk2unix, no se han intentado.

Estas instrucciones, casi con certeza, no funcionarán con versiones anteriores de Symbian u otros SDK.  Naturalmente, son bienvenidos los parches para que esta adaptación funcione en otras versiones, SDK, compiladores, plataformas o dispositivos.

(1) Obtenga el código fuente de una distribución Perl (por ejemplo el archivo perl-5.9.2.tar.gz está bien) desde L<http://www.cpan.org/src/> y desempaquetarlo en su directorio C:/Symbian en su sistema Windows.

(2) Cambie al directorio del código fuente de perl.

    cd c:\Symbian\perl-5.x.x

(3) Ejecute el siguiente script perl que viene con el SDK

    perl symbian\config.pl

Debe usar el cmd.exe; el shell de Cygwin no funcionará.
El PATH debe incluir las herramientas SDK, incluyendo un Perl, que tendría que ser así bajo cmd.exe.  Si no lo tiene así, vea el final de symbian\sdk.pl para ver las notas sobre cómo debe establecer su entorno para la compilación en Symbian.

(4) Compile el proyecto, bien sea con

     make all

en cmd.exe o usando el Metrowerks CodeWarrior o el Visual C++ 6.0 o el Visual Studio 8 (el Visual C++ 2005 Express Edition funciona bien).

Si usa el IDE del VC, tendrá que ejecutar primero F<symbian\config.pl> usando el cmd.exe, y entonces ejecutar 'make win.mf vc6.mf' para generar los archivos makefile y espacios de trabajo de VC6.  "make vc6" compilará para VC6, y "make cw" para CodeWarrior.

Las siguientes configuraciones del SDK y del compilador y teléfonos Nokia se han probado en algún momento (+ = compila y ejecuta PerlApp, - = no), tanto para Perl 5.8.x y 5.9.x:

     SDK     | VC | CW |
     --------+----+----+---
     S60 1.2 | +  | +  | 3650 (*)
     S60 2.0 | +  | +  | 6600
     S60 2.1 | -  | +  | 6670
     S60 2.6 | +  | +  | 6630
     S60 2.8 | +  | +  | (no probado en ningún dispositivo)
     S80 2.6 | -  | +  | 9300
     S90 1.1 | +  | -  | 7710
     UIQ 2.1 | -  | +  | (no probado en ningún dispositivo)

 (*) Compila pero no funciona, desafortunadamente, un problema con Symbian.

Si está usando 'make' directamente, es el GNU make del SDK, e invocará los comandos make correctos para la compilación del emulador de Windows y la compilación Arm ('thumb' por defecto) si es necesario.

Los I<scripts> de compilación asumen el 'estilo absoluto' que el SDK instala bajo C:, mientras que el 'estilo sustitución' no funcionará.

Si usa el IDE del VC, para compilar use, por ejemplo, File->Open Workspace->C:\Symbian\8.0a\S60_2nd_FP2\epoc32\build\symbian\perl\perl\wins\perl.dsw Los binarios del emulador aparecerán en el mismo directorio.

Si usa el IDE de VC, obtendrá un montón de advertencias al comienzo de la compilación porque no se pueden encontrar un montón de archivos de cabecera mencionados por el código fuente, pero esto no es importante ya que esas cabeceras no se utilizan.

El Metrowerks dará un montón de advertencias sobre variables no utilizadas y declaraciones vacías, pero puede ignorarlas.

Cuando las DLL de Windows y Arm DLLs se compilen, no se asuste por la lista de los largos mensajes: es la fase de "exportación congelada" listada en la (bastante larga) API de Perl.

Una vez que termine la compilación necesita crear el archivo DLL SIS con

     make perldll.sis

que creará el archivo perlXYZ.sis (siendo XYZ la versión Perl) que entonces puede instalar en su dispositivo Symbian: una forma fácil de hacerlo es enviarlo por Bluetooth o infrarrojos y simplemente abra los mensajes.

Ya que el tamaño total de todos los archivos Perl SIS una vez instalados es de más de 2 MB, se recomienda instalarlos en una tarjeta de memoria (dispositivo E:) en lugar del dispositivo C:.

El tamaño de perlXYZ.SIS es de unos 370 kB pero una vez instalado en el dispositivo será de unos 750 kB (de acuerdo al gestor de aplicaciones).

El archivo perlXYZ.sis solo incluye Perl DLL: para crear un archivo SIS adicional que incluya algunas bibliotecas estándares (en puro) Perl, lance el comando

     make perllib.sis

Se incluyen algunas de las bibliotecas estándares de Perl, pero no todas: vea L</HISTORIA> o F<symbian\install.cfg> para más detalles (250 kB -> 700 kB).

También están disponibles algunas de las extensiones XS para Perl (vea L</HISTORIA>):

     make perlext.sis

que creará perlXYZext.sis (290 kB -> 770 kB).

Para compilar la aplicación de demostración PerlApp primero necesita instalar las cabeceras Perl que están en el SDK.

Para instalar las cabeceras Perl y la documentación de la clase CPerlBase y así no necesitar más las fuentes Perl para compilar aplicaciones Perl utilizando el SDK:

     make sdkinstall

El directorio destino es C:\Symbian\perl\X.Y.Z.  Para más detalles, vea F<symbian\PerlBase.pod>.

Una vez que se han instalado las cabeceras, puede crear un SIS para la PerlApp:

     make perlapp.sis

El perlapp.sis (11 kB -> 16 kB) se compilará en el subdirectorio symbian, pero también se creará una copia en el directorio principal.

Si quiere empaquetar las DLL Perl (una para WINS, otra para ARMI), las cabeceras y la documentación:

     make perlsdk.zip

que creará perlXYZsdk.zip, que se puede usar en otro sistema Windows con el SDK, sin tener que compilar Perl en ese sistema.

Si quiere empaquetar las fuentes de PerlApp:

     make perlapp.zip

Si quiere empaquetar perl.exe y miniperl.exe, puede usar los objetivos make perlexe.sis y miniperlexe.sis.
Probablemente también querrá tener perllib.sis para las bibliotecas y quizás incluso el perlapp.sis para el reconocedor.

El objetivo make 'allsis' combina todos los objetivos SIS anteriores.

Para limpiar después de la compilación, puede usar cualquiera de estas:

     make clean
     make distclean

dependiendo de cómo quiere que sea la limpieza.

=head2 Problemas de compilación

Si ve esto después de hacer un "make"

    cat makefile.sh >makefile
    'cat' no se reconoce como comando interno o externo,
    programa operable o archivo de lote de comandos.

quiere decir que necesita (re)ejecutar F<symbian\config.pl>.

Si obtiene el error

        'perl' no se reconoce como comando interno o externo,
        programa operable o archivo de lote de comandos.

puede necesitar reinstalar el ActivePerl.

Si vee esto

    ren makedef.pl nomakedef.pl
    El sistema no puede encontrar el archivo especificado.
    C:\Symbian\...\make.exe: [rename_makedef] Error 1 (ignored)

por favor, ignórelo ya que no es nada serio (el proceso de compilación renombra el Perl makedef.pl como nomakedef.pl para evitar confundirlo con un makedef.pl del SDK).

=head2 PerlApp

La aplicación PerlApp demuestra cómo incrustar los intérpretes Perl en una aplicación Symbian.  El elemento "Time" del menú ejecuta el siguiente código Perl: C<print "Ejecutando en ", $^O, "\n", scalar localtime>, el "Oneliner" le permite escribir un código Perl, y el "Run" abre un selector de archivos para seleccionar un archivo Perl para ejecutarlo.

PerlApp también se inicia cuando el "reconocedor Perl" (también incluido e instalado) detecta un archivo Perl activado desde el GUI, y ofrece la posibilidad de instalarlo bajo \Perl (si el archivo Perl está en la bandeja de entrada de la aplicación de mensajería) o ejecutarlo (si el archivo Perl está bajo \Perl).

=head2 sisify.pl

En el subdirectorio symbian existe una utilidad F<sisify.pl> que se puede usar para empaquetar directorios de I<scripts> y bibliotecas Perl en archivos SIS, que se pueden instalar en el dispositivo.  Para ejecutar la utilidad sisify.pl, necesitará tener instaladas las utilidades 'makesis' y 'uidcrc'.  Si no tiene el SDK de Win32, puede intentar, por ejemplo L<http://gnupoc.sourceforge.net/> o L<http://symbianos.org/~andreh/>.

=head2 Usar Perl en Symbian

Lo primero es notar que tiene acceso completo al dispositivo Symbian cuando usa Perl: puede hacerle un montón de daño a su dispositivo (como quitar archivos del sistema) a menos que sea cuidadoso.  Por favor, haga copias de seguridad antes de hacer cualquier cosa.

La adaptación Perl se ha hecho, en su mayor parte, utilizando la biblioteca estándar STDLIB estilo POSIX de Symbian. Es una biblioteca razonablemente completa, pero algunas partes, como la emulación de bibliotecas que tienden a quedarse sin implementar en plataformas no UNIX, se han quedado sin implementar también esta vez: fork(), signals(), id de usuarios y grupos, select() trabajando con sockets, sockets no bloqueantes, y así.
Vea el archivo F<symbian/config.sh> y busque por 'undef' para encontrar las API no soportadas (o desde Perl, use Config).

El sistema de archivos de los dispositivos Symbian usa una sintaxis DOS: "dispositivos" separados de las rutas por un carácter de dos puntos, y barras diagonales inversas por la ruta.  La asignación exacta de los dispositivos es probable que varíe entre plataformas pero, por ejemplo, en las Series 60 podrá ver C: como la memoria (flash) principal, D: como el dispositivo RAM, E: como la tarjeta de memoria (MMC), Z: como la ROM. En las Series 80, D: es la tarjeta de memoria.  Al final, los dispositivos llegan hasta el NUL: es la papelera; los COMx: son las líneas serie; IRCOMx: son los puertos de infrarrojos; TMP: podría ser C:\System\Temp.  Recuerde doblar las barras diagonales inversas en las cadenas entrecomilladas dobles.

La DLL de Perl se instala en \System\Libs\.  Las bibliotecas Perl y extensiones DLL se instalan en \System\Libs\Perl\X.Y.Z\.  La PerlApp se instala en \System\Apps\, y el SIS también instala una pareja de I<scripts> de demostración en \Perl\ (C:\Mydocs\Perl\ en Nokia 7710).

Note que el sistema de archivos Symbian es muy picajoso: prefiere casi siempre el \ en lugar de /.

Cuando esté haciendo programación XS / Symbian C++, incluya siempre las cabeceras Symbian, y luego cualesquiera cabeceras estándares C/POSIX, y luego las cabeceras Perl, y finalmente otras cabeceras de aplicación.

New() y Copy() se utilizan, desgraciadamente, tanto por Symbian como por código Perl, así que tendrá que jugar con el código cpp si los va a necesitar.  PerlBase.h borra las definiciones Perl y las redefine como PerlNew() y PerlCopy().

=head1 TO DO

Muchos.  Vea F<symbian/TODO>.

=head1 ADVERTENCIA

En la adaptación Symbian de Perl versión 0.4.1, cualquier parte de la batería de pruebas de regresión estándar de Perl no se ha ejecutado en un dispositivo Symbian real usando el Perl adaptado, así que una innumerable cantidad de errores pueden estar a la espera.  Por tanto, no hay absolutamente ninguna garantía.

=head1 NOTA

Cuando esté creando o extendiendo las interfaces de programación de aplicaciones (API) para Symbian o Series 60 o Series 80 o Series 90, se sugiere que las marcas registradas o nombres registrados, no se usen como nombres de las API.  En cambio, los desarrolladores deberían considerar basar los nombres de la API en los actuales nombres de los componentes públicos (de C++, o quizás Java) y de la API, modificados según las reglas del lenguaje de programación en que se crea la nueva API.

Nokia es una marca registrada de Nokia Corporation. Los nombres de producto de Nokia son marcas registradas de Nokia.  Otros productos y nombres de compañías mencionadas aquí pueden ser marcas registradas de sus respectivos propietarios.

=head1 AUTOR

Jarkko Hietaniemi

=head1 COPYRIGHT

Copyright (c) 2004-2005 Nokia.  Todos los derechos reservados.

Copyright (c) 2006-2007 Jarkko Hietaniemi.

=head1 LICENCIA

La adaptación Symbian se licencia bajo los mismos términos que el propio Perl.

=head1 HISTORIA

=over 4

=item *

0.1.0: abril 2005

(Esto se mostrará como "0.01" en el instalador Symbian).

 - La ventana de la consola es una consola muy sencilla, de hecho: uno puede 
   obtener la nueva línea con "000" y el botón "C" es un retroceso.
   No espere una terminal capaz de mostrar secuencias vt100 o ANSI.
   La consola también es "ASCII", es decir, no puede entrar cualesquiera caracteres tildados o 
   letras.  Debido a las obvias restricciones físicas, la consola es
   también muy pequeña: (en Nokia 6600) 22 columnas, 17 filas.
 - Están disponibles las siguientes bibliotecas:
   AnyDBM_File AutoLoader base Carp Config Cwd constant
   DynaLoader Exporter File::Spec integer lib strict Symbol
   vars warnings XSLoader
 - Las siguientes extensiones están disponibles:
   attributes Compress::Zlib Cwd Data::Dumper Devel::Peek
   Digest::MD5 DynaLoader Fcntl File::Glob Filter::Util::Call
   IO List::Util MIME::Base64
   PerlIO::scalar PerlIO::via SDBM_File Socket Storable Time::HiRes
 - Faltan las siguientes extensiones por diversas causas técnicas y otras 
   razones:
   B ByteLoader Devel::DProf Devel::PPPort Encode GDBM_File
   I18N::Langinfo IPC::SysV NDBM_File Opcode PerlIO::encoding POSIX
   re Safe Sys::Hostname Sys::Syslog
   threads threads::shared Unicode::Normalize
 - Usar MakeMaker o Module::* para compilar e instalar módulos
   no está soportado.
 - Compilar XS distinta de las que hay en el núcleo, no está soportado.

Ya que es una publicación 0.algo, está casi garantizado que cualquier otra publicación será incompatible a nivel binario.  Como seña de esto, la exportación de símbolos Symbian se mantiene congelada y los archivos .def siempre se recompilan completamente.

=item *

0.2.0: octubre 2005

  - Perl 5.9.3 (nivel de parche 25741)
  - Compress::Zlib e IO::Zlib soportados
  - sisify.pl añadido

Mantenemos la incompatibilidad binaria.

=item *

0.3.0: octubre 2005

  - Perl 5.9.3 (nivel de parche 25911)
  - Series 80 2.0 y UIQ 2.1 soportadas

Mantenemos la incompatibilidad binaria.

=item *

0.4.0: noviembre 2005

  - Perl 5.9.3 (nivel de parche 26052)
  - añadida una extensión Symbian de ejemplo

Mantenemos la incompatibilidad binaria.

=item *

0.4.1: diciembre 2006

  - Perl 5.9.5-etc. (nivel de parche 30002)
  - extensiones añadidas: Compress/Raw/Zlib, Digest/SHA,
    Hash/Util, Math/BigInt/FastCalc, Text/Soundex, Time/Piece
  - adaptación a S90 1.1 por alexander smishlajev

Mantenemos la incompatibilidad binaria.

=item *

0.4.2: marzo 2007

  - en sintonía con Perl 5.9.5-etc. (nivel de parche 30812)
  - comprobado que compila con Microsoft Visual C++ 2005 Express Edition
    (que usa Microsoft Visual C 8, en lugar del viejo VC6),
    SDK utilizado para comprobar S60_2nd_FP3, es decir, 8.1a

Mantenemos la incompatibilidad binaria.

=back

=cut
