<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="3.1.9_4" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>!</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T115040Z" creationid="explorer" creationdate="20150905T115040Z">
        <seg>!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>!=  inequality</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T120430Z">
        <seg>!=  distinto que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"  with spaces at the beginning" );</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T122303Z" creationid="explorer" creationdate="20150513T122303Z">
        <seg>"  con espacios al principio" );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"@INC"			locations of perl libraries</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T202503Z">
        <seg>"@INC"			ubicación de bibliotecas de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Content-Length: $byte_count"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110212T162406Z">
        <seg>"Content-Length: $numero_bytes"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Content-Type: text/plain; charset=UTF-8",</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125209Z">
        <seg>"Content-Type: text/plain; charset=UTF-8",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Hello, world"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233540Z">
        <seg>"Hola a todos"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Perl" is the name of the language.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T205815Z">
        <seg>"Perl" es el nombre del lenguaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"U* not first isn't Unicode" );</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T122636Z" creationid="explorer" creationdate="20150513T122636Z">
        <seg>"U* no es el primer formato, así que no es Unicode" );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"U* produces Unicode" );</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T122231Z" creationid="explorer" creationdate="20150513T122231Z">
        <seg>"U* produce Unicode" );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"We're really serious about reinventing everything that needs reinventing."
--Larry Wall</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T185951Z">
        <seg>"Cuando hablamos de reinventar todo lo que sea necesario, no lo decimos en broma."
--Larry Wall</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T115519Z" creationid="explorer" creationdate="20150905T115519Z">
        <seg>"\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#       SUPER</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160202Z" creationid="explorer" creationdate="20150905T160202Z">
        <seg>#       SUPER</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#       classes</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160152Z" creationid="explorer" creationdate="20150905T160152Z">
        <seg>#       clases primarias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># (they are still accessible as $Some::Module::stuff)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165323Z">
        <seg># (son accesibles mediante $Mi::Modulo::cosa)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># ...</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T173101Z">
        <seg># ...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Functions and variables which are exported by default</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T115749Z">
        <seg># funciones y variables que se exportan de forma predeterminada</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Functions and variables which can be optionally exported</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T115752Z">
        <seg># funciones y variables que se exportan de forma opcional</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># If so, return it...</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T181113Z">
        <seg># si es así, devolverlo...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Inherit from Exporter to export functions and variables</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T115745Z">
        <seg># heredar de Exporter para exportar funciones y variables</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Install DBM Filters</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T131924Z">
        <seg># Instalar filtros DBM</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Is there an attribute of that name?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T181056Z">
        <seg># ¿Existe un atributo con este nombre?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Its title is My Body Is a Cage</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T163218Z">
        <seg># Título: Soy minero</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Remove qualifier from original method name...</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T181040Z">
        <seg># Eliminar el calificador del nombre original del método...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># The file is at /etc/hostname</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200211Z">
        <seg># Ruta del archivo: /etc/hostname</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># The file is at mp3s/My-Body-Is-a-Cage.mp3</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T173921Z">
        <seg># Ruta del archivo: mp3/Soy-minero.mp3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># The file is located at /etc/hostname</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T231554Z">
        <seg># El archivo se encuentra en /etc/hostname</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># This is a comment</seg>
      </tuv>
      <tuv lang="ES">
        <seg># Esto es un comentario</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># This loop reads from STDIN, and prints non-blank lines:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T121857Z">
        <seg># Este bucle lee de STDIN e imprime las líneas que no estén vacías:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># This section is parsed by Porting/pod_lib.pl for use by pod/buildtoc etc</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T131829Z">
        <seg># Porting/pod_lib.pl analiza esta sección, cuyo contenido se usará en pod/buildtoc, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># XXX - this is a terrible way to implement accessors, but it makes</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T180919Z">
        <seg># XXX - esta es una forma pésima de implementar métodos de acceso, </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># a cheap and nasty way to break an email address up into parts</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T120852Z">
        <seg># manera rápida de descomponer una dirección de correo electrónico</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># as Some::Module::func3()</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T115858Z">
        <seg># mediante Mi::Modulo::func3()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># begincheck</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T163644Z">
        <seg># begincheck</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># callable as $priv_func-&gt;();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T115831Z">
        <seg># puede llamarse mediante $func_priv-&gt;();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># exported package globals go here</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T115734Z">
        <seg># las variables globales de paquete exportadas van aquí</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># file-private lexicals go here, before any functions which use them</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165408Z">
        <seg># las variables léxicas privadas del archivo van aquí, antes que las funciones que las usan</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># for a simple example.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T180939Z">
        <seg># pero se puede usar. Veamos un ejemplo sencillo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># here's a file-private function as a closure,</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20121113T233229Z">
        <seg># aquí va una función privada del archivo, como clausura</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># implies:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T162427Z">
        <seg>#implicará:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># in $a</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T115600Z" creationid="explorer" creationdate="20150905T115600Z">
        <seg># en $a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># make all your functions, whether exported or not;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165501Z">
        <seg># incorpore todas sus funciones, exportadas o no;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># non-exported package globals go here</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T115811Z">
        <seg># las variables globales de paquete no exportadas van aquí</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># remember to put something interesting in the {} stubs</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T083506Z">
        <seg># no olvide poner algo interesante entre {} </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># set the version for version checking</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T115739Z">
        <seg># establecer la versión para la comprobación de versión</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># the Perlish post-condition way</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T182219Z">
        <seg># ahora con una condición posterior, al estilo Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># the traditional way</seg>
      </tuv>
      <tuv lang="ES">
        <seg># la manera tradicional</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># this one isn't exported, but could be called directly</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165603Z">
        <seg># esta no se exporta, pero puede llamarse directamente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># this would print with a linebreak in the middle</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T230747Z">
        <seg># esto imprimirá un salto de línea en la mitad de la frase</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># you don't have to use the default $_ either...</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T002742Z">
        <seg># tampoco tiene que usar la variable $_ predeterminada...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#!/usr/bin/env perl</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180350Z">
        <seg>#!/usr/bin/env perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#!/usr/bin/perl</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172834Z">
        <seg>#!/usr/bin/perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#!perl -w</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174108Z">
        <seg>#!perl -w</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$                   end of string</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T235535Z">
        <seg>$                   final de una cadena</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$$l + $$r;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T121502Z" creationid="explorer" creationdate="20150513T121502Z">
        <seg>$$l + $$r;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$ALL_CAPS_HERE   constants only (beware clashes with perl vars!)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111013T143600Z">
        <seg>$TODO_MAYUSCULAS    Solo constantes (procure evitar conflictos con variables perl)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$DB_HASH or die "Cannot open $filename: $!\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150514T160637Z" creationid="explorer" creationdate="20150514T160637Z">
        <seg>$DB_HASH or die "No se puede abrir $archivo: $!\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$IDX = $ST_ATIME 	   if $opt_u;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172719Z">
        <seg>$IDX = $ST_ATIME 	   if $opt_u;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$IDX = $ST_CTIME 	   if $opt_c;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172719Z">
        <seg>$IDX = $ST_CTIME 	   if $opt_c;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$IDX = $ST_MTIME;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172718Z">
        <seg>$IDX = $ST_MTIME;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$IDX = $ST_SIZE  	   if $opt_s;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172724Z">
        <seg>$IDX = $ST_SIZE  	   if $opt_s;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$Some_Caps_Here  package-wide global/static</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111013T143641Z">
        <seg>$Algunas_Mayusculas Ámbito global/estático de paquete</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$Some_package::name = "fred";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T161017Z">
        <seg>$Un_paquete::nombre = "Pedro";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$^H{"myint/in_effect"} = 0;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T213959Z">
        <seg>$^H{"entero/in_effect"} = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$^H{"myint/in_effect"} = 1;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T213954Z">
        <seg>$^H{"entero/in_effect"} = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$a += 1;        # same as $a = $a + 1</seg>
      </tuv>
      <tuv lang="ES">
        <seg>$a += 1;        # igual que $a = $a + 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$a -= 1;        # same as $a = $a - 1</seg>
      </tuv>
      <tuv lang="ES">
        <seg>$a -= 1;        # igual que $a = $a - 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$a .= "\n";     # same as $a = $a .</seg>
      </tuv>
      <tuv lang="ES">
        <seg>$a .= "\n";     # igual que $a = $a .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$a =~ s/foo/bar/;         # replaces foo with bar in $a</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110204T165015Z">
        <seg>$a =~ s/foo/bar/;  # reemplaza foo por bar en $a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$a =~ s/foo/bar/g;        # replaces ALL INSTANCES of foo with bar</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T115553Z" creationid="explorer" creationdate="20150905T115553Z">
        <seg>$a =~ s/foo/bar/g;        # reemplaza TODAS LAS INSTANCIAS de foo por bar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$bar = "some other value";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083214Z">
        <seg>$bar = "otro valor";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$bar = 1;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T233050Z">
        <seg>$bar = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$binary =~ s/\x00\x0F/\xFF\xF0/;  # for the brave :)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110212T161924Z">
        <seg>$binario =~ s/\x00\x0F/\xFF\xF0/;  # para valientes :)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$body = encode('UTF-8', $body);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T214501Z">
        <seg>$cuerpo_texto = encode('UTF-8', $cuerpo_texto);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$c-&gt;speak();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162607Z">
        <seg>$c-&gt;decir();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$cage-&gt;print_info;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T085540Z">
        <seg>$minero-&gt;imprimir_info;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$class-&gt;new();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211147Z">
        <seg>$clase-&gt;new();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$db = tie %hash, 'DBM', ...</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190452Z">
        <seg>$db = tie %hash, 'DBM', ...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$db-&gt;filter_fetch_key  ( sub { $_ = unpack("i", $_) } );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190155Z">
        <seg>$db-&gt;filter_fetch_key  ( sub { $_ = unpack("i", $_) } );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$db-&gt;filter_fetch_key  ( sub { s/\0$//    } );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190130Z">
        <seg>$db-&gt;filter_fetch_key  ( sub { s/\0$//    } );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$db-&gt;filter_fetch_value(</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190132Z">
        <seg>$db-&gt;filter_fetch_value(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$db-&gt;filter_store_key  ( sub { $_ .= "\0" } );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190130Z">
        <seg>$db-&gt;filter_store_key  ( sub { $_ .= "\0" } );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$db-&gt;filter_store_key  ( sub { $_ = pack ("i", $_) } );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190156Z">
        <seg>$db-&gt;filter_store_key  ( sub { $_ = pack ("i", $_) } );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$db-&gt;filter_store_value( sub { $_ .= "\0" } );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190140Z">
        <seg>$db-&gt;filter_store_value( sub { $_ .= "\0" } );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$fh-&gt;autoflush();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211855Z">
        <seg>$archivo-&gt;autoflush();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$fh-&gt;print('content');</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211910Z">
        <seg>$archivo-&gt;print('contenido');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$file-&gt;$method();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T210930Z">
        <seg>$archivo-&gt;$metodo();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$file-&gt;$sub();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211030Z">
        <seg>$archivo-&gt;$sub();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$file-&gt;${ \'save' };</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211046Z">
        <seg>$archivo-&gt;${ \'guardar' };</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$file-&gt;${ \( returns_scalar() ) };</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T214322Z">
        <seg>$archivo-&gt;${ \( devuelve_escalar() ) };</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$file-&gt;${ returns_ref_to_sub_ref() };</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160526Z" creationid="explorer" creationdate="20150905T160526Z">
        <seg>$archivo-&gt;${ devuelve_ref_a_subrutina() };</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$file-&gt;${ returns_scalar_ref() };</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T214313Z">
        <seg>$archivo-&gt;${ devuelve_ref_a_escalar() };</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$file-&gt;print_info("The file is located at ");</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T231547Z">
        <seg>$file-&gt;imprimir_info("El archivo se encuentra en ");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$file-&gt;print_info;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200146Z">
        <seg>$archivo-&gt;imprimir_info;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$fruit_color{"apple"};           # gives "red"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234433Z">
        <seg>$color_fruta{"manzana"};           # devuelve "rojo"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$hash{"$key\0"} = "$value\0";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T145040Z">
        <seg>$hash{"$clave\0"} = "$valor\0";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$hash{"abc"} = "def";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190141Z">
        <seg>$hash{"abc"} = "def";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$hash{12345} = "something";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T224936Z">
        <seg>$hash{12345} = "algo";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$hash{123} = "def";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190202Z">
        <seg>$hash{123} = "def";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$here = Cwd::getcwd();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170724Z">
        <seg>$directorio = Cwd::getcwd();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$here = getcwd();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170729Z">
        <seg>$directorio = getcwd();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$here = getcwd(); 		# oops!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170743Z">
        <seg>$directorio= getcwd(); 		# vaya...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$main::name = "barney";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T161225Z">
        <seg>$main::nombre = "Pablo";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$max;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180441Z">
        <seg>$max;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$mp3-&gt;save();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T161756Z">
        <seg>$mp3-&gt;guardar();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$n = "-12.34e56";	    # number specified as a string</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T222438Z">
        <seg>$n = "-12.34e56";       # número especificado como una cadena</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$n = "1234";	    # number specified as a string</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T222455Z">
        <seg>$n = "1234";            # número especificado como una cadena</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$n = 01234;		    # octal integer</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T222348Z">
        <seg>$n = 01234;             # entero octal</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$n = 0b1110011;	    # binary integer</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T222331Z">
        <seg>$n = 0b1110011;         # entero binario</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$n = 0x1234;	    # hexadecimal integer</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T222410Z">
        <seg>$n = 0x1234;            # entero hexadecimal</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$n = 12.34e-56;	    # exponential notation</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T222424Z">
        <seg>$n = 12.34e-56;         # notación exponencial</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$n = 1234;		    # decimal integer</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T222318Z">
        <seg>$n = 1234;              # entero decimal</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$no_caps_here    function scope my() or local() variables</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111013T143838Z">
        <seg>$sin_mayusculas     Variables definidas con my() o local() en un ámbito de función</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$object-&gt;$meth();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211040Z">
        <seg>$objeto-&gt;$metodo();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$old_filter = $db-&gt;filter_fetch_key  ( sub { ... } );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T111553Z">
        <seg>$filtro_anterior = $db-&gt;filter_fetch_key  ( sub { ... } );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$old_filter = $db-&gt;filter_fetch_value( sub { ... } );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T111559Z">
        <seg>$filtro_anterior = $db-&gt;filter_fetch_value( sub { ... } );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$old_filter = $db-&gt;filter_store_key  ( sub { ... } );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T111545Z">
        <seg>$filtro_anterior = $db-&gt;filter_store_key  ( sub { ... } );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$old_filter = $db-&gt;filter_store_value( sub { ... } );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T111550Z">
        <seg>$filtro_anterior = $db-&gt;filter_store_value( sub { ... } );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$pod-&gt;save();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T160219Z">
        <seg>$pod-&gt;guardar();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$self-&gt;SUPER::print_info();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185120Z">
        <seg>$self-&gt;SUPER::imprimir_info();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$self-&gt;SUPER::save();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162156Z">
        <seg>$self-&gt;SUPER::guardar();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$self-&gt;SUPER::speak();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162528Z">
        <seg>$self-&gt;SUPER::decir();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$self-&gt;_initialize();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120726T094709Z">
        <seg>$self-&gt;_inicializar();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$self-&gt;is_on(0);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185406Z">
        <seg>$self-&gt;encendido(0);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$self-&gt;is_on(1);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185402Z">
        <seg>$self-&gt;encendido(1);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$self-&gt;save();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211018Z">
        <seg>$self-&gt;guardar();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$self-&gt;{handle}-&gt;close() if $self-&gt;{handle};</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T214623Z">
        <seg>$self-&gt;{controlador}-&gt;cerrar() if $self-&gt;{controlador};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$self-&gt;{handle}-&gt;close();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T230728Z">
        <seg>$self-&gt;{controlador}-&gt;cerrar();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$self-&gt;{path} = shift;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160510Z" creationid="explorer" creationdate="20150905T160436Z">
        <seg>$self-&gt;{ruta} = shift;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$sq = square(8);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T235518Z">
        <seg>$sq = cuadrado(8);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$text = ucfirst $text;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T221854Z">
        <seg>$texto = ucfirst $texto;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$text =~ s/foo/bar/;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T221858Z">
        <seg>$texto =~ s/foo/bar/;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$thing-&gt;SUPER::save();   # Okay: looks for save() method in parent</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160146Z" creationid="explorer" creationdate="20150905T160146Z">
        <seg>$algo-&gt;SUPER::guardar(); # CORRECTO: busca el método guardar() en las</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$time_for{$self} = time;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T214849Z">
        <seg>$hora_para{$self} = time;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$var = "value";</seg>
      </tuv>
      <tuv lang="ES">
        <seg>$var = "valor";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$verbose &amp;&amp; print "Starting analysis\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T100103Z">
        <seg>$verbose &amp;&amp; print "Iniciando análisis\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>% perl -V</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T171112Z">
        <seg>% perl -V</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>% perl -le 'print for @INC'</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T171303Z">
        <seg>% perl -le 'print for @INC'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>% perl -lne 'print if /^[^\/]+\.[ch]\s+/' MANIFEST</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194037Z">
        <seg>% perl -lne 'print if /^[^\/]+\.[ch]\s+/' MANIFEST</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>%some_hash = ();			# can't be my()</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T180750Z">
        <seg>%mi_hash = ();			# no puede ser my()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;&amp;  and</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125311Z">
        <seg>&amp;&amp;  and</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>'::', *{$glob}{NAME}, "\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T140244Z" creationid="explorer" creationdate="20150905T140244Z">
        <seg>'::', *{$glob}{NAME}, "\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>'Class'-&gt;new()</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211137Z">
        <seg>'Clase'-&gt;new()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Actually Perl usually
assumes the representation is ASCII; see L&lt;/Why do regex character classes
sometimes match only in the ASCII range?&gt; above.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120511T210525Z">
        <seg>(En realidad, generalmente Perl supone que la representación es ASCII; vea la sección L&lt;/¿Por qué algunas veces las clases de caracteres de expresiones regulares solo detectan caracteres ASCII?&gt; anterior).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Assignments to C&lt;$SIG{}&gt;, however, assume the signal
handler specified is in the C&lt;main&gt; package.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T122956Z">
        <seg>(sin embargo, las asignaciones a C&lt;$SIG{}&gt; suponen que el controlador de señal especificado está en el paquete C&lt;main&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(But be aware that this means you can't have a separate
C&lt;@foo&gt; and C&lt;@bar&gt;, etc.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T112437Z">
        <seg>(pero tenga en cuenta que esto significa que no puede disponer de C&lt;@foo&gt; y C&lt;@bar&gt; independientes, etc.).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(But in practice, the
distinction between code point and character is blurred, so the terms often
are used interchangeably.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110403T225516Z">
        <seg>En la práctica, la distinción entre los conceptos de código de carácter y carácter es difusa, por lo que se suelen utilizar ambos términos indistintamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(But perhaps originally it was internally encoded
as UTF-8, when you dumped it.) When it has to give that up because other
characters are added to the text string, it silently upgrades the string to
UTF-8.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T090553Z">
        <seg>(aunque la codificación interna de la cadena podría ser UTF-8 originalmente, cuando se volcó). Si se agregan otros caracteres a la cadena de texto y Perl tiene que renunciar a esta codificación, "promueve" la cadena a UTF-8 sin avisar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(But realize that what we are discussing the rules for just the
I&lt;storage&gt; of these numbers.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T193506Z">
        <seg>(Pero no olvide que lo que estamos describiendo son solo las normas del I&lt;almacenamiento&gt; de estos números.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(C&lt;MANPAGER&gt; is not used if C&lt;perldoc&gt; was told to display
plain text or unformatted pod.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T201705Z">
        <seg>(no se usará C&lt;MANPAGER&gt; si se configuró C&lt;perldoc&gt; para mostrar texto simple o texto sin formato).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(C&lt;and&gt;, C&lt;or&gt; and C&lt;not&gt; aren't just in the above table as descriptions
of the operators.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T225057Z">
        <seg>(En la tabla anterior C&lt;and&gt;, C&lt;or&gt; y C&lt;not&gt; no son solo descripciones de los operadores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Don't forget to
document your guess with a comment.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T001105Z">
        <seg>(y no olvide agregar un comentario para documentar su conjetura).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Don't judge me.)</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T214645Z" creationid="explorer" creationdate="20160506T214645Z">
        <seg>(Sobre gustos no hay nada escrito).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Don't worry about that C&lt;&lt; -&gt; &gt;&gt; operator, it will be explained
later.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195809Z">
        <seg>(No se preocupe por el operador C&lt;&lt; -&gt; &gt;&gt;; se explicará más adelante).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(I&lt;"Rounding to zero".&gt;)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T195620Z">
        <seg>(I&lt;"Redondeo a cero"&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(I&lt;Loss of information&gt;)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T193713Z">
        <seg>(I&lt;Pérdida de información&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(If it's text
data.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T223703Z">
        <seg>(si son datos de tipo texto).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(In a script passed to Perl via B&lt;-e&gt; switches, each
B&lt;-e&gt; is counted as one line.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T210259Z">
        <seg>(En un script pasado a Perl a través de modificadores B&lt;-e&gt;, cada B&lt;-e&gt; cuenta como una línea).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(In addition, if running under HP-UX,
C&lt;col -x&gt; will be used.) This is primarily used for the documentation for
the perl library modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T195650Z">
        <seg>(en HP-UX se usa además C&lt;col -x&gt;). Este programa se usa principalmente para consultar la documentación de los módulos de biblioteca de perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Note that this utility requires the
C&lt;Text::Diff&gt; module to function properly; this module isn't distributed
with perl, but is available from the CPAN.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T235833Z">
        <seg>(Tenga en cuenta que esta utilidad requiere el módulo C&lt;Text::Diff&gt; para funcionar correctamente; este módulo no se distribuye con perl, pero está disponible en CPAN).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Remember that if you do this, you'll have to
put C&lt;use lib "/my/perl_directory";&gt; near the top of the program that
is to use this module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000304Z">
        <seg>(Recuerde que si hace esto, tendrá que agregar C&lt;use lib "/mi/directorio_perl";&gt; cerca del principio de los programas que utilicen este módulo).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Replace "Foo" with the name of the module; for
instance, C&lt;perl -MCGI::Carp -e 1&gt;.)</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T121958Z" creationid="explorer" creationdate="20150513T121958Z">
        <seg>(Sustituya "Foo" por el nombre del módulo; por
ejemplo, C&lt;perl -MCGI::Carp -e 1&gt;.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(So if C&lt;textsize&gt; expects an integer, and you do C&lt;-w textsize:big&gt;,
expect trouble.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T200858Z">
        <seg>(si C&lt;textsize&gt; espera un entero y se especifica C&lt;-w textsize:big&gt;, lo más seguro es que se produzca un error).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Some operating system distributions may ship the documentation in a different
package; for instance, on Debian, you need to install the C&lt;perl-doc&gt; package.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T151614Z">
        <seg>(Las distribuciones para algunos sistemas operativos pueden incluir la documentación en un paquete distinto; por ejemplo, en Debian, debe instalar el paquete C&lt;perl-doc&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The above documents supersede the collection of tricks that was formerly here
in perlbot.)</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150514T160314Z" creationid="explorer" creationdate="20150514T160303Z">
        <seg>(Estos documentos sustituyen al tutorial que se incluía anteriormente
en perlbot).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The above documents supersede the tutorial that was formerly here in
perlboot.)</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150514T160207Z" creationid="explorer" creationdate="20150514T160207Z">
        <seg>(Estos documentos sustituyen al tutorial que se incluía anteriormente en
perlboot).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The above documents supersede the tutorial that was formerly here in
perltooc.)</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T115859Z" creationid="explorer" creationdate="20150513T115859Z">
        <seg>(Estos documentos sustituyen al tutorial que se incluía anteriormente en
perltooc).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The above documents supersede the tutorial that was formerly here in
perltoot.)</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T115709Z" creationid="explorer" creationdate="20150513T115709Z">
        <seg>(Estos documentos sustituyen al tutorial que se incluía anteriormente en
perltoot).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The binmode is needed because otherwise Perl may convert line endings on Win32
systems.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T004010Z">
        <seg>(la función binmode es necesaria para evitar que, en sistemas Win32, Perl convierta los caracteres de fin de línea).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The latter is so that embedded pods for executables, such as
C&lt;perldoc&gt; itself, are available.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T201638Z">
        <seg>(esta última hace que esté disponible la documentación pod incluida en ejecutables, como C&lt;perldoc&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The to-do list used to be here in perltodo.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160429T221715Z" creationid="explorer" creationdate="20160429T221715Z">
        <seg>(La lista de tareas pendientes solía estar aquí, en perltodo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(These used to live in
t/op).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T211122Z">
        <seg>(antes estaban en t/op).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(This doesn't apply to sysread()
and syswrite().)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T173954Z">
        <seg>(esto no se aplica a sysread() ni a syswrite()).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(This is one of the
requirements of C&lt;use strict;&gt;.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T160521Z">
        <seg>(Éste es uno de los requisitos de C&lt;use strict;&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(This start line assumes you have the B&lt;env&gt; program.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T001820Z">
        <seg>(En esta línea se supone que dispone del programa B&lt;env&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(When it's not
some other encoding.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T223219Z">
        <seg>(cuando no es otra codificación).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Why do we have separate numeric and string comparisons?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T182452Z">
        <seg>¿Por qué se usa un operador de comparación para números y otro para cadenas?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Yes, this really can make a difference.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T084256Z">
        <seg>(Sí, esto realmente puede suponer una diferencia).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(contributed by brian d foy)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110223T110722Z">
        <seg>(contribución de brian d foy)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(foo|bar|baz)       matches any of the alternatives specified</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T121727Z">
        <seg>(foo|bar|baz)       cualquiera de las alternativas especificadas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T171424Z">
        <seg>);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*                   zero or more of the previous thing</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230532Z">
        <seg>*                   cero o más coincidencias de lo anterior</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*   multiplication</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T235210Z">
        <seg>*   multiplicación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*PI = \3.14159265358979;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231333Z">
        <seg>*PI = \3.14159265358979;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*dick = *richard;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T151216Z">
        <seg>*bea = *beatriz;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*dick = \$richard;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T151341Z">
        <seg>*bea = \$beatriz;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*foo = *bar;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T232951Z">
        <seg>*foo = *bar;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*foo = \$bar;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T232952Z">
        <seg>*foo = \$bar;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*foo = \$bar;       # Make $foo an alias for $bar</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T151556Z">
        <seg>*foo = \$bar;       # Hace que $foo sea un alias de $bar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*some_hash = fn( \%another_hash );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T112652Z">
        <seg>*mi_hash = fn( \%otro_hash );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+                   one or more of the previous thing</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230543Z">
        <seg>+                   una o más coincidencias de lo anterior</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+      SvUTF8_on(cat);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231220Z">
        <seg>+      SvUTF8_on(cat);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+   addition</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T235206Z">
        <seg>+   suma</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+  char *patcopy;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231220Z">
        <seg>+  char *patcopy;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+  if (datumtype == 'U' &amp;&amp; pat==patcopy+1)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231235Z">
        <seg>+  if (datumtype == 'U' &amp;&amp; pat==patcopy+1)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>+  patcopy = pat;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231227Z">
        <seg>+  patcopy = pat;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>-   subtraction</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T235208Z">
        <seg>-   resta</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>-------------------------------------------------------------------------</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T211245Z">
        <seg>-------------------------------------------------------------------------</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--author="Your Name" --email=yourname@cpan.org</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T153124Z">
        <seg>--author="Su nombre" --email=sunombre@cpan.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T180358Z">
        <seg>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>..</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190054Z">
        <seg>..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>...</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172439Z">
        <seg>...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>... and run the script as F&lt;/path/to/script.pl&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T114230Z" creationid="explorer" creationdate="20150905T114230Z">
        <seg>... y ejecutar el script como F&lt;/path/to/script.pl&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>... except inside quoted strings:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T230706Z">
        <seg>... salvo cuando está entre comillas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>...)</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T115629Z" creationid="explorer" creationdate="20150905T115629Z">
        <seg>...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/                    \</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160249Z" creationid="explorer" creationdate="20150905T160249Z">
        <seg>/                    \</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/   division</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T235212Z">
        <seg>/   división</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/(\d\s){3}/         three digits, each followed by a whitespace</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T120313Z" creationid="explorer" creationdate="20150905T120313Z">
        <seg>/(\d\s){3}/         tres dígitos, cada uno seguido de un espacio</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/(a.)+/             matches a string in which every odd-numbered</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T120327Z" creationid="explorer" creationdate="20150905T120327Z">
        <seg>/(a.)+/             cadena en la que cada letra impar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/^$/                nothing in the string (start and end are</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T120227Z" creationid="explorer" creationdate="20150905T120227Z">
        <seg>/^$/                cadena vacía (principio y final</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/^\d+/              string starts with one or more digits</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T235606Z">
        <seg>/^\d+/              cadena que empieza por uno o varios dígitos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125154Z">
        <seg>1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193816Z">
        <seg>1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1;  # don't forget to return a true value from the file</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T083538Z">
        <seg>1;  # no olvide devolver un valor verdadero desde este archivo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125155Z">
        <seg>2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2/10850 subtests failed, 99.98% okay.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T211256Z">
        <seg>2/10850 subtests failed, 99.98% okay.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125155Z">
        <seg>3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4-column indent.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T184409Z">
        <seg>Sangría de 4 columnas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8 tests and 24 subtests skipped.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T211250Z">
        <seg>8 tests and 24 subtests skipped.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172806Z">
        <seg>;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;   less than</seg>
      </tuv>
      <tuv lang="ES">
        <seg>&lt;   menor que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;=  less than or equal</seg>
      </tuv>
      <tuv lang="ES">
        <seg>&lt;=  menor o igual que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=   assignment</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=   asignación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>==  equality</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T120408Z">
        <seg>==  igual que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=back</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172744Z">
        <seg>=back</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=begin buildtoc</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T131137Z">
        <seg>=begin buildtoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=cut</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191359Z">
        <seg>=cut</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=encoding utf8</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172415Z">
        <seg>=encoding utf8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=end buildtoc</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T131122Z">
        <seg>=end buildtoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=for buildtoc __END__</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T134606Z">
        <seg>=for buildtoc __END__</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=for buildtoc flag +r</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T134551Z">
        <seg>=for buildtoc flag +r</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=for buildtoc flag -r</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T131229Z">
        <seg>=for buildtoc flag -r</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=for comment
Consistent formatting of this file is achieved with:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T184709Z">
        <seg>=for comment
Para aplicar un formato uniforme a este archivo, use:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 A basic example</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T221009Z">
        <seg>=head1 Ejemplo básico</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 ACKNOWLEDGEMENTS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T171351Z">
        <seg>=head1 AGRADECIMIENTOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 AUTHOR</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T232605Z">
        <seg>=head1 AUTOR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 AUTHOR AND COPYRIGHT</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T214143Z">
        <seg>=head1 AUTOR Y COPYRIGHT</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 AUTHORS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T155536Z">
        <seg>=head1 AUTORES</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 AVAILABILITY</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T224614Z">
        <seg>=head1 DISPONIBILIDAD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 BUGS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T171504Z">
        <seg>=head1 ERRORES</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 CHANGES</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190908Z">
        <seg>=head1 CAMBIOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 CONCLUSION</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194014Z">
        <seg>=head1 CONCLUSIÓN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 COPYRIGHT</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174051Z">
        <seg>=head1 COPYRIGHT</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Caching</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T225243Z">
        <seg>=head1 Almacenamiento en caché</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Callbacks</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T131523Z">
        <seg>=head1 Retrollamadas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 DATE</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T131444Z">
        <seg>=head1 FECHA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 DESCRIPTION</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head1 DESCRIPCIÓN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 DIAGNOSTICS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T202516Z">
        <seg>=head1 DIAGNÓSTICO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 ENVIRONMENT</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T224600Z">
        <seg>=head1 ENTORNO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 EXAMPLE OF A SIMPLE PATCH</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T152654Z">
        <seg>=head1 EJEMPLO DE PARCHE SENCILLO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Examples</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T232313Z">
        <seg>=head1 Ejemplos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 FILES</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T223407Z">
        <seg>=head1 ARCHIVOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 FINDING YOUR WAY AROUND</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110816T110724Z">
        <seg>=head1 ORIENTACIÓN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Flavors of Perl numeric operations</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T194840Z">
        <seg>=head1 Tipos de operaciones numéricas en Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 GETTING HELP</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T174634Z">
        <seg>=head1 CÓMO OBTENER AYUDA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 HEY</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T185058Z">
        <seg>=head1 UNA COSA MÁS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 INTERNALS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T010118Z">
        <seg>=head1 COMPONENTES INTERNOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Implementation details</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110819T102042Z">
        <seg>=head1 Detalles de la implementación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Key naming</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T142655Z">
        <seg>=head1 Nomenclatura de claves</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 LIST OF UTILITIES</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194334Z">
        <seg>=head1 LISTA DE UTILIDADES</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 NAME</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111030T190646Z">
        <seg>=head1 NOMBRE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 NAME
X&lt;object&gt; X&lt;OOP&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T202322Z">
        <seg>=head1 NOMBRE
X&lt;object&gt; X&lt;objeto&gt; X&lt;OOP&gt; X&lt;POO&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 NOTES</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T223427Z">
        <seg>=head1 NOTAS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Numeric operators and numeric conversions</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T192104Z">
        <seg>=head1 Operadores numéricos y conversiones numéricas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 OBJECT-ORIENTED FUNDAMENTALS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195257Z">
        <seg>=head1 FUNDAMENTOS DE LA ORIENTACIÓN A OBJETOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 OPTIONS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T074008Z">
        <seg>=head1 OPCIONES</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 PERL OO SYSTEMS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T224903Z">
        <seg>=head1 SISTEMAS ORIENTADOS A OBJETOS EN PERL</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 PORTABILITY</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010025Z">
        <seg>=head1 PORTABILIDAD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Q and A</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195258Z">
        <seg>=head1 Preguntas y respuestas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Q and A (or FAQ)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T200226Z">
        <seg>=head1 Preguntas y respuestas (o P+F)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 SECURITY</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190855Z">
        <seg>=head1 SEGURIDAD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 SEE ALSO</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T155609Z">
        <seg>=head1 VEA TAMBIÉN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 SUMMARY</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T222340Z">
        <seg>=head1 RESUMEN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 SYNOPSIS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T154324Z">
        <seg>=head1 SINOPSIS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 Storing numbers</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T192511Z">
        <seg>=head1 Cómo se almacenan los números</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head1 VERSION</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T105538Z" creationid="explorer" creationdate="20150905T105538Z">
        <seg>=head1 VERSIÓN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 $^X doesn't always contain a full path in FreeBSD</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T231922Z">
        <seg>=head2 En FreeBSD, $^X no siempre contiene una ruta de acceso completa</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 A Class is Simply a Package
X&lt;class&gt; X&lt;package&gt; X&lt;@ISA&gt; X&lt;inheritance&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083409Z">
        <seg>=head2 Una clase no es más que un paquete
X&lt;class&gt; X&lt;clase&gt; X&lt;package&gt; X&lt;paquete&gt; X&lt;@ISA&gt; X&lt;inheritance&gt; X&lt;herencia&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 A Method is Simply a Subroutine
X&lt;method&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T155842Z">
        <seg>=head2 Un método no es más que una subrutina
X&lt;method&gt; X&lt;método&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 A note on freshness</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110604T230627Z">
        <seg>=head2 ¿Está la lista al día?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 AUTOLOAD
X&lt;AUTOLOAD&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T084217Z">
        <seg>=head2 AUTOLOAD
X&lt;AUTOLOAD&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Administration</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194430Z">
        <seg>=head2 Administración</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 An Aside About Smarter and Safer Code</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T001800Z">
        <seg>=head2 Un inciso sobre cómo crear código más sólido y seguro</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 An Example: the NULL termination problem.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T160043Z">
        <seg>=head2 Ejemplo: el problema de la terminación de cadenas con un carácter NULL</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 An Object is Simply a Data Structure
X&lt;object&gt; X&lt;bless&gt; X&lt;constructor&gt; X&lt;new&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T233411Z">
        <seg>=head2 Un objeto es simplemente una estructura de datos
X&lt;object&gt; X&lt;bless&gt; X&lt;constructor&gt; X&lt;new&gt; X&lt;objeto&gt; X&lt;bendecir&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Another Example: Key is a C int.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T160054Z">
        <seg>=head2 Otro ejemplo: las claves son enteros de C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Attributes</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193918Z">
        <seg>=head2 Atributos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Attributes
X&lt;attribute&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T204407Z">
        <seg>=head2 Atributos
X&lt;attribute&gt; X&lt;atributo&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 BEGIN, UNITCHECK, CHECK, INIT and END
X&lt;BEGIN&gt; X&lt;UNITCHECK&gt; X&lt;CHECK&gt; X&lt;INIT&gt; X&lt;END&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011106Z">
        <seg>=head2 BEGIN, UNITCHECK, CHECK, INIT y END
X&lt;BEGIN&gt; X&lt;UNITCHECK&gt; X&lt;CHECK&gt; X&lt;INIT&gt; X&lt;END&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Basic syntax overview</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head2 Descripción general de la sintaxis básica</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Build system</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080516Z">
        <seg>=head2 Sistema de compilación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Builtin operators and functions</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T122806Z">
        <seg>=head2 Funciones y operadores predefinidos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 C code</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193959Z">
        <seg>=head2 Código C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 C&lt;bless&gt;, C&lt;blessed&gt;, and C&lt;ref&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T160235Z">
        <seg>=head2 C&lt;bless&gt;, C&lt;blessed&gt; y C&lt;ref&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Calendar of Perl Events</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T224659Z">
        <seg>=head2 Calendario de eventos Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Can I do [task] in Perl?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110227T194914Z">
        <seg>=head2 ¿Puedo hacer [tarea] en Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Can I use Unicode in my Perl sources?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T005700Z">
        <seg>=head2 ¿Puedo usar Unicode en mi código fuente Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Class</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T170701Z">
        <seg>=head2 Clase</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Class::Accessor</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193757Z">
        <seg>=head2 Class::Accessor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Class::Tiny</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T124957Z" creationid="explorer" creationdate="20150905T124957Z">
        <seg>=head2 Class::Tiny</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Composition</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194239Z">
        <seg>=head2 Composición</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Conditional and looping constructs</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234706Z">
        <seg>=head2 Estructuras condicionales y de bucle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Conventions</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T151759Z">
        <seg>=head2 Congresos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Converters</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194414Z">
        <seg>=head2 Conversores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Core modules</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T190027Z">
        <seg>=head2 Módulos integrados en el núcleo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Data::Dumper doesn't restore the UTF8 flag; is it broken?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T005107Z">
        <seg>=head2 Data::Dumper no restaura la marca UTF8. ¿Es esto un error?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Definitions</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T221634Z">
        <seg>=head2 Definiciones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Destructors
X&lt;destructor&gt; X&lt;DESTROY&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T181709Z">
        <seg>=head2 Destructores
X&lt;destructor&gt; X&lt;DESTROY&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Development</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194308Z">
        <seg>=head2 Desarrollo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Documentation</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194340Z">
        <seg>=head2 Documentación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Documenting the patch</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T233816Z">
        <seg>=head2 Documentar el parche</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Encapsulation</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185132Z">
        <seg>=head2 Encapsulación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 F&lt;AUTHORS&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080337Z">
        <seg>=head2 F&lt;AUTHORS&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 F&lt;MANIFEST&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080345Z">
        <seg>=head2 F&lt;MANIFEST&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Files and I/O</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T232159Z">
        <seg>=head2 Archivos y E/S</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Free (as in beer) books</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T162752Z">
        <seg>=head2 Libros gratuitos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 FreeBSD core dumps from readdir_r with ithreads</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T221940Z">
        <seg>=head2 FreeBSD vuelca la memoria de trabajo desde readdir_r con ithreads</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 General tools</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T160428Z">
        <seg>=head2 Herramientas de propósito general</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Get your book listed</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110526T104900Z">
        <seg>=head2 Cómo incluir su libro en la lista</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Hackathons</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T161949Z">
        <seg>=head2 Hackathons</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Hacking tools and documentation</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204308Z">
        <seg>=head2 Herramientas y documentación para «hackear»</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 How can I convince others to use Perl?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T214049Z">
        <seg>=head2 ¿Cómo puedo animar a otros programadores a probar Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 How can I determine if a string is a text string or a binary string?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T005943Z">
        <seg>=head2 ¿Cómo se puede determinar si una cadena es una cadena de texto o una cadena binaria?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 How can I get a binary version of Perl?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211106Z">
        <seg>=head2 ¿Cómo puedo obtener una versión binaria de perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 How do I convert from encoding FOO to encoding BAR?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T233311Z">
        <seg>=head2 ¿Cómo puedo pasar de la codificación A a la codificación B?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 How does Perl compare with other languages like Java, Python, REXX, Scheme, or Tcl?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110223T113159Z">
        <seg>=head2 ¿Cómo es Perl en comparación con otros lenguajes como Java, Python, REXX, Scheme o Tcl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 How often are new versions of Perl released?</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T115700Z" creationid="explorer" creationdate="20160505T105323Z">
        <seg>=head2 ¿Con qué frecuencia se lanzan nuevas versiones de Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 How stable is Perl?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110223T111823Z">
        <seg>=head2 ¿Es Perl estable?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 I copied the Perl binary from one machine to another, but scripts don't work.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T212006Z">
        <seg>=head2 He copiado el binario perl de una máquina a otra, pero los scripts no funcionan.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 I don't have a C compiler.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T090312Z">
        <seg>=head2 No dispongo de un compilador de C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 I grabbed the sources and tried to compile but gdbm/dynamic loading/malloc/linking/... failed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T151404Z">
        <seg>=head2 He descargado el código fuente y he intentado compilarlo, pero se produjo un error en el proceso de gdbm/carga dinámica/asignación de memoria/vinculación/...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 I lost track; what encoding is the internal format really?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120423T141106Z">
        <seg>=head2 Me he perdido. ¿Qué codificación se usa realmente para el formato interno?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 I/O flow (the actual 5 minute tutorial)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T223204Z">
        <seg>=head2 Flujo de E/S (el auténtico tutorial, en 5 minutos)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 IRC</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T224740Z">
        <seg>=head2 IRC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Inheritance</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193902Z">
        <seg>=head2 Herencia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Inheritance
X&lt;inheritance&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T161356Z">
        <seg>=head2 Herencia
X&lt;inheritance&gt; X&lt;herencia&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Inside-Out objects</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T200553Z">
        <seg>=head2 Objetos I&lt;Inside-Out&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Installation</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194515Z">
        <seg>=head2 Instalación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Internals and C Language Interface</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T235649Z">
        <seg>=head2 Componentes e interfaz con el lenguaje C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Invoking Class Methods
X&lt;invocation&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211936Z">
        <seg>=head2 Invocación de métodos de clase
X&lt;invocation&gt; X&lt;invocación&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Is Perl difficult to learn?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T214307Z">
        <seg>=head2 ¿Es difícil aprender a programar en Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Is there a way to automatically decode or encode?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T010758Z">
        <seg>=head2 ¿Existe alguna manera de descodificar o codificar automáticamente?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Is this the document you were after?</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T140022Z" creationid="explorer" creationdate="20150905T140022Z">
        <seg>=head2 ¿Es este el documento que buscaba?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Known Problems with Perl on Hurd</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T210935Z">
        <seg>=head2 Problemas conocidos de Perl en Hurd</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Language-Specific</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T224858Z">
        <seg>=head2 Idiomas específicos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Mailing Lists and Newsgroups</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T224712Z">
        <seg>=head2 Listas de correo y grupos de noticias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Making your module threadsafe
X&lt;threadsafe&gt; X&lt;thread safe&gt;
X&lt;module, threadsafe&gt; X&lt;module, thread safe&gt;
X&lt;CLONE&gt; X&lt;CLONE_SKIP&gt; X&lt;thread&gt; X&lt;threads&gt; X&lt;ithread&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T085410Z">
        <seg>=head2 Crear módulos seguros para hilos de ejecución
X&lt;threadsafe&gt; X&lt;thread safe&gt; X&lt;seguro para hilos de ejecución&gt;
X&lt;module, threadsafe&gt; X&lt;module, thread safe&gt; X&lt;seguro para hilos de ejecución&gt;
X&lt;CLONE&gt; X&lt;CLONE_SKIP&gt; X&lt;thread&gt; X&lt;hilo de ejecución&gt; X&lt;threads&gt; X&lt;hilos de ejecución&gt; X&lt;ithread&gt; X&lt;hilo de ejecución de intérprete&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Method Call Variations
X&lt;method&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T210721Z">
        <seg>=head2 Variantes en las llamadas a los métodos
X&lt;method&gt; X&lt;método&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Method Invocation
X&lt;invocation&gt; X&lt;method&gt; X&lt;arrow&gt; X&lt;&lt; -&gt; &gt;&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T160042Z">
        <seg>=head2 Invocación de métodos
X&lt;invocation&gt; X&lt;invocación&gt; X&lt;method&gt; X&lt;método&gt; X&lt;arrow&gt; X&lt;flecha&gt; X&lt;&lt; -&gt; &gt;&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Methods</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193941Z">
        <seg>=head2 Métodos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Miscellaneous</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T223936Z">
        <seg>=head2 Varios</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Moose</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193845Z">
        <seg>=head2 Moose</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Non-Hash Objects</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T200140Z">
        <seg>=head2 Objetos no basados en hash</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 OO Perl</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head2 Perl orientado a objetos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 OO System Summary</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T105111Z">
        <seg>=head2 Resumen de sistemas de orientación a objetos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Object</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194444Z">
        <seg>=head2 Objeto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 OpenBSD core dumps from getprotobyname_r and getservbyname_r with ithreads</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T202226Z">
        <seg>=head2 OpenBSD vuelca la memoria de trabajo desde getprotobyname_r y getservbyname_r con ithreads</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Other OO Systems</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194029Z">
        <seg>=head2 Otros sistemas de orientación a objetos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Other interesting, non-Perl books</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110604T225809Z">
        <seg>=head2 Otros libros interesantes (no específicos de Perl)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Overview</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T175034Z">
        <seg>=head2 Introducción</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 PREAMBLE</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T184728Z">
        <seg>=head2 PREÁMBULO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Packages
X&lt;package&gt; X&lt;namespace&gt; X&lt;variable, global&gt; X&lt;global variable&gt; X&lt;global&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T232116Z">
        <seg>=head2 Paquetes
X&lt;package&gt; X&lt;paquete&gt; X&lt;namespace&gt; X&lt;espacio de nombres&gt; X&lt;variable, global&gt; X&lt;global, variable&gt; X&lt;global variable&gt; X&lt;variable global&gt; X&lt;global&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Perl Books</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T000449Z">
        <seg>=head2 Libros sobre Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Perl Classes
X&lt;class&gt; X&lt;@ISA&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T164151Z">
        <seg>=head2 Clases en Perl
X&lt;class&gt; X&lt;clase&gt; X&lt;@ISA&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Perl Modules
X&lt;module&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011553Z">
        <seg>=head2 Módulos Perl
X&lt;module&gt; X&lt;módulo&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Perl variable types</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233922Z">
        <seg>=head2 Tipos de variables de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Platform-Specific</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T202216Z">
        <seg>=head2 Información específica de plataformas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Polymorphism</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193910Z">
        <seg>=head2 Polimorfismo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Pseudo-hashes</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T183838Z">
        <seg>=head2 Seudohashes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Reference Manual</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T224310Z">
        <seg>=head2 Manual de referencia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 References</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T162349Z">
        <seg>=head2 Referencias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Regular expressions</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head2 Expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Role::Tiny</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194043Z">
        <seg>=head2 Role::Tiny</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Roles</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194231Z">
        <seg>=head2 Roles</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Running Perl programs</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T000713Z">
        <seg>=head2 Ejecución de programas Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Safety net</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T235813Z">
        <seg>=head2 Red de seguridad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Special Topics</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110526T104309Z">
        <seg>=head2 Temas especiales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Step-by-step: Distributing your module</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T181617Z">
        <seg>=head2 Paso a paso: distribuir el módulo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Step-by-step: Making the module</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T182636Z">
        <seg>=head2 Paso a paso: crear el módulo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Step-by-step: Preparing the ground</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T215924Z">
        <seg>=head2 Paso a paso: hacer los preparativos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Stubs for Deleted Documents</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T131657Z">
        <seg>=head2 Avisos sobre documentos eliminados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Submit</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T234210Z">
        <seg>=head2 Enviar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Symbol Tables
X&lt;symbol table&gt; X&lt;stash&gt; X&lt;%::&gt; X&lt;%main::&gt; X&lt;typeglob&gt; X&lt;glob&gt; X&lt;alias&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T135340Z">
        <seg>=head2 Tabla de símbolos
X&lt;symbol table&gt; X&lt;tabla de símbolos&gt; X&lt;stash&gt; X&lt;%::&gt; X&lt;%main::&gt; X&lt;typeglob&gt; X&lt;glob&gt; X&lt;alias&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Task-Oriented</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110526T104208Z">
        <seg>=head2 Libros orientados a tareas específicas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Testing the patch</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T154243Z">
        <seg>=head2 Comprobar el parche</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Tests</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T201855Z">
        <seg>=head2 Pruebas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 The Filter</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190443Z">
        <seg>=head2 El filtro</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 The UNIVERSAL Class
X&lt;UNIVERSAL&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161327Z">
        <seg>=head2 La clase UNIVERSAL
X&lt;UNIVERSAL&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 The most popular books</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110427T231904Z">
        <seg>=head2 Los libros más populares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Tutorials</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T222932Z">
        <seg>=head2 Tutoriales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 User Groups</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T224630Z">
        <seg>=head2 Grupos de usuarios</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Using Perl modules</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230900Z">
        <seg>=head2 Utilización de módulos de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Variable scoping</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T181526Z">
        <seg>=head2 Ámbito de las variables</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Warning</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T075404Z">
        <seg>=head2 Advertencia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Websites</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T224548Z">
        <seg>=head2 Sitios web</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What about binary data, like images?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T215500Z">
        <seg>=head2 ¿Qué pasa con los datos binarios, como las imágenes?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What about the C&lt;use bytes&gt; pragma?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120423T140914Z">
        <seg>=head2 ¿Y el pragma C&lt;use bytes&gt;?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What about the C&lt;use encoding&gt; pragma?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T222549Z">
        <seg>=head2 ¿Y el pragma C&lt;use encoding&gt;?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What are C&lt;decode_utf8&gt; and C&lt;encode_utf8&gt;?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T010032Z">
        <seg>=head2 ¿Para qué sirven C&lt;decode_utf8&gt; y C&lt;encode_utf8&gt;?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What are Perl 4, Perl 5, or Perl 6?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T214537Z">
        <seg>=head2 ¿Qué son Perl 4, Perl 5 y Perl 6?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What character encodings does Perl support?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T215229Z">
        <seg>=head2 ¿Qué codificaciones de caracteres admite Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What if I don't decode?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195430Z">
        <seg>=head2 ¿Qué pasa si no descodifico?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What if I don't encode?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195451Z">
        <seg>=head2 ¿Qué pasa si no codifico?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What if I don't know which encoding was used?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T220150Z">
        <seg>=head2 ¿Y si no sé qué codificación se utilizó?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What is "the UTF8 flag"?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T171633Z">
        <seg>=head2 ¿Qué es la "marca UTF8"?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What is Perl 6?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T000728Z">
        <seg>=head2 ¿Qué es Perl 6?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What is Perl?</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=head2 ¿Qué es Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What is a "wide character"?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T122546Z">
        <seg>=head2 ¿Qué es un "carácter ancho"?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What is a JAPH?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110329T230918Z">
        <seg>=head2 ¿Qué es un JAPH?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What is perl.com?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T102326Z">
        <seg>=head2 ¿Qué es perl.com?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What is the difference between C&lt;:encoding&gt; and C&lt;:utf8&gt;?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T222850Z">
        <seg>=head2 ¿En qué se diferencian C&lt;:encoding&gt; y C&lt;:utf8&gt;?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What machines support Perl?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T150950Z">
        <seg>=head2 ¿Qué equipos son compatibles con Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What mailing lists are there for Perl?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T154215Z">
        <seg>=head2 ¿Qué listas de correo sobre Perl existen?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What modules and extensions are available for Perl?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T090805Z">
        <seg>=head2 ¿Qué módulos y extensiones están disponibles para Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What should I make into a module?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T215636Z">
        <seg>=head2 ¿Qué se debe incluir en un módulo?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What's the difference between "perl" and "Perl"?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110329T225430Z">
        <seg>=head2 ¿Cuál es la diferencia entre "perl" y "Perl"?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 What's the difference between C&lt;UTF-8&gt; and C&lt;utf8&gt;?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120511T210840Z">
        <seg>=head2 ¿Cuál es la diferencia entre C&lt;UTF-8&gt; y C&lt;utf8&gt;?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 When should I decode or encode?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195419Z">
        <seg>=head2 ¿Cuándo debo descodificar o codificar?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 When shouldn't I program in Perl?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110329T225345Z">
        <seg>=head2 ¿Cuándo no debo elegir Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 When to Use OO</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T102135Z">
        <seg>=head2 Cuándo se debe usar la orientación a objetos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Where can I buy a commercial version of Perl?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211448Z">
        <seg>=head2 ¿Dónde puedo adquirir una versión comercial de perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Where can I get information on Perl?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T091037Z">
        <seg>=head2 ¿Dónde puedo obtener información sobre Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Where can I post questions?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T190542Z">
        <seg>=head2 ¿Dónde puedo publicar preguntas?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Where do I send bug reports?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T154253Z">
        <seg>=head2 ¿A qué dirección debo enviar los informes de error?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Where to Find the Community</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T161823Z">
        <seg>=head2 Cómo entrar en contacto con la comunidad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Which Perl blogs should I read?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211916Z">
        <seg>=head2 ¿Qué blogs sobre Perl debo seguir?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Which magazines have Perl content?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T183733Z">
        <seg>=head2 ¿En qué revistas puedo encontrar artículos sobre Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Which version of Perl should I use?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T000608Z">
        <seg>=head2 ¿Qué versión de Perl debo utilizar?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Which version of perl should I use?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195320Z">
        <seg>=head2 ¿Qué versión de Perl debo utilizar?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Who supports Perl?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T164006Z">
        <seg>=head2 ¿Quién respalda a Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Why do regex character classes sometimes match only in the ASCII range?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120424T093442Z">
        <seg>=head2 ¿Por qué algunas veces las clases de caracteres de expresiones regulares solo detectan caracteres ASCII?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Why do some characters not uppercase or lowercase correctly?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T005849Z">
        <seg>=head2 ¿Por qué algunos caracteres no se convierten a mayúsculas o minúsculas correctamente?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Workshops</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120406T150501Z">
        <seg>=head2 Talleres</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Writing Constructors
X&lt;constructor&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T001641Z">
        <seg>=head2 Implementación de constructores
X&lt;constructor&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Writing subroutines</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T004059Z">
        <seg>=head2 Programación de subrutinas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Writing the patch</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T234908Z">
        <seg>=head2 Escribir el parche</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 Your new toolkit</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T201552Z">
        <seg>=head2 Su nuevo kit de herramientas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head2 perlunitut isn't really a Unicode tutorial, is it?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T214912Z">
        <seg>=head2 En realidad, perlunitut no es un tutorial de Unicode, ¿verdad?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Binary strings (byte strings)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T222034Z">
        <seg>=head3 Cadenas binarias (cadenas de bytes)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Blessing</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T170728Z">
        <seg>=head3 Bendición</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Class Names as Strings</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211407Z">
        <seg>=head3 Nombres de clases como cadenas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Constructor</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193945Z">
        <seg>=head3 Constructor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Decoding</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T222158Z">
        <seg>=head3 Descodificación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Deferencing Method Call</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211605Z">
        <seg>=head3 Desreferencia de llamada a método</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Encoding</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T222045Z">
        <seg>=head3 Codificación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Forums</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T224606Z">
        <seg>=head3 Foros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Global Destruction</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T183037Z">
        <seg>=head3 Destrucción global</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 How SUPER is Resolved
X&lt;SUPER&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162406Z">
        <seg>=head3 Forma de resolución de SUPER
X&lt;SUPER&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Indirect Object Syntax
X&lt;indirect object&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T151421Z">
        <seg>=head3 Sintaxis indirecta de objeto
X&lt;indirect object&gt; X&lt;sintaxis indirecta de objeto&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Internal format</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T222236Z">
        <seg>=head3 Formato interno</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Method Calls on Filehandles</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211716Z">
        <seg>=head3 Llamadas a métodos en identificadores de archivos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Method Names as Strings</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T210831Z">
        <seg>=head3 Nombres de métodos como cadenas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Method Resolution Caching</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T164249Z">
        <seg>=head3 Resolución de métodos con almacenamiento en caché</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Method Resolution Order
X&lt;method resolution order&gt; X&lt;mro&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T214032Z">
        <seg>=head3 Orden de resolución de métodos
X&lt;method resolution order&gt; X&lt;orden de resolución de métodos&gt; X&lt;mro&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Moo</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T121455Z" creationid="explorer" creationdate="20150905T121455Z">
        <seg>=head3 Moo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Multiple Inheritance
X&lt;multiple inheritance&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162814Z">
        <seg>=head3 Herencia múltiple
X&lt;multiple inheritance&gt; X&lt;herencia múltiple&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 News sites</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T224555Z">
        <seg>=head3 Sitios de noticias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Objects Are Blessed; Variables Are Not</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083020Z">
        <seg>=head3 Los objetos están bendecidos; las variables no</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Overriding methods and method resolution</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184812Z">
        <seg>=head3 Sobrescritura de métodos y resolución de métodos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Subroutine References as Methods</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211522Z">
        <seg>=head3 Referencias a subrutinas como métodos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Text strings (character strings)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T221841Z">
        <seg>=head3 Cadenas de texto (cadenas de caracteres)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 UTF-8</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125145Z">
        <seg>=head3 UTF-8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Unicode</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125141Z">
        <seg>=head3 Unicode</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=head3 Writing Accessors
X&lt;accessor&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T001721Z">
        <seg>=head3 Implementación de métodos de acceso
X&lt;accessor&gt; X&lt;método de acceso&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item *</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111028T222721Z">
        <seg>=item *</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * A miniature type system</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194117Z">
        <seg>=item * Un sistema de tipos en miniatura</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * Declarative sugar</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T103003Z">
        <seg>=item * Simplificación declarativa</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;Maintainers&gt;, F&lt;Maintainers.pl&gt;, and F&lt;Maintainers.pm&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080335Z">
        <seg>=item * F&lt;Maintainers&gt;, F&lt;Maintainers.pl&gt; y F&lt;Maintainers.pm&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;check*&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080319Z">
        <seg>=item * F&lt;check*&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;cpan/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194009Z">
        <seg>=item * F&lt;cpan/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;dist/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194004Z">
        <seg>=item * F&lt;dist/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;ext/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194002Z">
        <seg>=item * F&lt;ext/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;lib/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194001Z">
        <seg>=item * F&lt;lib/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;podtidy&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194028Z">
        <seg>=item * F&lt;podtidy&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;t/base/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080357Z">
        <seg>=item * F&lt;t/base/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;t/cmd/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194022Z">
        <seg>=item * F&lt;t/cmd/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;t/comp/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080346Z">
        <seg>=item * F&lt;t/comp/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;t/io/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080351Z">
        <seg>=item * F&lt;t/io/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;t/lib/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080311Z">
        <seg>=item * F&lt;t/lib/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;t/mro/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080301Z">
        <seg>=item * F&lt;t/mro/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;t/op/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080303Z">
        <seg>=item * F&lt;t/op/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;t/opbasic/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T120054Z" creationid="explorer" creationdate="20150513T120054Z">
        <seg>=item * F&lt;t/opbasic/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;t/porting/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080310Z">
        <seg>=item * F&lt;t/porting/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;t/re/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080259Z">
        <seg>=item * F&lt;t/re/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;t/run/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080258Z">
        <seg>=item * F&lt;t/run/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;t/uni/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080304Z">
        <seg>=item * F&lt;t/uni/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * F&lt;t/win32/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080309Z">
        <seg>=item * F&lt;t/win32/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * Full introspection and manipulation</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185413Z">
        <seg>=item * Introspección completa y manipulación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * L&lt;Class::Accessor&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193719Z">
        <seg>=item * L&lt;Class::Accessor&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * L&lt;Class::Tiny&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T133019Z" creationid="explorer" creationdate="20150905T133019Z">
        <seg>=item * L&lt;Class::Tiny&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * L&lt;Moose&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193724Z">
        <seg>=item * L&lt;Moose&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * L&lt;Role::Tiny&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193710Z">
        <seg>=item * L&lt;Role::Tiny&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * L&lt;http://jobs.perl.org/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211417Z">
        <seg>=item * L&lt;http://jobs.perl.org/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * L&lt;http://learn.perl.org/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211255Z">
        <seg>=item * L&lt;http://learn.perl.org/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * L&lt;http://lists.perl.org/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211426Z">
        <seg>=item * L&lt;http://lists.perl.org/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * L&lt;http://perldoc.perl.org/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211252Z">
        <seg>=item * L&lt;http://perldoc.perl.org/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * L&lt;http://perltraining.com.au/whyperl.html&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T205935Z">
        <seg>=item * L&lt;http://perltraining.com.au/whyperl.html&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * L&lt;http://www.perl.org/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211250Z">
        <seg>=item * L&lt;http://www.perl.org/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * L&lt;http://www.perl.org/about.html&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T205919Z">
        <seg>=item * L&lt;http://www.perl.org/about.html&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * Many more features</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194100Z">
        <seg>=item * Muchas más características</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * Module tests</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T201914Z">
        <seg>=item * Pruebas de módulos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * Rich ecosystem</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T103646Z">
        <seg>=item * Ecosistema variado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * Roles built-in</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194127Z">
        <seg>=item * Roles predefinidos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item * Self-hosted and extensible</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T103613Z">
        <seg>=item * Autocontenido y extensible</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item ++</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T191656Z">
        <seg>=item ++</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item 1.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110628T174650Z">
        <seg>=item 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item 2.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110628T174728Z">
        <seg>=item 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item 3.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T232332Z">
        <seg>=item 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Announce to clpa</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T183734Z">
        <seg>=item Anuncie el módulo en clpa</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Announce to the modules list</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T184311Z">
        <seg>=item Anuncie el módulo en la lista de módulos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Arithmetic</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T120350Z">
        <seg>=item Aritmética</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Arithmetic operators</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T191457Z">
        <seg>=item Operadores aritméticos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Arithmetic operators during C&lt;use integer&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T200337Z">
        <seg>=item Operadores aritméticos con C&lt;use integer&gt; activo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Arrays</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180358Z">
        <seg>=item Arrays</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-D&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191536Z">
        <seg>=item B&lt;-D&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-F&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191517Z">
        <seg>=item B&lt;-F&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-L&gt; I&lt;language_code&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T074123Z">
        <seg>=item B&lt;-L&gt; I&lt;código_idioma&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-M&gt; I&lt;module-name&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T074155Z">
        <seg>=item B&lt;-M&gt; I&lt;nombre_módulo&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-T&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191504Z">
        <seg>=item B&lt;-T&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-V&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190849Z">
        <seg>=item B&lt;-V&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-X&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191500Z">
        <seg>=item B&lt;-X&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-a&gt; I&lt;perlapifunc&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T113025Z" creationid="explorer" creationdate="20150905T113025Z">
        <seg>=item B&lt;-a&gt; I&lt;perlapifunc&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-d&gt; I&lt;destination-filename&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T074246Z">
        <seg>=item B&lt;-d&gt; I&lt;archivo-destino&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-f&gt; I&lt;perlfunc&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191525Z">
        <seg>=item B&lt;-f&gt; I&lt;perlfunc&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-h&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191526Z">
        <seg>=item B&lt;-h&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-i&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190848Z">
        <seg>=item B&lt;-i&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-l&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191514Z">
        <seg>=item B&lt;-l&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-m&gt; I&lt;module&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T074345Z">
        <seg>=item B&lt;-m&gt; I&lt;módulo&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-n&gt; I&lt;some-formatter&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110808T214013Z">
        <seg>=item B&lt;-n&gt; I&lt;algún_formateador&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-o&gt; I&lt;output-formatname&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T074313Z">
        <seg>=item B&lt;-o&gt; I&lt;formato-salida&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-q&gt; I&lt;perlfaq-search-regexp&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T164728Z">
        <seg>=item B&lt;-q&gt; I&lt;regexp-búsqueda-perlfaq&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-r&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190533Z">
        <seg>=item B&lt;-r&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-t&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191520Z">
        <seg>=item B&lt;-t&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-u&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191513Z">
        <seg>=item B&lt;-u&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-v&gt; I&lt;perlvar&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191511Z">
        <seg>=item B&lt;-v&gt; I&lt;perlvar&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;-w&gt; I&lt;option:value&gt; or B&lt;-w&gt; I&lt;option&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T182016Z">
        <seg>=item B&lt;-w&gt; I&lt;opción:valor&gt; o B&lt;-w&gt; I&lt;opción&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;BUILD&gt; the module (sometimes unnecessary)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010110Z">
        <seg>=item B&lt;COMPILAR&gt; el módulo (a veces no es necesario)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;DECOMPRESS&gt; the file</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010101Z">
        <seg>=item B&lt;DESCOMPRIMIR&gt; el archivo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;INSTALL&gt; the module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010127Z">
        <seg>=item B&lt;INSTALAR&gt; el módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;PageName|ModuleName|ProgramName|URL&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T195527Z">
        <seg>=item B&lt;NombrePágina|NombreMódulo|NombrePrograma|DirecciónURL&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;UNPACK&gt; the file into a directory</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010106Z">
        <seg>=item B&lt;DESEMPAQUETAR&gt; el archivo en un directorio</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;filter_fetch_key&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190456Z">
        <seg>=item B&lt;filter_fetch_key&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;filter_fetch_value&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190505Z">
        <seg>=item B&lt;filter_fetch_value&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;filter_store_key&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190454Z">
        <seg>=item B&lt;filter_store_key&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item B&lt;filter_store_value&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190455Z">
        <seg>=item B&lt;filter_store_value&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Bitwise operators</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T195315Z">
        <seg>=item Operadores bit a bit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Bitwise operators during C&lt;use integer&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T195335Z">
        <seg>=item Operadores bit a bit con C&lt;use integer&gt; activo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Boolean logic</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=item Lógica Booleana</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item C&lt;perl Makefile.PL; make test; make dist&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T181628Z">
        <seg>=item C&lt;perl Makefile.PL; make test; make dist&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item C&lt;roffitall&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T132213Z">
        <seg>=item C&lt;roffitall&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Check again</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T182647Z">
        <seg>=item Compruébelo otra vez</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Check it's new</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T172931Z">
        <seg>=item Asegúrese de que su contribución es novedosa</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Choose a name</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T144500Z">
        <seg>=item Elija un nombre</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item DOES($role)
X&lt;DOES&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161645Z">
        <seg>=item DOES($rol)
X&lt;DOES&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Discuss the need</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T144444Z">
        <seg>=item Evalúe la necesidad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Fix bugs!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T184426Z">
        <seg>=item Corrija los errores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Get a CPAN user ID</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T184045Z">
        <seg>=item Obtenga un identificador de usuario de CPAN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Hashes</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180401Z">
        <seg>=item Hashes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Automating System Administration with Perl&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124921Z">
        <seg>=item I&lt;Automating System Administration with Perl&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Beginning Perl&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124901Z">
        <seg>=item I&lt;Beginning Perl&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Data Munging with Perl&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124944Z">
        <seg>=item I&lt;Data Munging with Perl&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Effective Perl Programming&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124912Z">
        <seg>=item I&lt;Effective Perl Programming&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Extending and Embedding Perl&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124947Z">
        <seg>=item I&lt;Extending and Embedding Perl&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Higher-Order Perl&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124933Z">
        <seg>=item I&lt;Higher-Order Perl&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Intermediate Perl&gt; (the "Alpaca Book")</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110526T103909Z">
        <seg>=item I&lt;Intermediate Perl&gt; (el "Libro de la Alpaca")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Learning Perl&gt;  (the "Llama Book")</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110526T103750Z">
        <seg>=item I&lt;Learning Perl&gt;  (el "Libro de la Llama")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Learning Perl&gt; (the "Llama Book")</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150717T170027Z" creationid="explorer" creationdate="20150717T170027Z">
        <seg>=item I&lt;Learning Perl&gt; (el "Libro de la Llama")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Mastering Perl/Tk&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124945Z">
        <seg>=item I&lt;Mastering Perl/Tk&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Mastering Perl&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124910Z">
        <seg>=item I&lt;Mastering Perl&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Mastering Regular Expressions&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124935Z">
        <seg>=item I&lt;Mastering Regular Expressions&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;More Programming Pearls&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125004Z">
        <seg>=item I&lt;More Programming Pearls&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Network Programming with Perl&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124936Z">
        <seg>=item I&lt;Network Programming with Perl&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Object Oriented Perl&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124941Z">
        <seg>=item I&lt;Object Oriented Perl&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Perl 5 Pocket Reference&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124849Z">
        <seg>=item I&lt;Perl 5 Pocket Reference&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Perl Best Practices&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124932Z">
        <seg>=item I&lt;Perl Best Practices&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Perl Debugger Pocket Reference&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124852Z">
        <seg>=item I&lt;Perl Debugger Pocket Reference&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Perl Template Toolkit&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124938Z">
        <seg>=item I&lt;Perl Template Toolkit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Pro Perl Debugging&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124948Z">
        <seg>=item I&lt;Pro Perl Debugging&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Programming Pearls&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125003Z">
        <seg>=item I&lt;Programming Pearls&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Programming Perl&gt; (the "Camel Book"):</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110427T232053Z">
        <seg>=item I&lt;Programming Perl&gt; (el "Libro del Camello"):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Programming the Perl DBI&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124929Z">
        <seg>=item I&lt;Programming the Perl DBI&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Real World SQL Server Administration with Perl&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124923Z">
        <seg>=item I&lt;Real World SQL Server Administration with Perl&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Regular Expression Pocket Reference&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124855Z">
        <seg>=item I&lt;Regular Expression Pocket Reference&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Regular Expressions Cookbook&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124928Z">
        <seg>=item I&lt;Regular Expressions Cookbook&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;The Perl Cookbook&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124917Z">
        <seg>=item I&lt;The Perl Cookbook&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;The Perl Cookbook&gt; (the "Ram Book"):</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110526T102613Z">
        <seg>=item I&lt;The Perl Cookbook&gt; (el "Libro del Carnero"):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item I&lt;Writing Perl Modules for CPAN&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124915Z">
        <seg>=item I&lt;Writing Perl Modules for CPAN&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;c2ph|c2ph&gt; and L&lt;pstruct|pstruct&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194241Z">
        <seg>=item L&lt;c2ph|c2ph&gt; y L&lt;pstruct|pstruct&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;corelist&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194217Z">
        <seg>=item L&lt;corelist&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;cpan&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194203Z">
        <seg>=item L&lt;cpan&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;enc2xs&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194459Z">
        <seg>=item L&lt;enc2xs&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;h2ph|h2ph&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194245Z">
        <seg>=item L&lt;h2ph|h2ph&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;h2xs|h2xs&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194234Z">
        <seg>=item L&lt;h2xs|h2xs&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;http://blogs.perl.org/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T092042Z" creationid="explorer" creationdate="20160505T092042Z">
        <seg>=item L&lt;http://blogs.perl.org/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;http://perl.com/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T224558Z">
        <seg>=item L&lt;http://perl.com/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;http://stackoverflow.com/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T092729Z" creationid="explorer" creationdate="20160505T092729Z">
        <seg>=item L&lt;http://stackoverflow.com/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;http://use.perl.org/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T224602Z">
        <seg>=item L&lt;http://use.perl.org/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;http://www.perlmonks.org/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T224608Z">
        <seg>=item L&lt;http://www.perlmonks.org/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;instmodsh&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194156Z">
        <seg>=item L&lt;instmodsh&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;libnetcfg|libnetcfg&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194433Z">
        <seg>=item L&lt;libnetcfg|libnetcfg&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;perlbug|perlbug&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194247Z">
        <seg>=item L&lt;perlbug|perlbug&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;perldoc|perldoc&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194346Z">
        <seg>=item L&lt;perldoc|perldoc&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;perlivp&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194437Z">
        <seg>=item L&lt;perlivp&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;perlmodstyle&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T140152Z" creationid="explorer" creationdate="20150905T140152Z">
        <seg>=item L&lt;perlmodstyle&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;perlnewmod&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174332Z">
        <seg>=item L&lt;perlnewmod&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;perlthanks|perlbug&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T132218Z">
        <seg>=item L&lt;perlthanks|perlbug&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;piconv&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194221Z">
        <seg>=item L&lt;piconv&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;pod2html|pod2html&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T113908Z" creationid="explorer" creationdate="20150513T113908Z">
        <seg>=item L&lt;pod2html|pod2html&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;pod2man|pod2man&gt; and L&lt;pod2text|pod2text&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194351Z">
        <seg>=item L&lt;pod2man|pod2man&gt; y L&lt;pod2text|pod2text&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;pod2usage|pod2usage&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194356Z">
        <seg>=item L&lt;pod2usage|pod2usage&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;podchecker|podchecker&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194400Z">
        <seg>=item L&lt;podchecker|podchecker&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;podselect|podselect&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194358Z">
        <seg>=item L&lt;podselect|podselect&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;prove&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194215Z">
        <seg>=item L&lt;prove&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;ptar&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194226Z">
        <seg>=item L&lt;ptar&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;ptardiff&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194214Z">
        <seg>=item L&lt;ptardiff&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;ptargrep&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194206Z">
        <seg>=item L&lt;ptargrep&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;shasum&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194209Z">
        <seg>=item L&lt;shasum&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;splain|splain&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194407Z">
        <seg>=item L&lt;splain|splain&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;xsubpp&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194232Z">
        <seg>=item L&lt;xsubpp&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item L&lt;zipdetails&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T132229Z">
        <seg>=item L&lt;zipdetails&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Look around</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T172847Z">
        <seg>=item Examine código de otros programadores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Miscellaneous</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T225219Z">
        <seg>=item Otros operadores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item More complex regular expressions</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233428Z">
        <seg>=item Expresiones regulares más complejas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Numeric comparison</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T235219Z">
        <seg>=item Comparación numérica</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Operators which expect a string</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T193452Z">
        <seg>=item Operadores que consumen una cadena</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Operators which expect an integer</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T193442Z">
        <seg>=item Operadores que consumen un entero</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Other mathematical operators</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T194129Z">
        <seg>=item Otros operadores matemáticos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Other regexp features</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=item Otras características de las expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Parentheses for capturing</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T183354Z">
        <seg>=item Paréntesis de captura</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Scalars</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=item Escalares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Simple matching</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T234126Z">
        <seg>=item Detección de coincidencias sencilla</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Simple substitution</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T232319Z">
        <seg>=item Sustitución simple</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Start with F&lt;module-starter&gt; or F&lt;h2xs&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T174256Z">
        <seg>=item Para empezar, use F&lt;module-starter&gt; o F&lt;h2xs&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item String comparison</seg>
      </tuv>
      <tuv lang="ES">
        <seg>=item Comparación de cadenas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item This doc</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T140054Z" creationid="explorer" creationdate="20150905T140054Z">
        <seg>=item Este documento</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Upload the tarball</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T184248Z">
        <seg>=item Suba el paquete tar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Use L&lt;Carp|Carp&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T075346Z">
        <seg>=item Use L&lt;Carp|Carp&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Use L&lt;Exporter|Exporter&gt; - wisely!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T150052Z">
        <seg>=item Use L&lt;Exporter|Exporter&gt; con sensatez</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Use L&lt;plain old documentation|perlpod&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T190749Z">
        <seg>=item Use L&lt;Documentación en texto simple (Plain Old Documentation)|perlpod&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Use L&lt;strict|strict&gt; and L&lt;warnings|warnings&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T181527Z">
        <seg>=item Use L&lt;strict|strict&gt; y L&lt;warnings|warnings&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item VERSION($need)
X&lt;VERSION&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T162418Z">
        <seg>=item VERSION($necesaria)
X&lt;VERSION&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Write tests</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T183937Z">
        <seg>=item Escriba pruebas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item Write the README</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T184007Z">
        <seg>=item Escriba el archivo README (LÉAME)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item can($method)
X&lt;can&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T162042Z">
        <seg>=item can($metodo)
X&lt;can&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item for</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180424Z">
        <seg>=item for</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item foreach</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180426Z">
        <seg>=item foreach</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item hash</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T232257Z">
        <seg>=item hash</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item if</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180416Z">
        <seg>=item if</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item isa($class)
X&lt;isa&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211246Z">
        <seg>=item isa($clase)
X&lt;isa&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item kflags</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T232239Z">
        <seg>=item kflags</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item length</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T232234Z">
        <seg>=item length</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item name</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T131455Z">
        <seg>=item name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item resolve</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T232251Z">
        <seg>=item resolve</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=item while</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180423Z">
        <seg>=item while</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=over 2</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T140057Z" creationid="explorer" creationdate="20150905T140057Z">
        <seg>=over 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=over 3</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174526Z">
        <seg>=over 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=over 4</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172652Z">
        <seg>=over 4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=over 5</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174203Z">
        <seg>=over 5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt;   greater than</seg>
      </tuv>
      <tuv lang="ES">
        <seg>&gt;   mayor que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt;=  greater than or equal</seg>
      </tuv>
      <tuv lang="ES">
        <seg>&gt;=  mayor o igual que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>?</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T120204Z" creationid="explorer" creationdate="20150905T120204Z">
        <seg>?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@EXPORT = qw($FOO); # Usual form, can't be localized</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T153543Z">
        <seg>@EXPORT = qw($FOO); # Forma usual; no se puede localizar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@EXPORT = qw(*FOO); # Can be localized</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T153549Z">
        <seg>@EXPORT = qw(*FOO); # Se puede localizar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@animals[0,1];                 # gives ("camel", "llama");</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T114320Z" creationid="explorer" creationdate="20150905T114320Z">
        <seg>@animales[0,1];                 # devuelve ("camello", "llama");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@animals[0..2];                # gives ("camel", "llama", "owl");</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T114334Z" creationid="explorer" creationdate="20150905T114334Z">
        <seg>@animales[0..2];                # devuelve ("camello", "llama", "búho");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@animals[1..$#animals];        # gives all except the first element</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T114413Z" creationid="explorer" creationdate="20150905T114413Z">
        <seg>@animales[1..$#animales];        # devuelve todos los elementos menos el primero</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T084235Z">
        <seg>A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A
constructor is simply a class method that returns a reference to a new
object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T164551Z">
        <seg>Un constructor es sencillamente un método de la clase que devuelve una referencia a un objeto nuevo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A
method is simply a regular subroutine, and is declared with C&lt;sub&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T155854Z">
        <seg>Un método es simplemente una subrutina normal y se declara con C&lt;sub&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A
number of popular modules are included with the Perl distribution
itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T004526Z">
        <seg>La distribución de Perl incluye muchos módulos populares.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A
package is simply a namespace containing variables and subroutines.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083426Z">
        <seg>Un paquete es simplemente un espacio de nombres que contiene variables y subrutinas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A
potential problem caught by C&lt;use strict;&gt; will cause your code to stop
immediately when it is encountered, while C&lt;use warnings;&gt; will merely
give a warning (like the command-line switch B&lt;-w&gt;) and let your code run.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T180704Z">
        <seg>Un posible problema detectado por C&lt;use strict;&gt; hará que el código se detenga inmediatamente, mientras que C&lt;use warnings;&gt; (al igual que el modificador de línea de comandos B&lt;-w&gt;) sólo mostrará una advertencia y dejará que el código se ejecute.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A B&lt;blessed&gt; data structure (aka "a
referent") is an object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T124224Z">
        <seg>Una estructura de datos B&lt;bendecida&gt; (también conocida como "referente") es un objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A B&lt;class&gt; defines the behavior of a category of objects.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195542Z">
        <seg>Una B&lt;clase&gt; define el comportamiento de una categoría de objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A B&lt;constructor&gt; creates a new object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194401Z">
        <seg>Un B&lt;constructor&gt; crea un nuevo objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A C&lt;BEGIN&gt; code block is executed as soon as possible, that is, the moment
it is completely defined, even before the rest of the containing file (or
string) is parsed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T161842Z">
        <seg>Un bloque de código C&lt;BEGIN&gt; se ejecuta tan pronto como es posible, es decir, en el momento en que está completamente definido, incluso antes del análisis del resto del archivo (o cadena) que lo contiene.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Perl Mongers
chapter is a local user group which typically holds regular in-person meetings,
both social and technical; helps organize local conferences, workshops, and
hackathons; and provides a mailing list or other continual contact method for
its members to keep in touch.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T181255Z">
        <seg>Un grupo de Perl Mongers es un grupo de usuarios local que organiza regularmente reuniones presenciales, tanto sociales como técnicas, ayuda a organizar conferencias, talleres y I&lt;hackathons&gt; locales, y proporciona una lista de correo u otro medio de contacto continuo entre sus miembros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Perl script or program consists of one or more statements.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Un script o programa Perl consta de una o varias instrucciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A categorized list of modules is
also available from CPAN.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T172019Z">
        <seg>En CPAN también está disponible una lista de módulos clasificados por categorías.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class is a
name for a category (like "File"), and a class also defines the
behavior of objects in that category.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T172002Z">
        <seg>Es un nombre para una categoría (como "Archivo"); también define el comportamiento de los objetos de esa categoría.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class is simply a package.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T124144Z">
        <seg>Una clase no es más que un paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class provides methods that expect to
operate on objects.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T124200Z">
        <seg>Una clase proporciona métodos que deben aplicarse a objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A command-line front-end to C&lt;Module::CoreList&gt;, to query what modules
were shipped with given versions of perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T155923Z">
        <seg>Este front-end de línea de comandos de C&lt;Module::CoreList&gt; permite consultar la lista de módulos incluidos en versiones específicas de perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A comprehensive list of Perl-related mailing lists can be found at
L&lt;http://lists.perl.org/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211444Z">
        <seg>Encontrará una lista completa de listas de correo relacionadas con Perl en L&lt;http://lists.perl.org/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A constant subroutine is one prototyped
to take no arguments and to return a constant expression.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T155926Z">
        <seg>Una subrutina constante es una subrutina cuyo prototipo no consume argumentos y devuelve una expresión constante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A few general-purpose tools are shipped with perl, mostly because they
came along modules included in the perl distribution.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T144617Z">
        <seg>También se distribuyen con perl algunas herramientas de propósito general, básicamente porque forman parte de módulos incluidos en la distribución de perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A few of these are
good, some are OK, but many aren't worth your money.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110604T231156Z">
        <seg>Algunos son buenos y otros aceptables, pero muchos no merecen la pena.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A getter gets the attribute's value, while a setter
sets it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184303Z">
        <seg>Un método I&lt;getter&gt; obtiene el valor del atributo, mientras que un método I&lt;setter&gt; lo establece.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A hash represents a set of key/value pairs:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234302Z">
        <seg>Un hash representa un conjunto de pares clave-valor:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A kinder, gentler tutorial on object-oriented programming in Perl can
be found in L&lt;perlootut&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T231755Z">
        <seg>Si desea leer una introducción más accesible y sencilla a la programación orientada a objetos en Perl, vea el documento L&lt;perlootut&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A list of
them is given at the start of L&lt;perlfunc&gt; and you can easily read
about any given function by using C&lt;perldoc -f I&lt;functionname&gt;&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T003108Z">
        <seg>Al principio de L&lt;perlfunc&gt; se incluye una lista completa de funciones. También puede obtener fácilmente información sobre cualquier función mediante el comando C&lt;perldoc -f I&lt;nombre_función&gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A little interface to ExtUtils::Installed to examine installed modules,
validate your packlists and even create a tarball from an installed module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T160942Z">
        <seg>Esta utilidad ofrece una interfaz sencilla de ExtUtils::Installed, que permite examinar módulos instalados, validar las listas de paquetes e incluso crear un archivo de almacenamiento tar a partir de un módulo instalado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A method is simply a subroutine that expects a reference to an object
(or a package name, for class methods) as the first argument.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T202947Z">
        <seg>Un método es simplemente una subrutina que espera recibir una referencia a un objeto (o un nombre de paquete, en el caso de los métodos de la clase) como primer argumento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A module is just a set of related functions in a library file, i.e.,
a Perl package with the same name as the file.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T083034Z">
        <seg>Un módulo no es más que un conjunto de funciones relacionadas y ubicadas en un archivo de biblioteca, es decir, un paquete Perl con el mismo nombre que el archivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A module's code has to be warning and strict-clean, since you can't
guarantee the conditions that it'll be used under.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T182800Z">
        <seg>Debe usar los pragmas warnings y strict en el código de su módulo, ya que no sabe en qué condiciones se va a usar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A package statement affects only dynamic variables--including
those you've used local() on--but I&lt;not&gt; lexical variables created
with my().</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T110811Z">
        <seg>Una instrucción C&lt;package&gt; solo afecta a las variables dinámicas, incluidas aquellas en las que se usa local(); I&lt;no&gt; afecta a las variables léxicas creadas con my().</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A patch for FreeBSD libc is available
(see http://www.freebsd.org/cgi/query-pr.cgi?pr=misc/30631 )
which has been integrated into FreeBSD 4.6.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T230643Z">
        <seg>Está disponible un parche de FreeBSD libc (vea http://www.freebsd.org/cgi/query-pr.cgi?pr=misc/30631)
que se ha integrado en FreeBSD 4.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A pragma is a module which influences some aspect of the compile time or run
time behaviour of Perl, such as C&lt;strict&gt; or C&lt;warnings&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T230943Z">
        <seg>Un pragma (como C&lt;strict&gt; o C&lt;warnings&gt;) es un módulo que influye en algún aspecto del tiempo de compilación o de ejecución en Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A precomputed hash value for the MRO's name, or 0.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T224259Z">
        <seg>Un valor de hash calculado previamente para el nombre del orden de resolución de métodos, o bien 0.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A pseudo-hash is an
array reference which can be accessed using named keys like a hash.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T183950Z">
        <seg>Un seudohash es una referencia a un array al que se puede acceder mediante claves con nombre, como si fuera un hash.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A read-write accessor will allow the caller to set the value as well as
get it:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T222224Z">
        <seg>Un método de acceso de lectura y escritura permite que el código que lo llama establezca y recupere el valor:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A reference is a scalar value and can refer to any other Perl data
type.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110306T230849Z">
        <seg>Una referencia es un valor escalar que puede apuntar a cualquier tipo de datos de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A relatively new conference franchise with a large Perl portion is the
Open Source Developers Conference or OSDC.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T212948Z">
        <seg>La I&lt;Open Source Developers Conference&gt; (OSDC) es una franquicia de conferencias relativamente nueva que incluye un porcentaje elevado de charlas sobre Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A scalar represents a single value:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T230800Z">
        <seg>Un escalar representa un solo valor:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simple comment in the code giving credit to the FAQ would
be courteous but is not required.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T172351Z">
        <seg>Le agradeceremos que incluya en su código una mención a estos documentos de preguntas más frecuentes, pero no le exigimos que lo haga.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simple read-only accessor simply gets the value of a single
attribute:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T205909Z">
        <seg>Un método de acceso de solo lectura simplemente obtiene el valor de un único atributo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A specific object is often referred to as an
B&lt;instance&gt; of a class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120627T182934Z">
        <seg>Un objeto específico se suele llamar una B&lt;instancia&gt; de la clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A typical invocation of L&lt;h2xs|h2xs&gt; for a pure Perl module is:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T174343Z">
        <seg>Una invocación típica de L&lt;h2xs|h2xs&gt; para crear un módulo Perl puro es:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A useful setting for this command is your favorite editor as in
C&lt;/usr/bin/nano&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T215424Z" creationid="explorer" creationdate="20160506T214514Z">
        <seg>Una práctica opción de configuración para este comando permite especificar su editor favorito; por ejemplo, C&lt;/usr/bin/nano&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174031Z">
        <seg>A.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A: 4.6</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193755Z">
        <seg>A: 4.6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>AV *(*resolve)(pTHX_ HV *stash, U32 level);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193558Z">
        <seg>AV *(*resolve)(pTHX_ HV *stash, U32 level);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Accesses would be to the structure without locking (which is not safe for
Perl's scalars), and either the structure has to leak, or it has to be
freed when its creating thread terminates, which may be before the optree
referencing it is deleted, if other threads outlive it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T234047Z">
        <seg>Los accesos se harían en la estructura sin bloquear (lo cual no es seguro para los escalares de Perl), por lo que la estructura acaba por perderse o hay que liberarla cuando finalice el hilo de ejecución que la creó; si le sobreviven otros hilos de ejecución, esto puede ocurrir antes de que se elimine la referencia al árbol sintáctico de operaciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Accessors make it easier to change the
implementation of an object later while still preserving the original
API.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T204811Z">
        <seg>Los métodos de acceso facilitan el cambio posterior de la implementación de un objeto manteniendo intacta la API original.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add to your standard heading the following line:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T201004Z">
        <seg>Agregue al encabezado estándar del programa la línea siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, none of its
dependencies require XS, so it can be installed on machines without a
compiler.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T123044Z" creationid="explorer" creationdate="20150905T123044Z">
        <seg>Además, ninguna de sus
dependencias requiere XS, por lo que se puede instalar en los equipos que carecen de
compilador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, you can call methods on the C&lt;STDIN&gt;,
C&lt;STDOUT&gt;, and C&lt;STDERR&gt; filehandles.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211830Z">
        <seg>Además, también puede llamar a métodos en los identificadores de archivo C&lt;STDIN&gt;, C&lt;STDOUT&gt; y C&lt;STDERR&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After all, in your
journey as a programmer, you are likely to encounter different styles.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110529T142631Z">
        <seg>Al fin y al cabo, en su vida profesional como programador se va a encontrar distintos estilos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After installing cpan-mac, drop the module archive on the
B&lt;untarzipme&gt; droplet, which will decompress and unpack for you.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T001028Z">
        <seg>Una vez instalado cpan-mac, coloque el archivo comprimido del módulo en el I&lt;droplet&gt; B&lt;untarzipme&gt;, que lo descomprimirá y desempaquetará.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After reading this document, you ought to read L&lt;perlunifaq&gt; too, then
L&lt;perluniintro&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T101901Z" creationid="explorer" creationdate="20150905T101901Z">
        <seg>Después de leer este documento también debería leer L&lt;perlunifaq&gt; y, a continuación,
L&lt;perluniintro&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After this
module-identifying prefix, the rest of the key is entirely up to the
module: it may include any characters whatsoever.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T144309Z">
        <seg>A continuación de este prefijo de identificación de módulo, el resto de la clave queda a discreción del programador del módulo y puede incluir cualquier carácter.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, C&lt;module-starter&gt; and C&lt;h2xs&gt;
provide a test framework which you can extend - you should do something
more than just checking your module will compile.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T183235Z">
        <seg>C&lt;module-starter&gt; y C&lt;h2xs&gt; proporcionan un entorno de pruebas que puede ampliar; no debe limitarse a comprobar que el módulo se compila.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, this
does not mean that Perl can do operations only over integers in this range:
it is possible to store many more integers in floating point format.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T195639Z">
        <seg>Insistimos: esto no significa que Perl sólo puede realizar operaciones con enteros de este intervalo; es posible almacenar muchos más enteros en formato de punto flotante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, this allows for very dynamic code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T222741Z">
        <seg>Esto también permite crear código muy dinámico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, you'll probably need to be root.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000406Z">
        <seg>Para esto también necesitará privilegios de usuario raíz.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All Perl module files have the extension F&lt;.pm&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170005Z">
        <seg>Todos los archivos de módulo Perl tienen la extensión F&lt;.pm&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All Rights Reserved.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T225700Z">
        <seg>Todos los derechos reservados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All available translation packages are to be found under the C&lt;POD2::&gt;
namespace.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T184518Z">
        <seg>Todos los paquetes de traducción de la documentación se encuentran en el espacio de nombres C&lt;POD2::&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All classes automatically inherit from the L&lt;UNIVERSAL&gt; class, which is
built-in to the Perl core.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161336Z">
        <seg>Todas las clases heredan automáticamente de la clase L&lt;UNIVERSAL&gt;, disponible en el núcleo de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All classes inherit from the L&lt;UNIVERSAL&gt; class implicitly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T212113Z">
        <seg>Todas las clases heredan implícitamente de la clase L&lt;UNIVERSAL&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All communication with the outside world (anything
outside of your current Perl process) is done in binary.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T214232Z">
        <seg>La comunicación con el mundo exterior (todo lo que esté fuera del proceso Perl actual) se realiza en binario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All filter methods return the existing filter, if present, or C&lt;undef&gt;
if not.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111003T120110Z">
        <seg>Todos los métodos de filtro devuelven el filtro, si existe; de lo contrario, devuelven C&lt;undef&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All mp3 files are files, but not all files are mp3 files.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200435Z">
        <seg>Todos los archivos mp3 son archivos, pero no todos los archivos son archivos mp3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All objects belong to a specific class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195553Z">
        <seg>Todos los objetos pertenecen a una clase específica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of the core documentation intended for end users lives in F&lt;pod/&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204336Z">
        <seg>Toda la documentación principal para usuarios finales se encuentra en F&lt;pod/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All other characters are encoded as two to
four bytes using a complex scheme.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T101804Z" creationid="explorer" creationdate="20150905T101804Z">
        <seg>Para codificar los demás caracteres se utilizan entre dos
y cuatro bytes mediante un esquema complejo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All other periods in the
filename should be replaced with underscores.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003011Z">
        <seg>Debe reemplazar los demás puntos que haya en el nombre del archivo por guiones bajos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All other symbols are kept in package
C&lt;main&gt;, including all punctuation variables, like $_.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T175205Z">
        <seg>Todos los demás símbolos se almacenarán en el paquete C&lt;main&gt;, incluidas todas las variables de puntuación, como $_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All rights reserved.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T225730Z">
        <seg>Todos los derechos reservados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All text strings are in this internal format.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T223104Z">
        <seg>Todas las cadenas de texto tienen este formato interno</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All the examples so far have shown objects based on a blessed hash.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T200254Z">
        <seg>En todos los ejemplos considerados hasta ahora se han usado objetos basados en un hash bendecido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All the operators which need an argument in the integer format treat the
argument as in modular arithmetic, e.g., C&lt;mod 2**32&gt; on a 32-bit
architecture.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T193023Z">
        <seg>Todos los operadores que necesitan un argumento con formato de entero tratan al argumento como en la aritmética modular (p. ej., C&lt;mod 2**32&gt; en una arquitectura de 32 bits).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Along the same lines, just because you I&lt;CAN&gt; omit parentheses in many
places doesn't mean that you ought to:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T104939Z">
        <seg>Que sea B&lt;posible&gt; omitir los paréntesis en muchos lugares no significa que deba hacerlo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Along with the Perl interpreter itself, the Perl distribution installs a
range of utilities on your system.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110716T203910Z">
        <seg>Además del intérprete de Perl, la distribución de Perl incluye varias utilidades que se instalan en el sistema;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also note that these instructions are tailored for installing the
module into your system's repository of Perl modules, but you can
install modules into any directory you wish.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T235442Z">
        <seg>También debe tener en cuenta que, aunque estas instrucciones son específicas de la instalación del módulo en el repositorio de módulos Perl de su sistema, puede instalar un módulo en cualquier directorio que desee.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also shift operations internally use
signed integers rather than the default unsigned.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T194519Z">
        <seg>Además, las operaciones de desplazamiento usan internamente enteros con signo en lugar de los enteros sin signo predeterminados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, put this as the first line of your script:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T230121Z">
        <seg>Como alternativa, puede colocar al principio del script la siguiente línea:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can download a pre-built PPM package
from ActiveState.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T010158Z">
        <seg>Como alternativa, puede descargar un paquete PPM precompilado desde ActiveState:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can quote the class name:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T212742Z">
        <seg>De forma alternativa, puede escribir entre comillas el nombre de la clase:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although it retains most of
the original content from its O'Reilly Network, it is now hosted by
L&lt;The Perl Foundation|http://www.perlfoundation.org/&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T183159Z">
        <seg>Aunque conserva la mayor parte del contenido original de O'Reilly Network, ahora se hospeda en L&lt;The Perl Foundation|http://www.perlfoundation.org/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Always check the return codes of system calls.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T172557Z">
        <seg>Compruebe siempre los valores devueltos por las llamadas al sistema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An B&lt;object&gt; is a data structure that bundles together data and
subroutines which operate on that data.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T123248Z">
        <seg>Un B&lt;objeto&gt; es una estructura de datos que empaqueta datos y subrutinas que operan sobre los datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An C&lt;END&gt; code block is executed as late as possible, that is, after
perl has finished running the program and just before the interpreter
is being exited, even if it is exiting as a result of a die() function.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T113748Z">
        <seg>El bloque de código C&lt;END&gt; se ejecuta tan tarde como sea posible, es decir, una vez que Perl ha finalizado la ejecución del programa y justo antes de que se produzca la salida del intérprete, incluso si la salida se debe a la ejecución de la función die()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An C&lt;File::MP3&gt; B&lt;is-a&gt; I&lt;more specific&gt; type of C&lt;File&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T173329Z">
        <seg>Un objeto de la clase C&lt;Archivo::MP3&gt; es un (B&lt;is-a&gt;) tipo de objeto I&lt;más específico&gt; que un objeto de la clase C&lt;Archivo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An accessor lets you add additional code around attribute access.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T221620Z">
        <seg>Un método de acceso permite agregar código adicional para controlar el acceso a los atributos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An array represents a list of values:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T231513Z">
        <seg>Un array representa una lista de valores:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An attribute is a piece of data belonging to a particular object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T204455Z">
        <seg>Un atributo es un elemento de información que pertenece a un objeto específico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An exception would be if two modules
each tried to C&lt;use&gt; each other, and each also called a function from
that other module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170920Z">
        <seg>Puede producirse una excepción cuando dos módulos intentan usarse mutuamente mediante C&lt;use&gt; y a la vez cada uno llama a una función del otro módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An inside-out object stores its data outside of
the object's reference, indexed on a unique property of the object,
such as its memory address, rather than in the object itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T231418Z">
        <seg>Un objeto I&lt;inside-out&gt; almacena sus datos fuera de la referencia del objeto indexados mediante una propiedad única del objeto (como su dirección de memoria), en lugar de almacenarlos en el propio objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object can
be thought of as a noun (a person, a web service, a computer).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T161333Z">
        <seg>Un objeto puede verse como un nombre (una persona, un servicio web, un PC...).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object is simply a data structure that knows to which class it
belongs.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T124139Z">
        <seg>Un objeto es simplemente una estructura de datos que sabe a qué clase pertenece.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object represents a single discrete thing.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120627T101506Z">
        <seg>Representa una única cosa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object's data is called
B&lt;attributes&gt;, and its subroutines are called B&lt;methods&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T123300Z">
        <seg>Los datos de un objeto se denominan B&lt;atributos&gt; y las subrutinas se denominan B&lt;métodos&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And finally we'll test that we don't make Unicode strings if C&lt;U&gt; is
B&lt;not&gt; the first active format:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T002140Z">
        <seg>Por último, vamos a comprobar que no creamos cadenas Unicode si C&lt;U&gt; B&lt;no&gt; es el primer formato activo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And if the protocol you're using supports a way of letting the recipient know
which character encoding you used, please help the receiving end by using that
feature!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T221505Z">
        <seg>Y si el protocolo utilizado ofrece alguna manera de indicar al destinatario la codificación de caracteres utilizada, es muy recomendable hacerlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And just before we start the loop, we'll set C&lt;patcopy&gt; to be the start
of C&lt;pat&gt;:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T153229Z">
        <seg>Justo antes de empezar el bucle, se establece C&lt;patcopy&gt; como comienzo de C&lt;pat&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And most of all, it must
be something decodable.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110403T230119Z">
        <seg>También es fundamental que lo que se va a descodificar sea descodificable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And therefore before any CHECK blocks.\n"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T114734Z">
        <seg>Y, por tanto, antes que los bloques CHECK.\n"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another term for a setter is B&lt;mutator&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T173126Z">
        <seg>Un método I&lt;setter&gt; también se puede llamar B&lt;mutator&gt; (modificador).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another use of symbol tables is for making "constant" scalars.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T155420Z">
        <seg>Otro uso de la tabla de símbolos consiste en crear escalares "constantes".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any
part of your code which you can isolate and extract and plug into
something else is a likely candidate.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T185616Z">
        <seg>También son buenos candidatos los fragmentos de código que pueda aislar y extraer para conectarlos a otro componente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any
subroutine that blesses a data structure into a class is a valid
constructor in Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T153537Z">
        <seg>Cualquier subrutina que bendiga una estructura de datos en una clase es un constructor válido en Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any large IRC network (Dalnet, EFnet) is also likely to have a #perl channel,
with varying activity levels.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120407T140200Z">
        <seg>Es probable que también encuentre un canal #perl en cualquiera de las grandes redes de IRC (DALnet, EFnet), con distintos niveles de actividad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any switches in the C&lt;PERLDOC&gt; environment variable will be used before the
command line arguments.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T201542Z">
        <seg>Se consumen todos los modificadores de la variable de entorno C&lt;PERLDOC&gt; antes que los argumentos de línea de comandos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Anything that's likely to fill a hole in the communal
library and which someone else can slot directly into their program.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T182145Z">
        <seg>Todo aquello que llene un vacío en la biblioteca común y que alguien pueda usar directamente en sus programas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Appeal to their self interest!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T171947Z">
        <seg>Hágales ver que es por su propio interés.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arguments are forced into the integer format if not strings.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T200218Z">
        <seg>Fuerzan la conversión de los argumentos al formato de entero si no son cadenas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arrays are zero-indexed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T000921Z">
        <seg>El índice de un array empieza en cero.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As I'm
sure you have already guessed, this is a problem that DBM Filters can
fix very easily.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T153930Z">
        <seg>Como ya se habrá imaginado, éste es un problema que se puede solucionar fácilmente con filtros DBM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a beginning Perl programmer, your most common use of OO Perl will be
in using third-party modules, which are documented below.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T172009Z">
        <seg>La aplicación que suelen hacer los programadores principiantes de la programación orientada a objetos en Perl es la utilización de módulos de terceros, que se describe a continuación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a last resort, you can use the perl one-liner:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T001430Z">
        <seg>Como último recurso, puede ejecutar el siguiente comando perl de una sola línea:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a special case</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011145Z">
        <seg>Como un caso especial</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As it happens, using C&lt;@array&gt; where Perl
expects to find a scalar value ("in scalar context") will give you the number
of elements in the array:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120630T171307Z">
        <seg>Si utiliza C&lt;@array&gt; donde Perl espera encontrar un valor escalar ("en contexto de escalar"), obtendrá el número de elementos del array:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As mentioned earlier, Perl can store a number in any one of three formats,
but most operators typically understand only one of those formats.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T174644Z">
        <seg>Como se mencionó antes, Perl puede almacenar un número en uno de tres formatos distintos, pero la mayoría de los operadores suelen admitir solo uno de esos formatos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As of Perl
5.10, it even has a case/switch statement (spelled C&lt;given&gt;/C&lt;when&gt;).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T181809Z">
        <seg>En Perl 5.10, incluso ofrece una instrucción case/switch (llamada C&lt;given&gt;/C&lt;when&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As of Perl 5.10.1 there is a new interface for plugging and using method
resolution orders other than the default (linear depth first search).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T230243Z">
        <seg>En Perl 5.10.1 se incluyó una nueva interfaz para conectar y usar órdenes de resolución de métodos distintos del predeterminado (búsqueda lineal en profundidad).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As pragmata are implemented as modules, like any other module, C&lt;use myint;&gt;
becomes</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T232644Z">
        <seg>Los pragmas se implementan como cualquier módulo, por lo que C&lt;use entero;&gt;
se convierte en:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As the comment says, this is not a good way to implement accessors.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T181309Z">
        <seg>Como se indica en el comentario, esta no es una forma adecuada de implementar los métodos de acceso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As the language has evolved, it has become clear that it is a separate
language, incompatible with Perl 5 but in the same language family.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T203730Z">
        <seg>A medida que el lenguaje evolucionaba, se empezó a ver con claridad que se trataba de un lenguaje independiente, incompatible con Perl 5 pero perteneciente a la misma familia de lenguajes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we mentioned before, Perl's built-in OO system is very minimal, but
also quite flexible.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20121113T235032Z">
        <seg>Como ya se ha mencionado antes, el sistema predefinido de orientación a objetos de Perl es minimalista, pero también muy flexible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we mentioned before, roles provide an alternative to inheritance,
but Perl does not have any built-in role support.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T165835Z">
        <seg>Como se mencionó con anterioridad, los roles proporcionan un alternativa a la herencia, pero Perl no ofrece esta característica de forma predefinida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we mentioned earlier, Perl provides no special constructor syntax.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T164530Z">
        <seg>Como se ha mencionado previamente, Perl no incluye una sintaxis especial para los constructores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we said before, Perl's minimal OO system has led to a profusion of
OO systems on CPAN.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T105909Z">
        <seg>Como se indicó con anterioridad, el sistema de orientación a objetos de Perl es minimalista y esto ha hecho que surgieran muchos sistemas de programación orientada a objetos en CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we said earlier, most Perl objects are hashes, but an object can be
an instance of any Perl data type (scalar, array, etc.).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120627T221453Z">
        <seg>Como se ha indicado anteriormente, la mayoría de los objetos de Perl son hashes, pero un objeto puede ser una instancia de cualquier tipo de datos de Perl (escalar, array, etc).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we saw earlier, an object is simply a data structure that has been
blessed into a class via the C&lt;bless&gt; function.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T160300Z">
        <seg>Como ya se vio, un objeto no es más que una estructura de datos bendecida en una clase mediante la función C&lt;bless&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As well as grouping, parentheses serve a second purpose.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T120836Z">
        <seg>Además de para agrupar, los paréntesis también</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As well as these two, there is another converter: F&lt;pod2html&gt; will
produce HTML pages from POD.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T114045Z" creationid="explorer" creationdate="20150513T114045Z">
        <seg>Además de estos dos conversores, hay otro más: F&lt;pod2html&gt; genera
páginas HTML a partir de POD.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with any tool it can
be used well or badly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T192811Z">
        <seg>Como toda herramienta, se puede usar bien o mal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with constructors, Perl provides no special accessor declaration
syntax, so classes must provide explicitly written accessor methods.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T205828Z">
        <seg>Como ocurre con los constructores, en Perl no hay una sintaxis especial para la declaración de los métodos de acceso, de forma que las clases deben proporcionar métodos de acceso escritos explícitamente para ellas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you can see, we've stored the path and file data in the object
itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T221130Z">
        <seg>Como puede verse, hemos almacenado la ruta y los datos del archivo en el mismo objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assignment to a typeglob performs an aliasing operation, i.e.,</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T180207Z">
        <seg>Una asignación a un I&lt;typeglob&gt; realiza una operación de creación de alias. Por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At that point C&lt;$bar&gt; is no longer storing a reference to an
object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083326Z">
        <seg>En ese momento C&lt;$bar&gt; ya no almacena una referencia a un objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the very
least, remember this: modules should be title capitalised, (This::Thing)
fit in with a category, and explain their purpose succinctly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T190355Z">
        <seg>Como mínimo, debe recordar que las palabras que componen el nombre de un módulo deben escribirse con la letra inicial mayúscula (Este::Programa) y que cada módulo debe pertenecer a una categoría e incluir una descripción de su propósito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the very least it will let some poor
schmuck bounce on the % key in B&lt;vi&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T100436Z">
        <seg>Por lo menos así los tontos podrán usar la tecla % en B&lt;vi&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the workshops, subjects range from a beginner's
introduction (such as the Pittsburgh Perl Workshop's "Zero To Perl") to much
more advanced subjects.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T181116Z">
        <seg>Estos talleres cubren temas que van desde la iniciación de principiantes (como la clase "Zero to Perl" del Pittsburgh Perl Workshop) hasta temas mucho más avanzados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At various points, however, it
temporarily switches back to the C&lt;main&gt; package to evaluate various
expressions in the context of the C&lt;main&gt; package (or wherever you came
from).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T134845Z">
        <seg>Sin embargo, en varios puntos cambia temporalmente al paquete C&lt;main&gt; para evaluar diversas expresiones en este contexto (o en el contexto en el que esté trabajando).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Attribute inheritance is left up the class to implement.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T155652Z">
        <seg>La herencia de atributos debe implementarse en la clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Attributes are often stored in the object itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T204548Z">
        <seg>Los atributos se suelen almacenar en el mismo objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Attributes are sometimes called B&lt;properties&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T084242Z">
        <seg>Los atributos también se suelen llamar B&lt;propiedades&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Attributes are typically defined as read-only or read-write.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184414Z">
        <seg>Los atributos se suelen definir como de solo lectura o de lectura y escritura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Avoid using C&lt;grep()&gt; (or C&lt;map()&gt;) or `backticks` in a void context, that is,
when you just throw away their return values.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T100817Z">
        <seg>Evite usar C&lt;grep()&gt; (o C&lt;map()&gt;) o `acentos graves` en un contexto nulo (es decir, desechando los valores de retorno).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T084236Z">
        <seg>B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174037Z">
        <seg>B.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B: 4</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193755Z">
        <seg>B: 4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Binary strings&gt;, or B&lt;byte strings&gt; are made of bytes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T214142Z">
        <seg>Las B&lt;cadenas binarias&gt; (o B&lt;cadenas de bytes&gt;) están constituidas por bytes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;D&gt;escribes search for the item in B&lt;d&gt;etail.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110808T212950Z">
        <seg>B&lt;D&gt;escribe de manera B&lt;d&gt;etallada la búsqueda de un elemento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Decoding&gt; is the conversion from I&lt;binary&gt; to I&lt;text&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T222849Z">
        <seg>B&lt;Descodificar&gt; consiste en convertir I&lt;binario&gt; a I&lt;texto&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Don't&gt; attempt to store references to data structures as integers which
are retrieved via C&lt;caller&gt; and converted back, as this will not be threadsafe.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T214546Z">
        <seg>B&lt;No&gt; intente almacenar referencias a estructuras de datos como enteros que se recuperan a través de C&lt;caller&gt; y se vuelven a convertir, ya que esto no garantiza una ejecución segura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Encapsulation&gt; is the idea that an object is opaque.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T085921Z">
        <seg>La B&lt;encapsulación&gt; expresa la idea de que los objetos son opacos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Encoding&gt; (as a verb) is the conversion from I&lt;text&gt; to I&lt;binary&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T222210Z">
        <seg>B&lt;Codificar&gt; consiste en convertir I&lt;texto&gt; a I&lt;binario&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;If you're on MVS&gt;,</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T011023Z">
        <seg>B&lt;Si usa MVS&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;If you're on OS/2,&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T010837Z">
        <seg>B&lt;Si usa OS/2&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;If you're on VMS,&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T010853Z">
        <seg>B&lt;Si usa VMS&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;If you're on a Unix or Unix-like system,&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T010230Z">
        <seg>B&lt;Si usa un sistema Unix o similar&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;If you're on the DJGPP port of DOS,&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T010846Z">
        <seg>B&lt;Si usa una versión DJGPP de DOS&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;If you're running ActivePerl (Win95/98/2K/NT/XP, Linux, Solaris),&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T121934Z" creationid="explorer" creationdate="20150513T121934Z">
        <seg>B&lt;Si utiliza ActivePerl (Win95/98/2K/NT/XP, Linux, Solaris),&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;If you're using a Macintosh with "Classic" MacOS and MacPerl,&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T010250Z">
        <seg>B&lt;Si usa un equipo Macintosh con MacOS "Classic" y MacPerl&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Inheritance&gt; lets you create a specialized version of an existing
class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184624Z">
        <seg>La B&lt;herencia&gt; permite crear una versión especializada de una clase existente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Invocant&gt; is a fancy name for the
thing on the left side of the arrow.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T182914Z">
        <seg>B&lt;Autor de la llamada&gt; es un nombre elaborado que simplemente quiere decir lo que está a la izquierda de la flecha.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Or&gt;, if you aren't using cpan-mac, do some manual labor.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T225500Z">
        <seg>B&lt;O bien&gt;, si no usa cpan-mac, haga un poco de trabajo manual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Or&gt;, you can either use the shareware B&lt;StuffIt Expander&gt; program
( http://my.smithmicro.com/mac/stuffit/ )
or the freeware B&lt;MacGzip&gt; program (
http://persephone.cps.unizar.es/general/gente/spd/gzip/gzip.html ).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T232658Z">
        <seg>B&lt;O bien&gt;, puede utilizar el programa shareware B&lt;StuffIt Expander&gt; ( http://my.smithmicro.com/mac/stuffit/ ) o el programa gratuito B&lt;MacGzip&gt; ( http://persephone.cps.unizar.es/general/gente/spd/gzip/gzip.html ).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Or&gt;, you can use the freeware B&lt;suntar&gt; or I&lt;Tar&gt; (
http://hyperarchive.lcs.mit.edu/HyperArchive/Archive/cmp/ ).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T181028Z">
        <seg>B&lt;O bien&gt;, puede utilizar el software gratuito B&lt;suntar&gt; o I&lt;Tar&gt; ( http://hyperarchive.lcs.mit.edu/HyperArchive/Archive/cmp/ ).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Outside of the file handle case, use of this syntax is discouraged as
it can confuse the Perl interpreter.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160549Z" creationid="explorer" creationdate="20150905T160549Z">
        <seg>B&lt;Salvo en el caso de los identificadores de archivo, se desaconseja el uso de esta sintaxis, ya que puede confundir al intérprete de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Polymorphism&gt; is a fancy way of saying that objects from two
different classes share an API.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184516Z">
        <seg>El B&lt;polimorfismo&gt; es una forma elegante de decir que los objetos de dos clases distintas comparten una API.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;RESTRICTION&gt;: The conversions marked with C&lt;(*)&gt; above involve steps
performed by the C compiler.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T192913Z">
        <seg>B&lt;RESTRICCIÓN&gt;: las conversiones anteriores marcadas con C&lt;(*)&gt; implican pasos ejecutados por el compilador de C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Roles&gt; are something that a class I&lt;does&gt;, rather than something that
it I&lt;is&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T101655Z">
        <seg>Los B&lt;roles&gt; representan lo que la clase I&lt;hace&gt;, no lo que la clase I&lt;es&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Text strings&gt;, or B&lt;character strings&gt; are made of characters.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195735Z">
        <seg>Las B&lt;cadenas de texto&gt;, o B&lt;cadenas de caracteres&gt;, están constituidas por caracteres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Those that should, but don't.&gt;  These need to be fixed; consider
contacting the author and possibly writing a patch.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003604Z">
        <seg>B&lt;Los que deberían, pero no lo hacen&gt;. Habría que arreglarlos; debe ponerse en contacto con el autor o incluso enviarle un parche.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;UTF-8&gt; is a Unicode encoding.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T221744Z">
        <seg>B&lt;UTF-8&gt; es una codificación de Unicode.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;Unicode&gt; is a character set with room for lots of characters.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110212T155824Z">
        <seg>B&lt;Unicode&gt; es un juego de caracteres en el que caben muchos caracteres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;perl&gt;	S&lt;[ B&lt;-sTtuUWX&gt; ]&gt;
	S&lt;[ B&lt;-hv&gt; ] [ B&lt;-V&gt;[:I&lt;configvar&gt;] ]&gt;
	S&lt;[ B&lt;-cw&gt; ] [ B&lt;-d&gt;[B&lt;t&gt;][:I&lt;debugger&gt;] ] [ B&lt;-D&gt;[I&lt;number/list&gt;] ]&gt;
	S&lt;[ B&lt;-pna&gt; ] [ B&lt;-F&gt;I&lt;pattern&gt; ] [ B&lt;-l&gt;[I&lt;octal&gt;] ] [ B&lt;-0&gt;[I&lt;octal/hexadecimal&gt;] ]&gt;
	S&lt;[ B&lt;-I&gt;I&lt;dir&gt; ] [ B&lt;-m&gt;[B&lt;-&gt;]I&lt;module&gt; ] [ B&lt;-M&gt;[B&lt;-&gt;]I&lt;'module...'&gt; ] [ B&lt;-f&gt; ]&gt;
	S&lt;[ B&lt;-C [I&lt;number/list&gt;] &gt;]&gt;
	S&lt;[ B&lt;-S&gt; ]&gt;
	S&lt;[ B&lt;-x&gt;[I&lt;dir&gt;] ]&gt;
	S&lt;[ B&lt;-i&gt;[I&lt;extension&gt;] ]&gt;
	S&lt;[ [B&lt;-e&gt;|B&lt;-E&gt;] I&lt;'command'&gt; ] [ B&lt;--&gt; ] [ I&lt;programfile&gt; ] [ I&lt;argument&gt; ]...&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T124453Z">
        <seg>B&lt;perl&gt;	S&lt;[ B&lt;-sTtuUWX&gt; ]&gt;
	S&lt;[ B&lt;-hv&gt; ] [ B&lt;-V&gt;[:I&lt;var_config&gt;] ]&gt;
	S&lt;[ B&lt;-cw&gt; ] [ B&lt;-d&gt;[B&lt;t&gt;][:I&lt;depurador&gt;] ] [ B&lt;-D&gt;[I&lt;número/lista&gt;] ]&gt;
	S&lt;[ B&lt;-pna&gt; ] [ B&lt;-F&gt;I&lt;patrón&gt; ] [ B&lt;-l&gt;[I&lt;octal&gt;] ] [ B&lt;-0&gt;[I&lt;octal/hexadecimal&gt;] ]&gt;
	S&lt;[ B&lt;-I&gt;I&lt;dir&gt; ] [ B&lt;-m&gt;[B&lt;-&gt;]I&lt;módulo&gt; ] [ B&lt;-M&gt;[B&lt;-&gt;]I&lt;'módulo...'&gt; ] [ B&lt;-f&gt; ]&gt;
	S&lt;[ B&lt;-C [I&lt;número/lista&gt;] &gt;]&gt;
	S&lt;[ B&lt;-S&gt; ]&gt;
	S&lt;[ B&lt;-x&gt;[I&lt;dir&gt;] ]&gt;
	S&lt;[ B&lt;-i&gt;[I&lt;extensión&gt;] ]&gt;
	S&lt;[ [B&lt;-e&gt;|B&lt;-E&gt;] I&lt;'comando'&gt; ] [ B&lt;--&gt; ] [ I&lt;archivo_programa&gt; ] [ I&lt;argumento&gt; ]...&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;perldoc&gt; looks up a piece of documentation in .pod format that is
embedded in the perl installation tree or in a perl script, and displays
it via C&lt;groff -man | $PAGER&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T130148Z">
        <seg>B&lt;perldoc&gt; busca un elemento de documentación con formato .pod incluido en el árbol de instalación de perl o en un script perl, y ejecuta C&lt;groff -man | $PAGER&gt; para mostrarlo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>B&lt;piconv&gt; is a Perl version of B&lt;iconv&gt;, a character encoding converter
widely available for various Unixen today.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110716T162309Z">
        <seg>B&lt;piconv&gt; es una versión Perl de B&lt;iconv&gt;, un conversor de codificaciones de caracteres de uso muy extendido en el mundo Unix.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BEGIN blocks run FIFO during compilation.\n" }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T163805Z">
        <seg>Los bloques BEGIN se ejecutan en orden FIFO durante la compilación.\n" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BEGIN {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T162016Z">
        <seg>BEGIN {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BEGIN { *Some_package::foo = sub { ... } }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T181513Z">
        <seg>BEGIN { *Un_paquete::foo = sub { ... } }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BEGIN { print " 1.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011513Z">
        <seg>BEGIN { print " 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BEGIN { print " 2.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011530Z">
        <seg>BEGIN { print " 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BEGIN { require 'Module.pm'; 'Module'-&gt;import( LIST ); }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165935Z">
        <seg>BEGIN { require 'Modulo.pm'; 'Modulo'-&gt;import(LISTA); }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BEGIN { require 'Module.pm'; 'Module'-&gt;import; }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165926Z">
        <seg>BEGIN { require 'Modulo.pm'; 'Modulo'-&gt;import; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BEGIN { require 'Module.pm'; }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165948Z">
        <seg>BEGIN { require 'Modulo.pm'; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BUILD</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195133Z">
        <seg>COMPILACIÓN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Back before Perl had the XS system for connecting with C libraries,
programmers used to get library constants by reading through the C
header files.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T141615Z">
        <seg>Mucho antes de que existiera en Perl el sistema XS para conectar bibliotecas C, los programadores tenían que leer los archivos de encabezado de C para obtener las constantes de biblioteca.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be careful, though, to never combine text strings with binary strings.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T224701Z">
        <seg>No obstante, debe evitar combinar cadenas de texto con cadenas binarias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be consistent.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T172739Z">
        <seg>Sea coherente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be honest about possible disadvantages
to your choice of Perl since any choice has trade-offs.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T184205Z">
        <seg>Sea honesto y admita posibles desventajas de elegir Perl. Al fin y al cabo, toda elección conlleva ventajas y desventajas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be nice.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T123002Z">
        <seg>Sea amable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because B&lt;perldoc&gt; does not run properly tainted, and is known to
have security issues, when run as the superuser it will attempt to
drop privileges by setting the effective and real IDs to nobody's
or nouser's account, or -2 if unavailable.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T203334Z">
        <seg>Como B&lt;perldoc&gt; no usa comprobaciones de seguridad y se sabe que tiene vulnerabilidades, cuando se ejecuta como superusuario intentará ceder privilegios estableciendo los identificadores efectivo y real en la cuenta nobody o nouser, o en -2 si dichas cuentas no están disponibles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because C&lt;$body&gt; is now a byte string, C&lt;length&gt; will report the
number of bytes, instead of the number of characters.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T223559Z">
        <seg>Como C&lt;$cuerpo_texto&gt; es una cadena de bytes, C&lt;length&gt; devolverá el número de bytes, en lugar del número de caracteres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because C&lt;DESTROY&gt; methods can be called at any time, you should
localize any global variables you might update in your C&lt;DESTROY&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T182529Z">
        <seg>Como los métodos C&lt;DESTROY&gt; pueden llamarse en cualquier momento, debe localizar cualquier variable global que pueda actualizarse mediante C&lt;DESTROY&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because Perl
allows subroutine names to be written as barewords, Perl has to guess
whether the bareword after the method is a class name or subroutine
name.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T002947Z">
        <seg>Puesto que Perl permite usar palabras sueltas como nombres de subrutinas, debe adivinar si dichas palabras a continuación del método aluden a un nombre de clase o de subrutina.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because Perl allows you to use barewords for package names and
subroutine names, it sometimes interprets a bareword's meaning
incorrectly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T002650Z">
        <seg>Puesto que Perl permite usar palabras sueltas como nombres de paquetes y subrutinas, a veces se interpreta de forma incorrecta el significado de alguna de estas palabras.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because UTF-8 is one of Perl's internal formats, you can often just skip the
encoding or decoding step, and manipulate the UTF8 flag directly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T172027Z">
        <seg>Como UTF-8 es uno de los formatos internos de Perl, a menudo puede omitir el paso de codificar o descodificar, y manipular la marca UTF8 directamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because a C&lt;BEGIN&gt;
code block executes immediately, it can pull in definitions of subroutines
and such from other files in time to be visible to the rest of the compile
and run time.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T080554Z">
        <seg>Puesto que el bloque de código C&lt;BEGIN&gt; se ejecuta inmediatamente, puede obtener definiciones de subrutinas, etc. de otros archivos a tiempo para que sean visibles en tiempo de compilación y ejecución.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the C&lt;use&gt; statement implies a C&lt;BEGIN&gt; block, the importing
of semantics happens as soon as the C&lt;use&gt; statement is compiled,
before the rest of the file is compiled.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170517Z">
        <seg>Como la instrucción C&lt;use&gt; implica la presencia de un bloque C&lt;BEGIN&gt;, la importación de semántica tiene lugar tan pronto como se haya compilado la instrucción C&lt;use&gt;, antes de que se compile el resto del archivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the internal format is often UTF-8, these bugs are hard to spot,
because UTF-8 is usually the encoding you wanted!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T220127Z">
        <seg>Como el formato interno suele ser UTF-8, es difícil detectar estos errores (puesto que normalmente la codificación deseada es UTF-8).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the old-fashioned syntax is still
supported for backwards compatibility, if you try to use a string like
C&lt;"This is $owner's house"&gt;, you'll be accessing C&lt;$owner::s&gt;; that is,
the $s variable in package C&lt;owner&gt;, which is probably not what you meant.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T174843Z">
        <seg>Puesto que la sintaxis antigua todavía se admite por compatibilidad con las versiones anteriores, si intenta usar una cadena como C&lt;"Vamos a cenar en $Gino's"&gt;, se accederá a C&lt;$Gino::s&gt;; es decir, la variable $s del paquete C&lt;Gino&gt;, que seguramente no sea lo que desea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because these are not part of
the standard distribution, they may and in fact do differ from the
base perl port in a variety of ways.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T181138Z">
        <seg>Como no forman parte de la distribución estándar, es posible que existan diferencias (de hecho, existen) con respecto a la versión básica de perl en diversos aspectos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because variables are accessed through the
typeglob, you can use C&lt;*foo = *bar&gt; to create an alias which can be
localized.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T112400Z">
        <seg>Como el acceso a las variables se realiza a través del I&lt;typeglob&gt;, puede usar C&lt;*foo = *bar&gt; para crear un alias que se pueda localizar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because we don't
have special variable types, and Perl needs to know whether to sort
numerically (where 99 is less than 100) or alphabetically (where 100 comes
before 99).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T120527Z">
        <seg>Porque Perl no distingue el tipo del contenido de las variables y tiene que determinar si debe ordenar numéricamente (99 menor que 100) o alfabéticamente (100 es anterior a
99).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before we even start scraping out the code, there are a few things we'll
want to do in advance.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T185949Z">
        <seg>Antes de empezar a preparar el código debe hacer algunas cosas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before you panic, know that many people do use C&lt;Moose&gt; for
command-line tools and other startup-sensitive code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185449Z">
        <seg>Antes de asustarse debe saber que mucha gente usa C&lt;Moose&gt; para construir herramientas de línea de comandos y código con necesidades específicas de tiempo de inicio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Being strings, and thus of arbitrary length, there
is no practical limit for the exponent or number of decimal digits for these
numbers.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T193426Z">
        <seg>Al ser cadenas y, por tanto, al tener una longitud arbitraria, no existe un límite práctico para el exponente o el número de dígitos decimales para estos números.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Besides
being a cool trick, this means that you can extend C&lt;Moose&gt; using
C&lt;Moose&gt; itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T103639Z">
        <seg>Además de ser un truco ingenioso, significa que puede extender C&lt;Moose&gt; mediante C&lt;Moose&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Besides being used internally during the build process of the Encode
module, you can use F&lt;enc2xs&gt; to add your own encoding to perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T143939Z">
        <seg>F&lt;enc2xs&gt; se usa internamente durante el proceso de compilación del módulo Encode; también lo puede usar para agregar su propia codificación a perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Besides, you wouldn't
want to distribute code that wasn't warning or strict-clean anyway,
right?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T190512Z">
        <seg>Además, no querrá distribuir código que no respete los pragmas warnings y strict, ¿no?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Best practices for making a new module.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T140205Z" creationid="explorer" creationdate="20150905T140205Z">
        <seg>Procedimientos recomendados para crear un módulo nuevo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beware of changing C&lt;$?&gt; by accident (e.g. by
running something via C&lt;system&gt;).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T162521Z">
        <seg>Evite cambiar C&lt;$?&gt; accidentalmente (por ejemplo, ejecutando algo mediante C&lt;system&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beyond that, he has other preferences that aren't so strong:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T095450Z">
        <seg>Aparte de eso, Larry tiene otras preferencias menos estrictas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beyond that, you have to consider several things and decide which is best
for you.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T190802Z">
        <seg>Si desea usar otras versiones, para decidir cuál es la que más le conviene debe tener en cuenta varias cosas, como las siguientes:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Binary distributions for some proprietary platforms can be found
L&lt;http://www.cpan.org/ports/&gt; directory.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211100Z">
        <seg>En el directorio L&lt;http://www.cpan.org/ports/&gt; encontrará distribuciones binarias para algunas plataformas comerciales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Blank lines between chunks that do different things.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T132601Z">
        <seg>Líneas en blanco entre fragmentos que hagan cosas distintas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both "fetch" filters remove the terminating NULL,
and both "store" filters add a terminating NULL.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T154105Z">
        <seg>Los dos filtros "fetch" quitan el carácter NULL de terminación y los dos filtros "store" agregan un carácter NULL de terminación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both C&lt;BEGIN&gt; and C&lt;CHECK&gt; blocks are run when you use the B&lt;-c&gt;
switch for a compile-only syntax check, although your main code
is not.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T114435Z">
        <seg>Los bloques C&lt;BEGIN&gt; y C&lt;CHECK&gt; se ejecutan cuando se usa el modificador B&lt;-c&gt; para llevar a cabo únicamente una compilación de comprobación de la sintaxis, aunque no se ejecute el código principal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both failures are not really specific to the Hurd, as indicated by the
test suite output.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T203655Z">
        <seg>En realidad, estos errores no son específicos de Hurd (como parece indicar el resultado del conjunto de pruebas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both of
these things have on/off switches.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T101757Z">
        <seg>Ambos aparatos tienen interruptores de encendido/apagado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Building tree
structures from Perl variables and then traversing them is a nice,
general problem, and if nobody's already written a module that does
that, you might want to modularise that code too.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T215827Z">
        <seg>Crear estructuras de árbol a partir de variables Perl y después recorrerlas es un problema de aplicación general interesante, y si nadie ha creado un módulo que haga eso, es posible que desee convertir también este código en un módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But don't be lazy, and don't
use the fact that Perl's internal format is UTF-8 to your advantage.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T231359Z">
        <seg>Pero no sea perezoso; no debe basarse en el hecho de que el formato interno de Perl es UTF-8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But if we used that package name
directly as a filename it would make for unwieldy or impossible
filenames on some systems.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T084745Z">
        <seg>Pero si se usa ese nombre de paquete directamente como nombre de archivo, la manipulación de este nombre de archivo podría resultar difícil (o incluso imposible) en otros sistemas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But in all other cases, you should decode it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T224313Z">
        <seg>Pero en todos los demás casos debe hacerlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But many people
think that Unicode is special and magical, and I didn't want to disappoint
them, so I decided to call the document a Unicode tutorial.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T224531Z">
        <seg>Pero muchas personas piensan que Unicode es algo especial y mágico. Como no quiero que se sientan defraudadas, he decidido clasificar este documento como un tutorial de Unicode.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But never write "PERL",
because perl is not an acronym.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T190338Z">
        <seg>pero no debe escribir "PERL", ya que perl no es un acrónimo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But since you asked: by default, the
internal format is either ISO-8859-1 (latin-1), or utf8, depending on the
history of the string.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T003405Z">
        <seg>Pero para que no se quede con la duda, debe saber que, de manera predeterminada la codificación del formato interno es ISO-8859-1 (latin-1) o utf8, en función del historial de la cadena.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But there
might not actually be any real demand for it out there.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T220143Z">
        <seg>pero puede ocurrir que a nadie le interese.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But what about the thing in the middle?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T151941Z">
        <seg>Pero, ¿qué pasa con el resto?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, Perl does a depth-first left-to-right search for a method.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T163141Z">
        <seg>De manera predeterminada, Perl hace una búsqueda en profundidad y con recorrido de izquierda a derecha.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, Perl's built-in OO system is very minimal, leaving you to
do most of the work.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120627T095703Z">
        <seg>El sistema de orientación a objetos predeterminado de Perl es minimalista; deja al usuario la mayor parte del trabajo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, every method
in the parent class is also available in the child.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T225448Z">
        <seg>De manera predeterminada, cada método de la clase primaria también estará disponible en la clase derivada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, this is equivalent to C&lt;isa&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161710Z">
        <seg>De manera predeterminada, equivale a C&lt;isa&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, whenever Perl writes to
a DBM database it always writes the key and value as strings.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T160112Z">
        <seg>de manera predeterminada, cuando Perl escribe en una base de datos DBM, siempre escribe la clave y el valor como cadenas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By first converting the FOO-encoded byte string to a text string, and then the
text string to a BAR-encoded byte string:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T233318Z">
        <seg>Primero debe convertir la cadena de bytes con la codificación A en una cadena de texto y después la cadena de texto en una cadena de bytes con la codificación B:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bytes are
irrelevant here, and so are encodings.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T201231Z">
        <seg>En este contexto, los bytes y las codificaciones son irrelevantes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T084506Z">
        <seg>C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174014Z">
        <seg>C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C: 4.6</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193756Z">
        <seg>C: 4.6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;*foo = *bar&gt; makes the typeglobs themselves synonymous while
C&lt;*foo = \$bar&gt; makes the SCALAR portions of two distinct typeglobs
refer to the same scalar value.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T112141Z">
        <seg>C&lt;*foo = *bar&gt; hace que los I&lt;typeglobs&gt; sean sinónimos, mientras que C&lt;*foo = \$bar&gt; hace que las partes escalares de dos I&lt;typeglobs&gt; distintos se refieran al mismo valor escalar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;++&gt; behaves as the other operators above, except that if it is a string
matching the format C&lt;/^[a-zA-Z]*[0-9]*\z/&gt; the string increment described
in L&lt;perlop&gt; is used.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T191804Z">
        <seg>C&lt;++&gt; se comporta como los operadores anteriores, con la diferencia de que si se aplica a una cadena que tenga el formato C&lt;/^[a-zA-Z]*[0-9]*\z/&gt;, se usa el incremento de cadena descrito en L&lt;perlop&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;@EXPORT_OK&gt;, on the other hand,
specifies which symbols you're willing to export.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T182923Z">
        <seg>Por otra parte, C&lt;@EXPORT_OK&gt; le permite especificar los símbolos que desea exportar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;@INC&gt; is also printed as
part of the output of</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T192031Z">
        <seg>C&lt;@INC&gt; también se imprime en pantalla como parte de la salida de </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;AUTOLOAD&gt; is called as a regular method, and the caller will not know
the difference.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T172641Z">
        <seg>Se llama a C&lt;AUTOLOAD&gt; igual que a un método normal, y desde la perspectiva del código que llama no hay ninguna diferencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;BEGIN&gt; and C&lt;UNITCHECK&gt; blocks are not directly related to the phase of
the interpreter.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T162736Z">
        <seg>Los bloques C&lt;BEGIN&gt; y C&lt;UNITCHECK&gt; no están directamente relacionados con la fase del intérprete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;CHECK&gt; code blocks are run just after the B&lt;initial&gt; Perl compile phase ends
and before the run time begins, in LIFO order.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T081726Z">
        <seg>Los bloques de código C&lt;CHECK&gt; se ejecutan inmediatamente después de que finalice la fase B&lt;inicial&gt; de compilación de Perl y antes de que comience el tiempo de ejecución, en orden LIFO.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;CHECK&gt; code blocks are used
in the Perl compiler suite to save the compiled state of the program.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T163003Z">
        <seg>Los bloques de código C&lt;CHECK&gt; se usan en el compilador de Perl para guardar el estado compilado del programa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;CLONE&gt; will be called once as a class method for every package that has it
defined (or inherits it).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T172334Z">
        <seg>Se llamará a C&lt;CLONE&gt; como método de clase una vez por cada paquete en el que esté definido (o que lo herede).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Class::Accessor&gt; does a lot less than C&lt;Moose&gt;, and is a nice
alternative if you find C&lt;Moose&gt; overwhelming.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T105254Z">
        <seg>C&lt;Class::Accessor&gt; es un sistema mucho más reducido que C&lt;Moose&gt;, pero ofrece una alternativa interesante cuando C&lt;Moose&gt; resulta excesivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Class::Tiny&gt; is the absolute minimal option.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T133031Z" creationid="explorer" creationdate="20150905T133031Z">
        <seg>C&lt;Class::Tiny&gt; es la opción más minimalista.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;END&gt; blocks are not executed when you run perl with the
C&lt;-c&gt; switch, or if compilation fails.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T113836Z">
        <seg>Los bloques C&lt;END&gt; no se ejecutarán si se inicia perl con el modificador C&lt;-c&gt; o si se produce un error de compilación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;FE&lt;lt&gt;E&lt;gt&gt;&gt; should
be the only Pod code for file names, but as most Pod formatters render it
as italic, Unix and Windows paths with their slashes and backslashes may
be less readable, and better rendered with C&lt;CE&lt;lt&gt;E&lt;gt&gt;&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T105949Z">
        <seg>C&lt;FE&lt;lt&gt;E&lt;gt&gt;&gt; debería ser el único código Pod usado para nombres de archivo, pero como la mayoría de los formateadores de Pod lo muestran en cursiva, las rutas de acceso de Unix y Windows, con sus barras diagonales y barras diagonales inversas, podrían resultar menos legibles, por lo que es mejor usar C&lt;CE&lt;lt&gt;E&lt;gt&gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;File&gt; is a B&lt;superclass&gt; of C&lt;File::MP3&gt;, and C&lt;File::MP3&gt; is a
B&lt;subclass&gt; of C&lt;File&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184736Z">
        <seg>C&lt;Archivo&gt; es una B&lt;superclase&gt; de C&lt;Archivo::MP3&gt; y C&lt;Archivo::MP3&gt; es una
B&lt;subclase&gt; de C&lt;Archivo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;INIT&gt; blocks are run just before the Perl runtime begins execution, in
"first in, first out" (FIFO) order.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T163041Z">
        <seg>Los bloques C&lt;INIT&gt; se ejecutan justo antes de iniciar el tiempo de ejecución de Perl, en orden "primero en entrar, primero en salir " (FIFO, I&lt;first in, first out&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;INNER&gt; refers to a totally
separate global package.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T175054Z">
        <seg>C&lt;INTERIOR&gt; es un paquete global totalmente independiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moo&gt;
implements a subset of C&lt;Moose&gt;'s functionality in a simpler package.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T122606Z" creationid="explorer" creationdate="20150905T122606Z">
        <seg>C&lt;Moo&gt;
implementa un subconjunto de la funcionalidad de C&lt;Moose&gt; en un paquete más sencillo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moo&gt; does not implement most of C&lt;Moose&gt;'s introspection API, so it's
often faster when loading your modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T122906Z" creationid="explorer" creationdate="20150905T122906Z">
        <seg>C&lt;Moo&gt; no implementa la mayor parte de la API de introspección de C&lt;Moose&gt;, por lo que
los módulos suelen cargarse más rápido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moo&gt; is C&lt;Moose&gt; lite, and a reasonable alternative when Moose
doesn't work for your application.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T133907Z" creationid="explorer" creationdate="20150905T132442Z">
        <seg>C&lt;Moo&gt; es una versión ligera de C&lt;Moose&gt; que ofrece una alternativa razonable cuando Moose
no es adecuado para la aplicación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moose&gt;
builds on top of them and creates a full introspection layer for your
classes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185420Z">
        <seg>C&lt;Moose&gt; se basa en ellas y crea una capa completa de introspección para sus clases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moose&gt; also has several dependencies on other modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104004Z">
        <seg>Por otra parte, C&lt;Moose&gt; depende de muchos módulos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moose&gt; can make your code slower to load.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T165358Z">
        <seg>Puede hacer que su código tarde más tiempo en cargar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moose&gt; describes itself using its own introspection API.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T103625Z">
        <seg>C&lt;Moose&gt; se describe a sí mismo mediante su propia API de introspección.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moose&gt; is a very powerful tool, and we can't cover all of its
features here.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T165331Z">
        <seg>C&lt;Moose&gt; es una herramienta muy poderosa. Aquí solo hemos descrito una pequeña parte de sus características.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moose&gt; is the maximal option.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T105126Z">
        <seg>C&lt;Moose&gt; es la opción máxima (la más completa).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moose&gt; itself is not
small, and it does a I&lt;lot&gt; of code generation when you define your
class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185446Z">
        <seg>C&lt;Moose&gt; no es pequeño y genera una I&lt;gran&gt; cantidad de código cuando el usuario define sus propias clases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moose&gt; itself, and some of its dependencies, require a
compiler.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104031Z">
        <seg>C&lt;Moose&gt; y algunas de sus dependencias requieren un compilador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moose&gt; lets you define roles the same way you define classes:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194150Z">
        <seg>C&lt;Moose&gt; permite definir roles de la misma forma en que se definen las clases:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moose&gt; provides a complete, modern OO system.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185306Z">
        <seg>C&lt;Moose&gt; proporciona un completo y moderno sistema de orientación a objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moose&gt; provides a layer of declarative "sugar" for defining classes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T103010Z">
        <seg>C&lt;Moose&gt; proporciona una capa de simplificación declarativa para definir las clases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moose&gt; provides a number of features:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T164912Z">
        <seg>C&lt;Moose&gt; proporciona diversas características:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Moose&gt; was created by Stevan
Little, and draws heavily from his work on the Perl 6 OO design.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185309Z">
        <seg>C&lt;Moose&gt; fue creado por Stevan Little y se basa en su trabajo sobre el diseño de orientación a objetos de Perl 6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;Role::Tiny&gt; provides some of the same features as Moose's role
system, but in a much smaller package.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T105023Z">
        <seg>C&lt;Role::Tiny&gt; ofrece algunas de las características que proporciona el sistema Moose, pero en un paquete mucho más pequeño.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;UNITCHECK&gt; blocks are run just after the unit which defined them has
been compiled.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T162636Z">
        <seg>Los bloques C&lt;UNITCHECK&gt; se ejecutan inmediatamente después de que se haya compilado la unidad que los definió.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;UNITCHECK&gt;, C&lt;CHECK&gt; and C&lt;INIT&gt; code blocks are useful to catch the
transition between the compilation phase and the execution phase of
the main program.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T122253Z">
        <seg>Los bloques C&lt;UNITCHECK&gt;, C&lt;CHECK&gt; e C&lt;INIT&gt; son útiles para capturar la transición entre la fase de compilación y la de ejecución del programa principal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;UTF-8&gt; is internally known as C&lt;utf-8-strict&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T223108Z">
        <seg>Internamente, C&lt;UTF-8&gt; se denomina C&lt;utf-8-strict&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;UTF-8&gt; is the official standard.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T222915Z">
        <seg>C&lt;UTF-8&gt; es el estándar oficial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;eval&gt;ed strings are compiled in the package in which the eval() was
compiled.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T111631Z">
        <seg>Las cadenas evaluadas con C&lt;eval&gt; se compilan en el paquete en que se compiló la función eval()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;module-starter&gt; or C&lt;h2xs&gt; will provide a stub for you to fill in; if
you're not sure about the format, look at L&lt;perlpod&gt; for an
introduction.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T183900Z">
        <seg>C&lt;module-starter&gt; y C&lt;h2xs&gt; proporcionan un esqueleto que puede rellenar; si no conoce el formato POD y desea ver una introducción, consulte L&lt;perlpod&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;my&gt; creates lexically
scoped variables instead.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T231956Z">
        <seg>En cambio, C&lt;my&gt; crea variables dentro de un ámbito léxico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;pack("  U*", @stuff)&gt; will have C&lt;U&gt; as the first active
character, even though it's not the first thing in the pattern.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T160447Z">
        <seg>C&lt;pack("  U*", @algo)&gt; tendrá C&lt;U&gt; como primer carácter activo, pero no es el primer carácter del patrón.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;perldoc&gt; also searches directories
specified by the C&lt;PERL5LIB&gt; (or C&lt;PERLLIB&gt; if C&lt;PERL5LIB&gt; is not
defined) and C&lt;PATH&gt; environment variables.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T203428Z">
        <seg>C&lt;perldoc&gt; también busca en los directorios especificados por las variables de entorno C&lt;PERL5LIB&gt; (o C&lt;PERLLIB&gt; si C&lt;PERL5LIB&gt; no está definida) y C&lt;PATH&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;perldoc&gt; will use, in order of preference, the pager defined in
C&lt;PERLDOC_PAGER&gt;, C&lt;MANPAGER&gt;, or C&lt;PAGER&gt; before trying to find a pager
on its own.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T201701Z">
        <seg>C&lt;perldoc&gt; usará (por orden de preferencia) el paginador definido en C&lt;PERLDOC_PAGER&gt;, C&lt;MANPAGER&gt; o C&lt;PAGER&gt; antes de intentar localizar un paginador</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;sprintf "%u", -1&gt; therefore provides the same result as
C&lt;sprintf "%u", ~0&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T191604Z">
        <seg>Así, C&lt;sprintf "%u", -1&gt; produce el mismo resultado que C&lt;sprintf "%u", ~0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;use bytes&gt; is usually a failed attempt to do something useful.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120511T211102Z">
        <seg>C&lt;use bytes&gt; suele ser un intento fallido de hacer algo útil.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;use feature 'unicode_strings'&gt; tells Perl to treat all characters as
Unicode, whether the string is encoded in UTF-8 or not, thus avoiding
the problem.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T001746Z">
        <seg>C&lt;use feature 'unicode_strings'&gt; indica a Perl que debe tratar todos los caracteres como Unicode, independientemente de si la cadena está codificada como UTF-8 o no, lo que evita el problema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C&lt;utf8&gt; is Perl's way of being liberal in
what it accepts.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T235028Z">
        <seg>C&lt;utf8&gt; es la manera que tiene Perl de mostrarse liberal al procesar la entrada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CHECK blocks run LIFO after all compilation.\n" }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T114655Z">
        <seg>Los bloques CHECK se ejecutan en orden LIFO tras la compilación.\n" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CHECK { print " 5.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011515Z">
        <seg>CHECK { print " 5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CHECK { print " 6.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T163727Z">
        <seg>CHECK { print " 6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CPAN
contains tens of thousands of modules and extensions, source code
and documentation, designed for I&lt;everything&gt; from commercial
database interfaces to keyboard/screen control and running large web sites.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T190327Z">
        <seg>En CPAN puede encontrar decenas de millares de módulos y extensiones, código fuente y documentación, diseñados para I&lt;todo tipo&gt; de aplicaciones, como interfaces de bases de datos comerciales, control de pantalla y teclado, o sitios web de gran complejidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CPAN has several JAPH programs at L&lt;http://www.cpan.org/misc/japh&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T153926Z">
        <seg>En CPAN encontrará varios programas JAPH, en L&lt;http://www.cpan.org/misc/japh&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CPAN stands for Comprehensive Perl Archive Network, a multi-gigabyte
archive replicated on hundreds of machines all over the world.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T151539Z">
        <seg>CPAN es la sigla de I&lt;Comprehensive Perl Archive Network&gt;, un repositorio que ocupa muchos gigabytes y está replicado en cientos de equipos del planeta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CPAN, or the Comprehensive Perl Archive Network L&lt;http://www.cpan.org/&gt;,
is a replicated, worldwide repository of Perl software.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T185923Z">
        <seg>CPAN, o Comprehensive Perl Archive Network ( L&lt;http://www.cpan.org/&gt; ), es un repositorio de software Perl replicado en todo el mundo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Call your subroutines as if they were
functions or list operators to avoid excessive ampersands and parentheses.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T105553Z">
        <seg>Llame a las subrutinas como si fueran funciones u operadores de lista para evitar un número excesivo de signos &amp; y paréntesis.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Calling a method on an object is written as C&lt;&lt; $object-&gt;method &gt;&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T160109Z">
        <seg>La llamada a un método de un objeto se hace de la forma siguiente: C&lt;&lt; $objeto-&gt;método &gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Categories of modules range from text manipulation to network protocols
to database integration to graphics.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230937Z">
        <seg>Las categorías de módulos abarcan desde la manipulación de texto hasta protocolos de red, integración de bases de datos o gráficos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Changes to these
modules should be submitted to the maintainer of the CPAN module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204541Z">
        <seg>Los cambios realizados en estos módulos deben enviarse al mantenedor del módulo de CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Changing a
class's parent class or adding subroutines to a class will invalidate
the cache for that class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T220910Z">
        <seg>Cambiar la clase primaria de una clase o agregar una subrutina a una clase invalidará el contenido de la caché para dicha clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check
your decompression and unpacking utilities settings to make sure they are
translating text files properly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T231619Z">
        <seg>Compruebe la configuración de sus herramientas para descomprimir y desempaquetar; asegúrese de que traducen correctamente los archivos de texto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check L&lt;perlop&gt; for more
detail.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T163020Z">
        <seg>Consulte L&lt;perlop&gt; para obtener más información).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check the CPAN Testers if a module should work with your platform
but it doesn't behave as you'd expect, or you aren't sure whether or
not a module will work under your platform.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T004141Z">
        <seg>Consulte la información de CPAN Testers para comprobar si se espera que el módulo funcione en su plataforma en caso de que no se comporte de la manera esperada, o si no está seguro de si un módulo funcionará en su plataforma.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check the contents of the distribution.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010355Z">
        <seg>Compruebe el contenido de la distribución.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Child</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T163034Z">
        <seg>Hijo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Choose mnemonic identifiers.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T230201Z">
        <seg>Elija identificadores mnemotécnicos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class-based OO is fairly common.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194410Z">
        <seg>La orientación a objetos basada en clases en bastante común.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class::-&gt;new()</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211125Z">
        <seg>Clase::-&gt;new()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Comments start with a hash symbol and run to the end of the line</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110204T163702Z">
        <seg>Los comentarios comienzan con un símbolo # y van hasta el final de la línea:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Community
support in places such as Perlmonks ( L&lt;http://www.perlmonks.com&gt; )
and the various Perl mailing lists ( L&lt;http://lists.perl.org&gt; ) means that
you can usually get quick answers to your problems.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T153903Z">
        <seg>La comunidad ofrece soporte en foros como Perlmonks ( L&lt;http://www.perlmonks.com&gt; )
y las distintas listas de correo de Perl ( L&lt;http://lists.perl.org&gt; ). Generalmente, siempre que plantee algún problema recibirá rápidamente ayuda para solucionarlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compilation errors will tell you the line number of the error, with an
indication of the next token or token type that was to be examined.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T233331Z">
        <seg>Los errores de compilación le indicarán el número de línea del error, además del siguiente símbolo o tipo de símbolo que iba a ser examinado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Computing MROs can be expensive.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T225256Z">
        <seg>El cálculo de órdenes de resolución de métodos puede ser costoso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider arguments as file names; no search in directories will be performed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T202256Z">
        <seg>Especifica que los argumentos son nombres de archivos; no se realizan búsquedas en directorios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider changing your whole
world view.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T104011Z">
        <seg>Debería incluso cambiar su visión del mundo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider generalizing your
code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T103920Z">
        <seg>Debería generalizar el código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider giving away your code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T103957Z">
        <seg>Debería compartir el código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider making your
code run cleanly with C&lt;use strict&gt; and C&lt;use warnings&gt; (or B&lt;-w&gt;) in
effect.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T103949Z">
        <seg>Debería escribir código más limpio con C&lt;use strict&gt; y C&lt;use warnings&gt; (o B&lt;-w&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider writing a module or object class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T103943Z">
        <seg>Debería convertir el código en un módulo o una clase de objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider... oh, never mind.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T104033Z">
        <seg>Debería... bueno, ya me callo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contact the module
author instead, or post to comp.lang.perl.modules, or ask someone
familiar with Perl on your operating system.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T011835Z">
        <seg>Debe ponerse en contacto con el autor del módulo o enviar un mensaje a comp.lang.perl.modules; también puede pedir ayuda a alguien que esté familiarizado con el uso de Perl en su sistema operativo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contrary to popular belief, Perl 6 and Perl 5 peacefully coexist with one
another.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T203642Z">
        <seg>En contra de la creencia popular, Perl 6 y Perl 5 coexisten pacíficamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copyright (C) 1998, 2002, 2003 Jon Orwant.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174107Z">
        <seg>Copyright (C) 1998, 2002, 2003 Jon Orwant.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copyright (c) 1997-2010 Tom Christiansen, Nathan Torkington, and
other authors as noted.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110227T195157Z">
        <seg>Copyright (c) 1997-2010 Tom Christiansen, Nathan Torkington y otros autores indicados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create whatever directory structures are required
(i.e., for C&lt;Some::Module&gt;, create
C&lt;$ENV{MACPERL}site_lib:Some:&gt; and put
C&lt;Module.pm&gt; in that directory).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T002643Z">
        <seg>Cree las estructuras de directorios necesarias (es decir, para C&lt;Mi::Modulo&gt;, cree C&lt;$ENV{MACPERL}site_lib:Mi:&gt; y coloque C&lt;Modulo.pm&gt; en ese directorio).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Current Perl's
should handle this problem correctly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T202629Z">
        <seg>Este problema está solucionado en la versión actual de Perl,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Current maintainer: Mark Allen C&lt;&lt; &lt;mallen@cpan.org&gt; &gt;&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T195341Z">
        <seg>Mantenedor actual: Mark Allen C&lt;&lt; &lt;mallen@cpan.org&gt; &gt;&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Currently CLONE is called with
no parameters other than the invocant package name, but code should not assume
that this will remain unchanged, as it is likely that in future extra parameters
will be passed in to give more information about the state of cloning.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T121228Z">
        <seg>Actualmente se llama a C&lt;CLONE&gt; sin más parámetros que el nombre del paquete que llama, pero esto podría cambiar; es probable que en el futuro se pasen parámetros adicionales para proporcionar más información sobre el estado de la clonación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Currently, those are perl5.18.x and perl5.16.x, respectively.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T105217Z" creationid="explorer" creationdate="20160505T105134Z">
        <seg>En la actualidad, éstas son perl5.22.x y perl5.20.x respectivamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>D.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174018Z">
        <seg>D.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>D: 4</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193757Z">
        <seg>D: 4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DBM Filters are useful for a class of problems where you I&lt;always&gt;
want to make the same transformation to all keys, all values or both.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T153547Z">
        <seg>Los filtros DBM son útiles para un tipo de problema en el que se desea aplicar I&lt;siempre&gt; la misma transformación a todas las claves, a todos los valores, o a todas las claves y todos los valores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DECOMPRESS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T005857Z">
        <seg>DESCOMPRIMIR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Decimal strings may have an exponential notation part, as in C&lt;"12.34e-56"&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T173029Z">
        <seg>Las cadenas decimales pueden tener una parte en notación exponencial (por ejemplo, C&lt;"12.34e-56"&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Decode everything you receive, encode everything you send out.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T223659Z">
        <seg>Descodifique todo lo que reciba y codifique todo lo que envíe</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Decoding can't happen reliably if you don't know how the data was encoded.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T221209Z">
        <seg>No es posible descodificar de manera fiable si no se sabe cómo se codificaron los datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Decompress the file with C&lt;gzip -d yourmodule.tar.gz&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003353Z">
        <seg>Ejecute C&lt;gzip -d mimodulo.tar.gz&gt; para descomprimir el módulo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Development started in 2002; syntax and design work continue to this day.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T174959Z">
        <seg>Su desarrollo comenzó en 2002; actualmente se sigue trabajando en su sintaxis y su diseño.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Did we mention that you should definitely consider using the B&lt;use warnings&gt;
pragma?</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150514T162601Z" creationid="explorer" creationdate="20150514T162601Z">
        <seg>No olvide que es muy importante utilizar el pragma B&lt;use warnings&gt;
.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Different definitions of Perl are given in L&lt;perl&gt;, L&lt;perlfaq1&gt; and
no doubt other places.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T180348Z">
        <seg>En L&lt;perl&gt;, L&lt;perlfaq1&gt; y en muchos otros sitios se incluyen definiciones de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dig into a bunch of modules to see how they're written.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T172855Z">
        <seg>Analice minuciosamente unos cuantos módulos para ver cómo los han programado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Display docs using plain B&lt;t&gt;ext converter, instead of nroff.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T164530Z">
        <seg>Muestra los documentos con un conversor de B&lt;t&gt;exto simple, en lugar de nroff.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Display onB&lt;l&gt;y the file name of the module found.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T120747Z">
        <seg>Muestra sóB&lt;l&gt;o el nombre de archivo del módulo encontrado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Display the entire module: both code and unformatted pod documentation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T181355Z">
        <seg>Muestra el módulo completo: tanto el código como la documentación pod sin formato.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Displays the version of perldoc you're running.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T185009Z">
        <seg>Muestra la versión de perldoc que se ejecuta actualmente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not consider one style to be better than others - "There's
More Than One Way To Do It" is one of Perl's mottos.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T152142Z">
        <seg>Ningún estilo es mejor que otro. No olvide que uno de los lemas de Perl es "Se puede hacer de varias maneras".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not patch these modules directly!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T232706Z">
        <seg>No debe aplicar parches a estos módulos directamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do note that the examples have been written by many different authors over
a period of several decades.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T100256Z">
        <seg>Tenga en cuenta que los ejemplos han sido escritos por muchos autores distintos a lo largo de varias décadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do the proper
conversions (by decoding/encoding), and things will work out well: you get
character counts for decoded data, and byte counts for encoded data.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T002906Z">
        <seg>Realice las conversiones apropiadas (mediante descodificación o codificación) y todo saldrá bien: contará caracteres para los datos descodificados y bytes para los datos codificados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do whatever you can to find out, and if you have to: guess.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T001108Z">
        <seg>Haga lo que pueda para averiguar cuál es la codificación; adivínela, si no queda más remedio</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Does the module require compilation (i.e. does it have files that end
in .xs, .c, .h, .y, .cc, .cxx, or .C)?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T180744Z">
        <seg>¿Hay que compilar el módulo (es decir, contiene archivos con la extensión .xs, .c, .h, .y, .cc, .cxx o .C)?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dogmatically advocating anything tends to make
people discount your message.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T172219Z">
        <seg>En cambio, si defiende sus ideas de manera dogmática, hará que las personas desconfíen de su mensaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Doing these checks by hand can quickly become tedious.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T210506Z">
        <seg>Hacer manualmente estas comprobaciones puede resultar tedioso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't
be scared, the "postmodern" label is a callback to Larry's description
of Perl as "the first postmodern computer language".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T164824Z">
        <seg>No se asuste, la etiqueta "postmoderno" es una referencia a la descripción de Perl que hizo Larry: "el primer lenguaje de programación postmoderno".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't be afraid to use loop labels--they're there to enhance
readability as well as to allow multilevel loop breaks.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T222502Z">
        <seg>No tenga miedo de usar etiquetas en bucles; mejoran la legibilidad y permiten establecer salidas de bucle en varios niveles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't bother.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T181236Z">
        <seg>No es necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't create a class named "0" unless you know what
you're doing.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161150Z">
        <seg>No cree una clase llamada "0" a menos que sepa exactamente lo que está haciendo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't forget Perl modules, either.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110223T113102Z">
        <seg>Y no olvidemos los módulos Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't go through silly contortions to exit a loop at the top or the
bottom, when Perl provides the C&lt;last&gt; operator so you can exit in
the middle.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T173046Z">
        <seg>No tiene que hacer filigranas para salir de un bucle al principio o al final. Perl dispone del operador C&lt;last&gt;, con el que puede salir desde cualquier punto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't use it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T222520Z">
        <seg>No lo use.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't use slash as a delimiter when your regexp has slashes or backslashes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111013T145925Z">
        <seg>Si una expresión regular contiene barras diagonales o barras diagonales inversas, no use barras diagonales como delimitadores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Double quotes or single quotes may be used around literal strings:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233612Z">
        <seg>Las cadenas literales se pueden escribir entre comillas dobles o simples:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>During global destruction, Perl will always garbage collect objects
before unblessed references.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T230936Z">
        <seg>Durante la fase de destrucción global, Perl siempre reclamará la memoria usada por los objetos antes que la de las referencias no bendecidas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>E.g., C&lt;$obj-E&lt;gt&gt;as_string()&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111013T143933Z">
        <seg>P. ej., C&lt;$obj-E&lt;gt&gt;como_cadena()&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>E: 4.6</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193804Z">
        <seg>E: 4.6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>END blocks run LIFO at quitting time.\n" }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T082635Z">
        <seg>Los bloques END se ejecutan en orden LIFO al finalizar.\n" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>END { ... }       # module clean-up code here (global destructor)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165624Z">
        <seg>END { ... }       # el código de limpieza del módulo va aquí (destructor global)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>END { print   "14.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011521Z">
        <seg>END { print   "14.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>END { print   "15.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011514Z">
        <seg>END { print   "15.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>END { print   "16.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231449Z">
        <seg>END { print   "16.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each
major version has significant differences that earlier versions cannot
support.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110223T110840Z">
        <seg>Cada versión principal incorpora diferencias importantes que no son compatibles con las versiones anteriores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each character is just that: the
character.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195753Z">
        <seg>Cada carácter no es más que eso: un carácter.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each class can define its B&lt;attributes&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200337Z">
        <seg>Cada clase puede definir sus B&lt;atributos&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each of the methods works identically, and is used to install (or
uninstall) a single DBM Filter.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111001T155249Z">
        <seg>Todos los métodos funcionan de la misma manera y se usan para instalar (o
desinstalar) un filtro DBM individual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each package contains a special array called C&lt;@ISA&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083459Z">
        <seg>Cada paquete contiene un array especial llamado C&lt;@ISA&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each plugin should register itself by providing
the following structure</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T223459Z">
        <seg>Cada complemento debe registrarse a sí mismo proporcionando la siguiente estructura</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each programmer will, of course, have his or her own preferences in
regards to formatting, but there are some general guidelines that will
make your programs easier to read, understand, and maintain.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T184035Z">
        <seg>Cada programador tendrá, naturalmente, sus propias preferencias con respecto al estilo, pero hay algunas directrices que harán que sus programas resulten más fáciles de leer, entender y mantener.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each version of Perl comes with the documentation that was current at
the time of release.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110526T104811Z">
        <seg>Cada versión de Perl incluye documentación actualizada en el momento del lanzamiento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Earlier, we mentioned that the C&lt;File&gt; class's C&lt;last_mod_time&gt;
accessor could return a L&lt;DateTime&gt; object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T170820Z">
        <seg>Se ha mencionado previamente que en la clase C&lt;Archivo&gt; el método de acceso al miembro C&lt;hora_ult_mod&gt; podría devolver un objeto de la clase L&lt;DateTime&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edgar "Trizor" Bering &lt;trizor@gmail.com&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T224632Z">
        <seg>Edgar "Trizor" Bering &lt;trizor@gmail.com&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Editorial adjustments by Gurusamy Sarathy &lt;gsar@ActiveState.com&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T191429Z">
        <seg>Ajustes editoriales de Gurusamy Sarathy &lt;gsar@ActiveState.com&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Encapsulation is important for several reasons.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185137Z">
        <seg>La encapsulación es importante por varias razones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Encapsulation means that the user of an object does
not have to know how it is implemented.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T205029Z">
        <seg>La encapsulación significa que el usuario de un objeto no tiene por qué conocer cómo está implementado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Encode
explicitly to avoid weird bugs, and to show to maintenance programmers that you
thought this through.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T231416Z">
        <seg>Codifique explícitamente para evitar errores extraños y para que los programadores que van a mantener el código vean que ha pensado en todo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Encode and output</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195920Z">
        <seg>Codificar y emitir los resultados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Especially C&lt;_utf8_on&gt; can be dangerous, for
the same reason that C&lt;:utf8&gt; can.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120423T141017Z">
        <seg>En particular, el uso de C&lt;_utf8_on&gt; puede resultar peligroso, por las mismas razones que el uso de C&lt;:utf8&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even if
the thing you're communicating with is also written in Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T000148Z">
        <seg>(aunque dicha entidad externa también se haya programado en Perl).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even if you aren't in doubt, consider the mental welfare of the person
who has to maintain the code after you, and who will probably put
parentheses in the wrong place.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T112230Z">
        <seg>Aunque usted no tenga dudas, piense en el bienestar mental de la persona que tendrá que mantener el código en el futuro; es probable que ponga los paréntesis en el lugar equivocado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even numbered minor versions (5.14, 5.16, 5.18) are production versions, and
odd numbered minor versions (5.15, 5.17, 5.19) are development versions.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T113643Z" creationid="explorer" creationdate="20160505T110028Z">
        <seg>Los números de versión secundaria pares (5.18, 5.20, 5.22) indican versiones de producción, mientras que los números de versión secundaria impares (5.19, 5.21, 5.23) indican versiones de desarrollo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even the most
minimal of them eliminates a lot of repetitive boilerplate.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T102714Z">
        <seg>Incluso los más sencillos le ahorrarán tener que escribir el mismo código repetidamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even though it doesn't do much, it is still preferable to writing your
own classes from scratch.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104415Z">
        <seg>Aunque no le quitará mucho trabajo, es preferible a escribir sus propias clases desde cero.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even though the object is
blessed into the C&lt;C&gt; class, the C&lt;speak()&gt; method in the C&lt;B&gt; class
can still call C&lt;SUPER::speak()&gt; and expect it to correctly look in the
parent class of C&lt;B&gt; (i.e the class the method call is in), not in the
parent class of C&lt;C&gt; (i.e. the class the object belongs to).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162712Z">
        <seg>Incluso si el objeto es bendecido en la clase C&lt;C&gt;, el método C&lt;decir()&gt; de la clase C&lt;B&gt; puede llamar a C&lt;SUPER::decir()&gt; y esperar que se busque correctamente en la clase primaria de C&lt;B&gt; (es decir, la clase dónde se produce la llamada al método) y no en la clase primaria de C&lt;C&gt; (es decir, la clase a la que pertenece el objeto).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every CPAN module has a bug tracker set up in RT, L&lt;http://rt.cpan.org&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211643Z">
        <seg>Todo módulo de CPAN tiene un sistema de seguimiento de errores configurado en RT, L&lt;http://rt.cpan.org&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every developer publishing modules on CPAN needs a CPAN ID.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T184111Z">
        <seg>Para poder publicar módulos en CPAN, un programador necesita un identificador de CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exactly like C:</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Exactamente igual que en C:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T074012Z">
        <seg>Ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example:
C&lt;perldoc -oLaTeX -dtextwrapdocs.tex Text::Wrap&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T074256Z">
        <seg>Ejemplo:
C&lt;perldoc -oLaTeX -dtextwrapdocs.tex Text::Wrap&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Examples of specialized
languages that come to mind include prolog and matlab.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T154635Z">
        <seg>Algunos ejemplos de lenguajes especializados son prolog y matlab.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Examples:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T005509Z">
        <seg>Ejemplos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Except where otherwise noted, you
should assume that C&lt;use strict&gt; and C&lt;use warnings&gt; statements
appear earlier in the "program", and that any variables used have
already been declared, even if those declarations have been omitted
to make the example easier to read.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T153333Z">
        <seg>Salvo si se indica lo contrario, debe suponer que al principio del "programa" se incluyen las instrucciones C&lt;use strict&gt; y C&lt;use warnings&gt;, y que todas las variables han sido declaradas, aunque se omitan las declaraciones para facilitar la lectura del ejemplo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Executables for gzip, zip, and VMStar:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T151621Z">
        <seg>Ejecutables para gzip, zip y VMStar:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exhaustive information on the topic of references can be found in
L&lt;perlreftut&gt;, L&lt;perllol&gt;, L&lt;perlref&gt; and L&lt;perldsc&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T171613Z">
        <seg>Encontrará información detallada sobre las referencias en L&lt;perlreftut&gt;, L&lt;perllol&gt;, L&lt;perlref&gt; y L&lt;perldsc&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;c2ph&gt; and F&lt;pstruct&gt;, which are actually the same program but behave
differently depending on how they are called, provide another way of
getting at C with Perl - they'll convert C structures and union declarations
to Perl code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T154435Z">
        <seg>F&lt;c2ph&gt; y F&lt;pstruct&gt; son en realidad el mismo programa, pero se comportan de manera distinta en función de cómo se invoquen. Proporcionan otra manera de incorporar código C en Perl: convierten declaraciones de estructuras y uniones de C en código Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;cpan&gt; is a command-line interface to CPAN.pm.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T145238Z">
        <seg>F&lt;cpan&gt; es una interfaz de línea de comandos de CPAN.pm.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;enc2xs&gt; builds a Perl extension for use by Encode from either
Unicode Character Mapping files (.ucm) or Tcl Encoding Files (.enc).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T143757Z">
        <seg>F&lt;enc2xs&gt; genera una extensión Perl para Encode a partir de archivos de asignación de caracteres Unicode (.ucm) o de archivos de codificación Tcl (.enc).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;h2xs&gt; converts C header files into XS modules, and will try and write
as much glue between C libraries and Perl modules as it can.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110716T162042Z">
        <seg>F&lt;h2xs&gt; convierte archivos de encabezado de C en módulos XS y agrega gran parte del código necesario para la comunicación entre bibliotecas C y módulos Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;perlbug&gt; is the recommended way to report bugs in the perl interpreter
itself or any of the standard library modules back to the developers;
please read through the documentation for F&lt;perlbug&gt; thoroughly before
using it to submit a bug report.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T154237Z">
        <seg>La manera recomendada de notificar errores del intérprete perl o de cualquier módulo de la biblioteca estándar a sus programadores es usar F&lt;perlbug&gt;; pero antes de usar F&lt;perlbug&gt; debe leer con atención su documentación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;perldoc&gt; will extract and format the documentation from any file
in the current directory, any Perl module installed on the system, or
any of the standard documentation pages, such as this one.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T150047Z">
        <seg>F&lt;perldoc&gt; extrae y aplica formato a la documentación de cualquier archivo del directorio actual, cualquier módulo Perl instalado en el sistema o cualquiera de las páginas de documentación estándar, como ésta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;pod2usage&gt; is a special case of F&lt;podselect&gt;, a utility to extract
named sections from documents written in POD.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T150435Z">
        <seg>F&lt;pod2usage&gt; es un caso especial de F&lt;podselect&gt;, una utilidad que permite extraer secciones con nombre de documentos escritos en formato POD.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;prove&gt; is a command-line interface to the test-running functionality
of F&lt;Test::Harness&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T202635Z">
        <seg>F&lt;prove&gt; es una interfaz de línea de comandos de la funcionalidad de ejecución de pruebas de F&lt;Test::Harness&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;ptar&gt; is a tar-like program, written in pure Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T144905Z">
        <seg>F&lt;ptar&gt; es un programa tar escrito en código Perl puro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;ptardiff&gt; is a small utility that produces a diff between an extracted
archive and an unextracted one.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T145104Z">
        <seg>F&lt;ptardiff&gt; es una pequeña utilidad que genera las diferencias entre un archivo de almacenamiento extraído y uno sin extraer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;ptargrep&gt; is a utility to apply pattern matching to the contents of files 
in a tar archive.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T160545Z">
        <seg>F&lt;ptargrep&gt; es una utilidad que aplica detección de patrones al contenido de un archivo de almacenamiento tar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;splain&gt; is an interface to L&lt;perldiag&gt; - paste in your error message
to it, and it'll explain it for you.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T171939Z">
        <seg>F&lt;splain&gt; es una interfaz de L&lt;perldiag&gt;; si le pasa un mensaje de error mostrará una descripción más completa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;xsubpp&gt; is a compiler to convert Perl XS code into C code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T144025Z">
        <seg>F&lt;xsubpp&gt; es un compilador que permite convertir código XS de Perl en código C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F&lt;xsubpp&gt; will compile XS code into C code by embedding the constructs
necessary to let C functions manipulate Perl values and creates the glue
necessary to let Perl access those functions.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T154825Z">
        <seg>F&lt;xsubpp&gt; compila el código XS y genera código C; para ello, incrusta las construcciones necesarias para que las funciones C puedan manipular valores Perl y agregar el código necesario para que Perl pueda acceder a esas funciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Failed 2/229 test scripts, 99.13% okay.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T211253Z">
        <seg>Failed 2/229 test scripts, 99.13% okay.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Failed Test  Status Wstat Total Fail  Failed  List of failed</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T211359Z">
        <seg>Failed Test  Status Wstat Total Fail  Failed  List of failed</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Father        Mother</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160323Z" creationid="explorer" creationdate="20150905T160309Z">
        <seg>Padre        Madre</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filtering is achieved by modifying
the contents of C&lt;$_&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110819T095732Z">
        <seg>El filtrado se realiza modificando el contenido de C&lt;$_&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, because Perl is frequently (but not always, and certainly not by
definition) an interpreted language, you can write your programs and test
them without an intermediate compilation step, allowing you to experiment
and test/debug quickly and easily.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T150502Z">
        <seg>Por último, como Perl es frecuentemente un lenguaje interpretado (aunque no siempre y, desde luego, no por definición), puede escribir sus programas y probarlos sin un paso de compilación intermedio, lo que le permite experimentar y probar/depurar de manera rápida y sencilla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, documentation intended for core Perl developers lives in the
F&lt;Porting/&gt; directory.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T202212Z">
        <seg>Por último, la documentación para programadores del núcleo de Perl se encuentra en el directorio F&lt;Porting/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, keep in mind that Perl might not be the right tool for every
job.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110329T231222Z">
        <seg>Por último, tenga en cuenta que Perl puede no ser la herramienta adecuada para algunas tareas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, the documentation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T153835Z">
        <seg>Por último, falta la documentación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, using accessors makes inheritance much simpler.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T205402Z">
        <seg>Además, el uso de los métodos de acceso simplifica la herencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, we have L&lt;Class::Tiny&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T125236Z" creationid="explorer" creationdate="20150905T125236Z">
        <seg>Por último, también está disponible L&lt;Class::Tiny&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First held in Australia it has
recently also spread to Israel and France.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T182551Z">
        <seg>Se realizó por vez primera en Australia y recientemente se ha extendido también a Israel y Francia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First version July 22, 1998; last revised November 21, 2001.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T004605Z">
        <seg>Primera versión: 22 de julio de 1998. Última revisión: 21 de noviembre de 2001.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First we locate the code in question
- the C&lt;pack&gt; happens at runtime, so it's going to be in one of the
F&lt;pp&gt; files.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T152826Z">
        <seg>Primero tenemos que buscar el código en cuestión. La función C&lt;pack&gt; se usa en tiempo de ejecución, por lo que estará en uno de los archivos F&lt;pp&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, are you sure that the module isn't already on your system?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T234509Z">
        <seg>Primero debe asegurarse de que el módulo no está instalado en el sistema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, ensure that you've found an actual bug.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T185306Z">
        <seg>En primer lugar, debe asegurarse de que se trata realmente de un error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, it allows you to
separate the public API from the private implementation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T163708Z">
        <seg>En primer lugar, permite separar la API pública de la implementación privada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, it can be confusing to read.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T151632Z">
        <seg>En primer lugar, puede ser confusa al leer el código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, make sure you have the latest B&lt;cpan-mac&gt; distribution (
http://www.cpan.org/authors/id/CNANDOR/ ), which has utilities for
doing all of the steps.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000921Z">
        <seg>En primer lugar, asegúrese de que tiene instalada la distribución más reciente de B&lt;cpan-mac&gt; ( http://www.cpan.org/authors/id/CNANDOR/ ), un módulo que contiene las utilidades necesarias para realizar todos los pasos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, type C&lt;ppm&gt; from a shell and see whether ActiveState's PPM
repository has your module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T185230Z">
        <seg>En primer lugar, escriba C&lt;ppm&gt; en una consola y vea si el módulo está disponible en alguno de los repositorios de PPM de ActiveState.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, we'll test that the C&lt;U&gt; does indeed create Unicode
strings.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T153553Z">
        <seg>En primer lugar, comprobaremos que C&lt;U&gt; crea realmente cadenas Unicode.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, you can append a
C&lt;::&gt; to the class name:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T212715Z">
        <seg>En primer lugar, puede agregar C&lt;::&gt; al nombre de la clase:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Five specially named code blocks are executed at the beginning and at
the end of a running Perl program.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T161443Z">
        <seg>Hay cinco bloques de código con un nombre especial que se ejecutan al principio y final de la ejecución de un programa Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For
example, if it was UTF-8, the individual bytes of multibyte characters are seen
as separate characters, and then again converted to UTF-8.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T004243Z">
        <seg>Por ejemplo, si la codificación es UTF-8, los bytes individuales de los caracteres multibyte se verán como caracteres independientes y se volverán a convertir a UTF-8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For
example, it tests that everyone who is listed in the git log has a
corresponding entry in the F&lt;AUTHORS&gt; file.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204356Z">
        <seg>Por ejemplo, comprueban que todas las personas que figuran en el registro de git tienen una entrada correspondiente en el archivo F&lt;AUTHORS&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For
example, you could apply a default to an attribute that wasn't set in
the constructor, or you could validate that a new value for the
attribute is acceptable.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T205351Z">
        <seg>Por ejemplo, podemos aplicar un valor predeterminado a un atributo al que no se asignó ningún valor en el constructor o podemos validar un valor nuevo asignado al atributo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For
instance</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T173156Z">
        <seg>Por ejemplo,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For
most projects, this information will probably suffice.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T204605Z">
        <seg>Sin embargo, es probable que para la mayoría de los proyectos baste con esta información.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For C&lt;File::MP3&gt;, its only parent is
C&lt;File&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T085729Z">
        <seg>La única clase primaria de C&lt;Archivo::MP3&gt; es C&lt;Archivo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For URLs, HTTP and
HTTPS are the only kind currently supported.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T195725Z">
        <seg>Para direcciones URL, actualmente solo se admite HTTP y HTTPS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For Windows, use a binary version of Perl,
L&lt;Strawberry Perl|http://strawberryperl.com/&gt; and
L&lt;ActivePerl|http://www.activestate.com/activeperl&gt; come with a
bundled C compiler.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T182807Z">
        <seg>Para Windows, use una versión binaria de Perl.
L&lt;Strawberry Perl|http://strawberryperl.com/&gt; y
L&lt;ActivePerl|http://www.activestate.com/activeperl&gt; incluyen un compilador de C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a more detailed discussion, see L&lt;Unicode::Semantics&gt; on CPAN.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T001933Z">
        <seg>Encontrará una descripción más detallada en L&lt;Unicode::Semantics&gt; (disponible en CPAN).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a more help-oriented #perl,
check out L&lt;irc://irc.freenode.net/#perl&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120407T140046Z">
        <seg>Si busca un canal #perl más orientado a la ayuda, pruebe L&lt;irc://irc.freenode.net/#perl&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For bigger projects, L&lt;Moose&gt; provides a rich set of features that will
let you focus on implementing your business logic.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T110045Z">
        <seg>Para proyectos más complejos, L&lt;Moose&gt; proporciona un variado conjunto de características que le permitirán centrarse en la implementación de la lógica del sistema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For comparisons to a specific language it is often best to create
a small project in both languages and compare the results, make sure
to use all the L&lt;resources|http://www.cpan.org/&gt; of each language,
as a language is far more than just it's syntax.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T184044Z">
        <seg>Para realizar comparaciones con otro lenguaje específico, lo mejor suele ser crear un proyecto pequeño en ambos lenguajes y analizar los resultados. Asegúrese de usar todos los L&lt;recursos|http://www.cpan.org/&gt; disponibles para cada lenguaje; no olvide que un lenguaje es mucho más que la sintaxis.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For ease of access, the Perl manual has been split up into several sections.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T204534Z">
        <seg>Para facilitar el acceso, el manual de Perl se ha dividido en varias secciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example,
0.9 cannot be represented by a native float, since the binary fraction
for 0.9 is infinite:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T195239Z">
        <seg>Por ejemplo, 0.9 no se puede representar como un número de punto flotante nativo porque la fracción binaria correspondiente a 0.9 es infinita:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example,
C&lt;-w textsize:15&gt; will call
C&lt;&lt; $formatter-&gt;textsize(15) &gt;&gt; on the formatter object before it is
used to format the object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T203112Z">
        <seg>Por ejemplo, C&lt;-w textsize:15&gt; llamará a C&lt;&lt; $formatter-&gt;textsize(15) &gt;&gt; en el objeto formateador antes de que se use para aplicar formato al objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example,
C&lt;Your-Module-1.33.tar.gz&gt; should be downloaded as
C&lt;Your-Module-1_33.tgz&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003043Z">
        <seg>Por ejemplo, al descargar deberá cambiar el nombre C&lt;Mi-Modulo-1.33.tar.gz&gt; por C&lt;Mi-Modulo-1_33.tgz&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example,
HTML::Entities requires version &gt;= 1.32 to function correctly, even though the
changelog is silent about this.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T122316Z">
        <seg>Por ejemplo, HTML::Entities requiere la versión &gt;= 1.32 para funcionar correctamente, aunque esto no se indica en el registro de cambios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example,
although the POSIX module happens to do both dynamic loading and
autoloading, the user can say just C&lt;use POSIX&gt; to get it all.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T171736Z">
        <seg>Por ejemplo, aunque el módulo POSIX realiza tanto carga dinámica como carga automática, el usuario solo tiene que escribir C&lt;use POSIX&gt; para obtenerlo todo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example,
instead of returning its last mod time as a number, the C&lt;File&gt; class
could return a L&lt;DateTime&gt; object representing that value.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184442Z">
        <seg>Por ejemplo, en lugar de devolver la hora de última modificación como un número, la clase C&lt;Archivo&gt; podría devolver un objeto de clase L&lt;DateTime&gt; que representa este valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, C&lt;-oLaTeX&gt; currently tries all of the following classes:
Pod::Perldoc::ToLaTeX Pod::Perldoc::Tolatex Pod::Perldoc::ToLatex
Pod::Perldoc::ToLATEX Pod::Simple::LaTeX Pod::Simple::latex
Pod::Simple::Latex Pod::Simple::LATEX Pod::LaTeX Pod::latex Pod::Latex
Pod::LATEX.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T200638Z">
        <seg>Por ejemplo, C&lt;-oLaTeX&gt; prueba todas las clases siguientes:
Pod::Perldoc::ToLaTeX Pod::Perldoc::Tolatex Pod::Perldoc::ToLatex Pod::Perldoc::ToLATEX Pod::Simple::LaTeX Pod::Simple::latex Pod::Simple::Latex Pod::Simple::LATEX Pod::LaTeX Pod::latex Pod::Latex Pod::LATEX.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, E-mail and HTTP support MIME headers, so you can use the
C&lt;Content-Type&gt; header.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110403T233843Z">
        <seg>Por ejemplo, el correo electrónico y HTTP son compatibles con los encabezados MIME, por lo que puede usar el encabezado C&lt;Content-Type&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a C&lt;Moose&gt; class can subclass a C&lt;Moo&gt; class using
C&lt;extends&gt; or consume a C&lt;Moo&gt; role using C&lt;with&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T124419Z" creationid="explorer" creationdate="20150905T124419Z">
        <seg>Por ejemplo, una clase de C&lt;Moose&gt; puede crear una subclase a partir de una clase de C&lt;Moo&gt; mediante
C&lt;extends&gt; o consumir un rol de C&lt;Moo&gt; mediante C&lt;with&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a module
C&lt;Foo::Bar&gt; should use keys such as C&lt;Foo::Bar/baz&gt; and C&lt;Foo::Bar/$%/_!&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T142830Z">
        <seg>Por ejemplo, un módulo llamado C&lt;Foo::Bar&gt; debe usar claves como C&lt;Foo::Bar/baz&gt; o C&lt;Foo::Bar/$%/_!&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, an object
might represent a file.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195328Z">
        <seg>Por ejemplo, un objeto podría representar un archivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, consider the following scenario.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110819T095524Z">
        <seg>Por ejemplo, considere el siguiente escenario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, every C&lt;File&gt; object
has a path.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T183136Z">
        <seg>Por ejemplo, cada objeto de la clase C&lt;Archivo&gt; tiene su propia ruta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if the
object is an anonymous hash, we can store the attribute values in the
hash using the attribute name as the key.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T204626Z">
        <seg>Por ejemplo, si el objeto es un hash anónimo, podemos almacenar los valores de los atributos en el hash usando los nombres de los mismos como claves.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if we have an C&lt;File::MP3&gt; object, it has
the C&lt;print_info()&gt; method from C&lt;File&gt;:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184827Z">
        <seg>Por ejemplo, si tenemos un objeto de la clase C&lt;Archivo::MP3&gt;, hereda
el método C&lt;imprimir_info()&gt; de la clase C&lt;Archivo&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if you
wanted to report a bug in L&lt;Business::ISBN&gt;, you could send a message to
bug-Business-ISBN@rt.cpan.org .</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160430T234511Z" creationid="explorer" creationdate="20150514T162135Z">
        <seg>(por ejemplo, si desea notificar un error de
L&lt;Business::ISBN&gt;, debe enviar un mensaje a
bug-Business-ISBN@rt.cpan.org).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, it allows you to pass a
method name to be called as a parameter to another method.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211444Z">
        <seg>Por ejemplo, permite pasar el nombre de un método que se va a llamar como parámetro a otro método.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, our
F&lt;/etc/hostname&gt; object belongs to the C&lt;File&gt; class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195607Z">
        <seg>Por ejemplo, nuestro objeto F&lt;/etc/hostname&gt; pertenece a la clase C&lt;Archivo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, say you need to create a class implementing overloaded
mathematical operators, and would like to provide your own pragma that
functions much like C&lt;use integer;&gt; You'd like this code</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111030T001418Z">
        <seg>Supongamos que vamos a crear una clase que implementa operadores matemáticos sobrecargados y queremos proporcionar nuestro propio pragma, que funcione de manera parecida a C&lt;use integer;&gt;. Lo llamaremos C&lt;entero&gt;. Queremos que el código siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the construct C&lt;&lt; Class-&gt;new() &gt;&gt; can be
interpreted as either C&lt;&lt; 'Class'-&gt;new() &gt;&gt; or C&lt;&lt; Class()-&gt;new() &gt;&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T212050Z">
        <seg>Por ejemplo, la construcción C&lt;&lt; Clase-&gt;new() &gt;&gt; puede interpretarse como C&lt;&lt; 'Clase'-&gt;new() &gt;&gt; o como C&lt;&lt; Clase()-&gt;new() &gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, this is
applicable to C&lt;printf "%s", $value&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T191656Z">
        <seg>Por ejemplo, esto es aplicable a C&lt;printf "%s", $valor&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, to start a traditional, non-OO module called Some::Module,
create a file called F&lt;Some/Module.pm&gt; and start with this template:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T115556Z">
        <seg>Por ejemplo, para empezar a desarrollar un módulo tradicional, no orientado a objetos, llamado Mi::Modulo, cree el archivo F&lt;Mi/Modulo.pm&gt; y use esta plantilla:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, utf8 can be used for code points that don't exist in Unicode, like
9999999, but if you encode that to UTF-8, you get a substitution character (by
default; see L&lt;Encode/"Handling Malformed Data"&gt; for more ways of dealing with
this.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T092348Z">
        <seg>Por ejemplo, se puede usar utf8 para códigos de carácter que no existen en Unicode, como 9999999, pero si los codifica en UTF-8, obtendrá caracteres sustitutos de manera predeterminada (vea la sección "Handling Malformed Data" de L&lt;Encode&gt; para obtener información sobre otras maneras de abordar este problema).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, we could create an C&lt;File::MP3&gt; class which B&lt;inherits&gt;
from C&lt;File&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184634Z">
        <seg>Por ejemplo, podríamos crear una clase C&lt;Archivo::MP3&gt; que B&lt;herede&gt;
de C&lt;Archivo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, we could have C&lt;File&gt; and
C&lt;WebPage&gt; classes which both have a C&lt;print_content()&gt; method.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T173223Z">
        <seg>Por ejemplo, podríamos tener las clases C&lt;Archivo&gt; y C&lt;PaginaWeb&gt;, ambas con un método C&lt;imprimir_contenido()&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, we have F&lt;lib/strict.pm&gt; and
F&lt;lib/strict.t&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204440Z">
        <seg>Por ejemplo, tenemos F&lt;lib/strict.pm&gt; y F&lt;lib/strict.t&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, we might define
C&lt;File::MP3::FixedBitrate&gt; and C&lt;File::MP3::VariableBitrate&gt; classes to
distinguish between different types of mp3 file.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T085405Z">
        <seg>Por ejemplo, podríamos definir las clases C&lt;Archivo::MP3::VelBitsFija&gt; y C&lt;Archivo::MP3::VelBitsVariable&gt; para distinguir entre diferentes tipos de archivos mp3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T001507Z">
        <seg>Por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example:
C&lt;-oman&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T181818Z">
        <seg>Por ejemplo: C&lt;-oman&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example: C&lt;perldoc -MPod::Perldoc::ToChecker&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T074217Z">
        <seg>Por ejemplo: C&lt;perldoc -MPod::Perldoc::ToChecker&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example: if in the parent there are two references to a single blessed
hash, then in the child there will be two references to a single undefined
scalar value instead.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T172816Z">
        <seg>Por ejemplo; si en el hilo primario hay dos referencias a un hash bendecido, en el hilo derivado habrá dos referencias a un valor escalar no definido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For examples of MRO implementations, see C&lt;S_mro_get_linear_isa_c3()&gt;
and the C&lt;BOOT:&gt; section of F&lt;mro/mro.xs&gt;, and C&lt;S_mro_get_linear_isa_dfs()&gt;
in F&lt;mro.c&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T221430Z">
        <seg>Si desea ver ejemplos de implementaciones de orden de resolución de métodos, consulte C&lt;S_mro_get_linear_isa_c3()&gt; y la sección C&lt;BOOT:&gt; de F&lt;mro/mro.xs&gt;, y vea también C&lt;S_mro_get_linear_isa_dfs()&gt; en F&lt;mro.c&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For information on OO programming with Perl, please see L&lt;perlootut&gt;
and L&lt;perlobj&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T134056Z">
        <seg>Para obtener más información sobre la programación orientada a objetos en Perl, vea L&lt;perlootut&gt; y L&lt;perlobj&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance,
saying C&lt;use Net::Acme qw(&amp;frob)&gt; would import the C&lt;frob&gt; subroutine.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T182851Z">
        <seg>Por ejemplo, C&lt;use Net::Acme qw(&amp;frob)&gt; importará la subrutina C&lt;frob&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, if you say this:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T153024Z">
        <seg>Por ejemplo, si escribe:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, in the example above, the final
C&lt;print $y&gt; would cause a compile-time error and prevent you from
running the program.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T152834Z">
        <seg>Así, en el ejemplo anterior, la última instrucción C&lt;print $y&gt; provocará un error en tiempo de compilación que impedirá la ejecución del programa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, there is nowhere
within package C&lt;OUTER&gt; that C&lt;$INNER::var&gt; refers to
C&lt;$OUTER::INNER::var&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T175038Z">
        <seg>Por ejemplo, no hay ningún lugar dentro del paquete C&lt;EXTERIOR&gt; en el que la variable &lt;$INTERIOR::var&gt; pueda hacer referencia a C&lt;$EXTERIOR::INTERIOR::var&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, where I
say C&lt;perl Makefile.PL&gt;, you can substitute C&lt;perl Makefile.PL
PREFIX=/my/perl_directory&gt; to install the modules into
F&lt;/my/perl_directory&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T122116Z" creationid="explorer" creationdate="20150513T122116Z">
        <seg>Por ejemplo, en lugar de
C&lt;perl Makefile.PL&gt; puede ejecutar C&lt;perl Makefile.PL
PREFIX=/mi/directorio_perl&gt; para instalar los módulos en
F&lt;/mi/directorio_perl&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, while
utilities have "USAGE" sections, Perl modules usually have "SYNOPSIS"
sections: C&lt;podselect -s "SYNOPSIS" ...&gt; will extract this section for
a given file.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T150553Z">
        <seg>Por ejemplo, a diferencia de las utilidades que tienen secciones "USAGE", los módulos Perl generalmente tienen secciones "SYNOPSIS" (SINOPSIS): C&lt;podselect -s "SYNOPSIS" ...&gt; extrae la sección correspondiente de un archivo especificado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For many people, Perl serves as a great replacement for shell scripting.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110227T195031Z">
        <seg>Para muchas personas, Perl es un buen sustituto de los scripts de shell.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more
information about either conference, check out their respective web pages:
OSCON L&lt;http://conferences.oreillynet.com/&gt;; YAPC L&lt;http://www.yapc.org&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T162202Z">
        <seg>Para obtener más información sobre estas conferencias, visite sus páginas web:
OSCON L&lt;http://conferences.oreillynet.com/&gt;; YAPC L&lt;http://www.yapc.org&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more detail on looping constructs (and some that weren't mentioned in
this overview) see L&lt;perlsyn&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T002802Z">
        <seg>Para obtener más información sobre las estructuras de bucle (y otras estructuras que no se han mencionado en esta introducción ), consulte L&lt;perlsyn&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information on these options, you can run C&lt;perldoc perlrun&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T110915Z" creationid="explorer" creationdate="20150513T110915Z">
        <seg>Para obtener más información sobre estas opciones, puede ejecutar C&lt;perldoc perlrun&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information on writing subroutines, see L&lt;perlsub&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T232833Z">
        <seg>Para obtener más información sobre cómo escribir subrutinas, consulte L&lt;perlsub&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, including instructions for other platforms such as
Windows and Mac OS, read L&lt;perlrun&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T170709Z">
        <seg>Para obtener más información e instrucciones para otras plataformas, como Windows y Mac OS, lea L&lt;perlrun&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more on this, see L&lt;perlootut&gt; and L&lt;perlobj&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T164337Z">
        <seg>Encontrará más información en L&lt;perlootut&gt; y L&lt;perlobj&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For most features that it does implement, the end-user API is
I&lt;identical&gt; to C&lt;Moose&gt;, meaning you can switch from C&lt;Moo&gt; to
C&lt;Moose&gt; quite easily.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T133457Z" creationid="explorer" creationdate="20150905T122802Z">
        <seg>Para la mayoría de las características que implementa, la API para usuarios finales es
I&lt;identica&gt; a la de C&lt;Moose&gt;. Esto hace que la transición de C&lt;Moo&gt; a
C&lt;Moose&gt; sea muy sencilla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For new code,
we recommend that you use the L&lt;parent&gt; pragma to declare your parents.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T212014Z">
        <seg>Pero en el código nuevo recomendamos usar el pragma L&lt;parent&gt; para declarar las clases primarias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For object oriented
code, C&lt;WWW::Mechanize&gt; or the C&lt;Email::*&gt; modules provide some good
examples.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T190114Z">
        <seg>C&lt;WWW::Mechanize&gt; y los módulos C&lt;Email::*&gt; son buenos ejemplos de código orientado a objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For others, it serves as a convenient, high-level replacement for most of
what they'd program in low-level languages like C or C++.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T184153Z">
        <seg>Para otros, es un cómodo sustituto de alto nivel para realizar la mayor parte de los programas que desarrollarían en lenguajes de bajo nivel como C o C++.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For our File::MP3 class, we can check to make sure that the path we're
given ends with ".mp3":</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T184638Z">
        <seg>Para la clase Archivo::MP3 podemos comprobar que la ruta termina en ".mp3":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For portability, when using features that may not be implemented on
every machine, test the construct in an eval to see if it fails.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T112449Z">
        <seg>Para garantizar la portabilidad, si utiliza características que podrían no estar implementadas en todos los equipos, debe usar C&lt;eval&gt; para comprobar si el código genera algún error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For simple names like 'foo', when the normal search fails to find
a matching page, a search with the "perl" prefix is tried as well.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T184908Z">
        <seg>En el caso de nombres sencillos, como 'foo', si la búsqueda normal no encuentra una página coincidente, se realiza también una búsqueda con el prefijo "perl".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For small systems, L&lt;Class::Tiny&gt; and L&lt;Class::Accessor&gt; both provide
minimal object systems that take care of basic boilerplate for you.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T132745Z" creationid="explorer" creationdate="20150905T132745Z">
        <seg>Para sistemas pequeños, L&lt;Class::Tiny&gt; y L&lt;Class::Accessor&gt; ofrecen
sistemas de objetos minimalistas que se encargan de las tareas repetitivas y simplifican el trabajo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For some dual-life modules, it has not yet been determined if the CPAN
version or the blead source is canonical.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204514Z">
        <seg>Para algunos módulos de evolución dual aún no se ha determinado si la versión canónica es la de CPAN o la del código fuente de la rama I&lt;blead&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For starters, it has its
own IRC network, L&lt;irc://irc.perl.org&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T175457Z">
        <seg>Para los que empiezan, tiene su propia red de IRC, L&lt;irc://irc.perl.org&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this to be valid, the formatter class
must provide such a method, and the value you pass should be valid.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T200851Z">
        <seg>Para que esto funcione, la clase de formateador debe proporcionar este método y el valor pasado debe ser válido</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Forcing a numeric value to a particular format does not
change the number stored in the value.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T195159Z">
        <seg>Forzar la conversión de un valor numérico a un formato específico no cambia el número almacenado en el valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fortunately, Perl handles this for
us, so we don't have to worry about this.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T201207Z">
        <seg>Afortunadamente, Perl se encarga de esto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fortunately, Perl's flexibility has allowed a rich
ecosystem of Perl OO systems to flourish.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120627T095800Z">
        <seg>Afortunadamente, la flexibilidad de Perl ha permitido que florezca un variado ecosistema de sistemas orientados a objetos en el lenguaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FreeBSD 7 and earlier has a bug where
either approach sometimes returns an incorrect value
(see http://www.freebsd.org/cgi/query-pr.cgi?pr=35703 ).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T203134Z">
        <seg>En FreeBSD 7 y versiones anteriores había un error que hacía que, a veces, cualquiera de las dos formas mencionadas de obtener la ruta devolviera un valor incorrecto (vea http://www.freebsd.org/cgi/query-pr.cgi?pr=35703 ).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From the menus there,
you can upload your module to CPAN.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T184307Z">
        <seg>Puede usar los menús de PAUSE para subir el módulo a CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From this we can determine that Perl is different
things to different people, but that lots of people think it's at least
worth writing about.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T115003Z">
        <seg>Esto refleja el hecho de que, aunque Perl tiene muchos públicos distintos, muchas personas piensan que merece la pena escribir sobre este lenguaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From websites, to IRC, to mailing lists, there is more than one
way to get involved in the community.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120407T135717Z">
        <seg>Existen varias maneras de involucrarse en la comunidad: sitios web, IRC, listas de correo, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Function and method names seem to work best as all lowercase.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111013T143916Z">
        <seg>Para los nombres de funciones y métodos es mejor usar minúsculas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>General (not help-oriented) chat can be
found at L&lt;irc://irc.perl.org/#perl&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120406T150304Z">
        <seg>Un sitio de charla informal (no precisamente orientado a ayudar) se encuentra en L&lt;irc://irc.perl.org/#perl&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generally, you can use B&lt;roles&gt; to do everything you can do
with multiple inheritance, but in a cleaner way.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T085305Z">
        <seg>En general, pueden usarse B&lt;roles&gt; para conseguir todo lo ofrecido por la herencia múltiple, pero de forma mucho más limpia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Get the EMX development suite and gzip/tar, from either Hobbes (
http://hobbes.nmsu.edu ) or Leo ( http://www.leo.org ), and then follow
the instructions for Unix.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T002910Z">
        <seg>Obtenga el paquete de desarrollo EMX y gzip/tar en Hobbes ( http://hobbes.nmsu.edu ) o Leo ( http://www.leo.org ), y siga las instrucciones para Unix.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Go into the newly-created directory and type:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000207Z">
        <seg>Entre en el directorio que acaba de crear y escriba:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Good error messages should
go to C&lt;STDERR&gt;, include which program caused the problem, what the failed
system call and arguments were, and (VERY IMPORTANT) should contain the
standard system error message for what went wrong.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T103841Z">
        <seg>Para que un mensaje de error se considere correcto, debe salir por C&lt;STDERR&gt;, especificar el programa que causó el problema y la función del sistema (y sus argumentos) que provocó el error, y (MUY IMPORTANTE) contener el mensaje de error estándar del sistema que indique qué salió mal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Grandparent</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T163023Z">
        <seg>Abuelo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hackathons are a very different kind of gathering where Perl hackers gather to
do just that, hack nonstop for an extended (several day) period on a specific
project or projects.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T183659Z">
        <seg>Un I&lt;hackathon&gt; es un tipo de encuentro muy diferente, donde los I&lt;hackers&gt; de Perl se reúnen para hacer lo que el nombre sugiere: I&lt;hackear&gt; (trabajar) sin parar durante un período prolongado (que puede ser de varios días) en un determinado proyecto (o proyectos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hashes have no particular internal order, though you can sort the keys
and loop through them.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T001940Z">
        <seg>En los hashes no hay un orden interno específico, aunque puede ordenar las claves antes de recorrerlas en un bucle.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have a good plough
through the L&lt;http://search.cpan.org&gt; and make sure you're not the one
reinventing the wheel!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T150543Z">
        <seg>Investigue a fondo en L&lt;http://search.cpan.org&gt; y asegúrese de que no va a reinventar la rueda.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Having PERLDOCDEBUG set to a positive integer will make perldoc emit
even more descriptive output than the C&lt;-D&gt; switch does; the higher the
number, the more it emits.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T214746Z" creationid="explorer" creationdate="20160506T214746Z">
        <seg>Si se establece como valor de PERLDOCDEBUG un entero positivo, perldoc emitirá una salida aún más descriptiva que la que proporciona el modificador C&lt;-D&gt;; cuanto mayor sea el número, más información emitirá.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>He
previously used the phrase with many subjects ("Just another x hacker,"),
so to distinguish his JAPH, he started to write them as Perl programs:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T183619Z">
        <seg>Previamente había utilizado esta frase con muchos sujetos distintos ("Just another x hacker,"), así que para distinguir su JAPH decidió empezar a escribir la firma como un programa Perl:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hence the C&lt;import&gt; and C&lt;unimport&gt; routines are called at B&lt;compile time&gt;
for the user's code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110819T101836Z">
        <seg>Así, las rutinas C&lt;import&gt; y C&lt;unimport&gt; se llaman en B&lt;tiempo de compilación&gt;
para el código del usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hence, if you have created a
temporary value that you keep no pointer to, C&lt;sv_2mortal()&gt; to ensure that
it is disposed of correctly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T215248Z">
        <seg>Por lo tanto, si ha creado un valor temporal al que no apunta ningún puntero, use C&lt;sv_2mortal()&gt; para asegurarse de que se elimina de la manera correcta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hence, such a module may
take full advantage of syntactical and other improvements in Perl 5
blead.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160429T224025Z" creationid="explorer" creationdate="20150513T121338Z">
        <seg>Por esta razón, estos módulos pueden
beneficiarse de las mejoras sintácticas y de otro tipo incluidas en la rama
C&lt;blead&gt; de Perl 5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here
are commonly expected conventions:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111014T125112Z">
        <seg>Las convenciones habituales son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are some other more substantive style issues to think about:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T095727Z">
        <seg>A continuación se muestran otras cuestiones de estilo más importantes que conviene tener en mente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are the statistics for Perl 5.005_62 on my system:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T134753Z">
        <seg>Estas son las estadísticas correspondientes a Perl 5.005_62 en mi sistema:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a DBM Filter that does it:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111003T121628Z">
        <seg>El siguiente filtro DBM hace esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a simple constructor:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T125436Z">
        <seg>Veamos un ejemplo de constructor sencillo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a simple example of the technique, using the
L&lt;Hash::Util::FieldHash&gt; core module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T214822Z">
        <seg>Veamos un ejemplo simple de esta técnica, basado en el módulo L&lt;Hash::Util::FieldHash&gt; del núcleo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is another real-life example.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T145232Z">
        <seg>Otro ejemplo del mundo real:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is our C&lt;File&gt; class using C&lt;Moose&gt;:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T174919Z">
        <seg>El código de nuestra clase C&lt;Archivo&gt; con C&lt;Moose&gt; sería:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's a brief recap of the options we covered:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T165924Z">
        <seg>A continuación se ofrece un breve resumen de las opciones consideradas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's a simple but
sufficient example:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111014T124848Z">
        <seg>Un ejemplo sencillo pero suficiente sería:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an example of a module as a blessed scalar:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T231118Z">
        <seg>Veamos un ejemplo de módulo basado en un escalar bendecido:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's how to perform each step for each operating system.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T230408Z">
        <seg>Veamos cómo se realizan estos pasos en los distintos sistemas operativos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's how you get at elements in an array:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234031Z">
        <seg>Para obtener los elementos de un array:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's our "class declaration" for the C&lt;File&gt; class:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T124122Z">
        <seg>A continuación se muestra la "declaración de la clase" C&lt;Archivo&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's our C&lt;File&gt; class once more:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104816Z">
        <seg>Nuestra clase C&lt;Archivo&gt; sería:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's our C&lt;File&gt; class with C&lt;Class::Accessor&gt;:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104428Z">
        <seg>La clase C&lt;Archivo&gt; con C&lt;Class::Accessor&gt; sería:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's some of the thing you'll find in
it:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204719Z">
        <seg>Contiene cosas como:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's something Larry suggested: if a C&lt;U&gt; is the first active format
during a C&lt;pack&gt;, (for example, C&lt;pack "U3C8", @stuff&gt;) then the
resulting string should be treated as UTF-8 encoded.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T160227Z">
        <seg>Para ello, nos ocuparemos de implementar algo que propuso Larry: si el primer formato activo en una instrucción C&lt;pack&gt; es C&lt;U&gt; (por ejemplo, C&lt;pack "U3C8", @algo&gt;), entonces la cadena resultante debería tratarse como codificada en UTF-8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's what happens: when Perl reads in a string literal, it sticks to 8 bit
encoding as long as it can.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T085859Z">
        <seg>Lo que sucede es esto: cuando Perl lee un literal de cadena, mantendrá una codificación de 8 bits mientras pueda</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, you don't have
characters, just bytes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T222742Z">
        <seg>Contienen bytes, no caracteres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>His UTF-8 rants during the
Amsterdam Perl Mongers meetings got me interested and determined to find out
how to use character encodings in Perl in ways that don't break easily.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110403T234157Z">
        <seg>Sus diatribas contra UTF-8 en las reuniones de los Amsterdam Perl Mongers hicieron que me interesara por el tema y me propusiera aprender a utilizar de una manera segura las codificaciones de caracteres en Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>His presentation "UTF-8 in the wild" (Dutch
Perl Workshop 2006) inspired me to publish my thoughts and write this tutorial.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110403T234054Z">
        <seg>Su presentación "UTF-8 in the wild" (Dutch Perl Workshop 2006) me sirvió de inspiración para publicar mis ideas y escribir este tutorial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hopefully the contents of each of the filters should be
self-explanatory.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111003T121458Z">
        <seg>El contenido de cada filtro debe ser autodescriptivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How can I build my own Perl interpreter?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T090333Z">
        <seg>¿Cómo puedo compilar mi propio intérprete de Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do I make it work?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110427T235747Z">
        <seg>¿Cómo puedo hacer que funcione?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do we know if the C&lt;U&gt; is the first format in the C&lt;pat&gt;?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T000639Z">
        <seg>¿Cómo sabemos si la C&lt;U&gt; es el primer formato en C&lt;pat&gt;?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do we prepare to fix this up?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T152815Z">
        <seg>¿Cómo nos preparamos para corregir esto?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However the parent classes are set, the package's C&lt;@ISA&gt; variable will
contain a list of those parents.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T212037Z">
        <seg>Independientemente de cómo se establezcan las clases primarias, la variable C&lt;@ISA&gt; del paquete contendrá la lista de dichas clases primarias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, "native" floats have a most fundamental
restriction: they may represent only those numbers which have a relatively
"short" representation when converted to a binary fraction.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T173354Z">
        <seg>En cambio, existe una restricción intrínseca para los números de punto flotante "nativos": solo se pueden representar los números que tengan una representación relativamente "corta" al convertirse en una fracción binaria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, C&lt;print()&gt; can also take an optional first argument specifying
which filehandle to print to:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T225633Z">
        <seg>Sin embargo, C&lt;print()&gt; también puede consumir un primer argumento opcional que especifique el identificador de archivo en el que se debe imprimir:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, OO Perl is largely beyond the scope of this document.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T183815Z">
        <seg>Sin embargo, este tema queda fuera del ámbito de este documento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, if
you use one of our other recommended OO modules, you can still use
roles with L&lt;Role::Tiny&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T165901Z">
        <seg>Si usa alguno de los otros módulos de orientación a objetos recomendados, también podrá usar roles con L&lt;Role::Tiny&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, if that class or any of its parent classes defines an
C&lt;AUTOLOAD&gt; method, that C&lt;AUTOLOAD&gt; method is called instead.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T225432Z">
        <seg>Sin embargo, si la clase (o cualquiera de sus clases primarias) define un método C&lt;AUTOLOAD&gt;, entonces se llamará a ese método.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, if your destructor is running inside an C&lt;eval {}&gt; block,
then the error will change the value of C&lt;$@&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T182159Z">
        <seg>Sin embargo, si el destructor se ejecuta dentro de un bloque C&lt;eval {}&gt;, el error cambiará el valor de C&lt;$@&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, in short:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T225811Z">
        <seg>Se incluye a continuación un resumen:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, it's possible to bless any type of data structure or referent,
including scalars, globs, and subroutines.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T200218Z">
        <seg>Sin embargo, es posible bendecir cualquier tipo de estructura de datos o referente, incluidos escalares, globs y subrutinas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, keep
C&lt;warn&gt; and C&lt;die&gt; in place for your sanity checks - where it really is
your module at fault.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T190645Z">
        <seg>Sin embargo, mantenga las instrucciones C&lt;warn&gt; y C&lt;die&gt; necesarias para realizar comprobaciones (para los casos en que la culpa la tenga realmente su módulo).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, most OO modules on CPAN use a method named C&lt;new()&gt; to
construct a new object:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120627T221359Z">
        <seg>Sin embargo, la mayoría de los módulos orientados a objetos disponibles en CPAN usan el método C&lt;new()&gt; para construir un objeto nuevo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, on earlier Perls, or if you pass strings to subroutines outside
the feature's scope, you can force Unicode rules by changing the
encoding to UTF-8 by doing C&lt;utf8::upgrade($string)&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T115301Z" creationid="explorer" creationdate="20150513T115301Z">
        <seg>Sin embargo, en versiones anteriores de Perl, o si pasa cadenas a subrutinas fuera
del ámbito del pragma C&lt;feature&gt;, puede forzar el uso de reglas Unicode cambiando
la codificación a UTF-8 mediante C&lt;utf8::upgrade($string)&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, only double quotes "interpolate" variables and special
characters such as newlines (C&lt;\n&gt;):</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T001318Z">
        <seg>Sin embargo las variables y los caracteres especiales, como los caracteres de nueva línea (C&lt;\n&gt;), solo se "interpolan" con comillas dobles:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, since I am running a very recent Hurd snapshot, in which a lot of
bugs that were exposed by the Perl test suite have been fixed, you may
encounter more failures.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T203727Z">
        <seg>Sin embargo, como estoy ejecutando una instantánea muy reciente de Hurd, en la que se han corregido muchos de los errores expuestos por el conjunto de pruebas de Perl, es posible que otros usuarios encuentren más errores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, the
C&lt;$_[0]&gt; variable will be read-only in the destructor, so you cannot
assign a value to it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T230506Z">
        <seg>Pero la variable C&lt;$_[0]&gt; será de solo lectura en el destructor, por lo que no se le puede asignar un valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, the above usage will create global variables throughout your
program, which is bad programming practice.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T181617Z">
        <seg>Sin embargo, el uso anterior creará variables globales en todo el programa, algo que no se recomienda en programación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, the notes on preparing the Perl
side of the module and packaging and distributing it will apply equally
well to an XS module as a pure-Perl one.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T172415Z">
        <seg>Sin embargo, las notas sobre cómo preparar la parte Perl del módulo y la forma de empaquetarlo para su distribución se aplican tanto a un módulo XS como a un módulo Perl puro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, there is a clever way of making your one-line
conditional blocks more English like:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T182210Z">
        <seg>Sin embargo, puede escribir los bloques condicionales de una sola línea de manera que recuerden a una frase en inglés:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, variables and functions named with a single C&lt;_&gt;, such as
$_ and C&lt;sub _&gt;, are still forced into the package C&lt;main&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T175620Z">
        <seg>Sin embargo, aún se fuerza la asignación al paquete C&lt;main&gt; de los nombres de variables y funciones con un único guión bajo (C&lt;_&gt;), como $_ y C&lt;sub_&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, we encourage you to avoid using it in new code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T224133Z">
        <seg>Sin embargo, recomendamos que no la use en el código nuevo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you may see this as a way to
provide accessors in older Perl code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T232732Z">
        <seg>Sin embargo, puede encontrar esta forma de proporcionar métodos de acceso en código Perl antiguo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you should really not look at the flag, and
nothing indicates that Data::Dumper should break this rule.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T232220Z">
        <seg>Sin embargo, no se debe mirar la marca, y no hay ninguna razón para que Data::Dumper sea una excepción a esta norma.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I'd suggest
starting with L&lt;Text::Tabs|Text::Tabs&gt;, since it's in the standard
library and is nice and simple, and then looking at something a little
more complex like L&lt;File::Copy|File::Copy&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T220041Z">
        <seg>Es recomendable empezar con L&lt;Text::Tabs|Text::Tabs&gt; (un módulo interesante y sencillo disponible en la biblioteca estándar) y después pasar a algo un poco más complejo, como L&lt;File::Copy|File::Copy&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I32 datumtype;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231212Z">
        <seg>I32 datumtype;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I32 len;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T181206Z">
        <seg>I32 len;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I&lt;Higher-Order Perl&gt;: http://hop.perl.plover.com/</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T124958Z">
        <seg>I&lt;Higher-Order Perl&gt;: http://hop.perl.plover.com/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I&lt;Native&gt; here means "a format supported by the C compiler which was used
to build perl".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T192319Z">
        <seg>Aquí I&lt;nativo&gt; significa "formato admitido por el compilador de C que se usó para compilar perl".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I&lt;i.e.&gt;, where C&lt;use myint;&gt; is in effect, addition operations are forced
to integer, whereas by default they are not, with the default behaviour being
restored via C&lt;no myint;&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111030T001657Z">
        <seg>Es decir, cuando C&lt;use entero;&gt; esté activo debe modificarse el comportamiento predeterminado de las operaciones de suma forzando la conversión del resultado a un valor entero. Para restablecer el comportamiento predeterminado se usa C&lt;no entero;&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>INIT blocks run FIFO just before runtime.\n" }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T163713Z">
        <seg>Los bloques INIT se ejecutan en orden FIFO antes del tiempo de ejecución.\n" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>INIT { print  " 7.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231453Z">
        <seg>INIT { print  " 7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>INIT { print  " 8.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011516Z">
        <seg>INIT { print  " 8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>INIT { print  " 9.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010935Z">
        <seg>INIT { print  " 9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>INSTALL</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T005839Z">
        <seg>INSTALAR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ideally, a subclass uses the same APIs to access object data
that its parent class uses.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T163805Z">
        <seg>Idealmente, una subclase usa las mismas API para acceder a los datos del objeto que las usadas por la clase primaria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If
you get to choose, it's a good idea to standardize on UTF-8.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T201539Z">
        <seg>Si puede elegir, es recomendable utilizar UTF-8 de manera estándar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If
you know what version or patchlevel a particular feature was
implemented, you can test C&lt;$]&gt; (C&lt;$PERL_VERSION&gt; in C&lt;English&gt;) to see if it
will be there.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T232927Z">
        <seg>Si sabe en qué versión o nivel de parche se implementó determinada característica, puede comprobar C&lt;$]&gt; (C&lt;$PERL_VERSION&gt; en C&lt;English&gt;) para ver si está incluida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If
you want your program to be readable, consider supplying the argument.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T100232Z">
        <seg>Si desea que su programa sea legible, debería proporcionar explícitamente los argumentos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If
you'd like to join them, you can sign up for free.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T092205Z" creationid="explorer" creationdate="20160505T092205Z">
        <seg>Puede apuntarse gratuitamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If
you're lucky, they'll even send you patches.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T232100Z">
        <seg>Con suerte, hasta le enviarán parches.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If C&lt;$thing&gt; doesn't
contain a reference to a blessed object, the C&lt;blessed&gt; function
returns C&lt;undef&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161101Z">
        <seg>Si C&lt;$algo&gt; no contiene una referencia a un objeto bendecido, la función C&lt;blessed&gt; devuelve C&lt;undef&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If C&lt;$thing&gt; refers to an object, then this function returns the name
of the package the object has been blessed into.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161051Z">
        <seg>Si C&lt;$algo&gt; hace referencia a un objeto, esta función devuelve el nombre del paquete en el que se bendijo el objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If C&lt;File::MP3&gt; does not define the method, but C&lt;File&gt; does,
then Perl calls the method in C&lt;File&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185111Z">
        <seg>Si la clase C&lt;Archivo::MP3&gt; no define el método, pero sí lo hace la clase C&lt;Archivo&gt;, entonces Perl llamará al método de la clase C&lt;Archivo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If C&lt;File&gt; inherited from C&lt;DataSource&gt;, which inherited from C&lt;Thing&gt;,
then Perl would keep looking "up the chain" if necessary.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T211801Z">
        <seg>Si C&lt;Archivo&gt; hereda de C&lt;OrigenDatos&gt;, que hereda a su vez de C&lt;Cosa&gt;,
entonces Perl deberá subir siguiendo la cadena, si es necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If Perl cannot find a C&lt;save()&gt; method anywhere in
the inheritance hierarchy, it will die.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T161856Z">
        <seg>Si Perl no encuentra un método C&lt;guardar()&gt; en ninguna clase de la jerarquía de herencia, el programa finalizará.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If Perl cannot find the method in any of these classes, it will die
with an error message.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T163106Z">
        <seg>Si Perl no puede localizar el método en ninguna de estas clases, el programa finalizará mostrando un mensaje de error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If Perl is new (and thus scary) to them,
find something that Perl can do to solve one of their problems.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T172008Z">
        <seg>Si nunca han utilizado Perl y se sienten inseguros, busque alguna tarea en la que Perl les pueda ayudar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a filter has been installed with this method, it will be invoked
every time you read a key from a DBM database.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T144614Z">
        <seg>Si se ha instalado un filtro con este método, se invocará cada vez que se lea una clave de una base de datos DBM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a filter has been installed with this method, it will be invoked
every time you read a value from a DBM database.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T144715Z">
        <seg>Si se ha instalado un filtro con este método, se invocará cada vez que se lea un valor de una base de datos DBM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a filter has been installed with this method, it will be invoked
every time you write a key to a DBM database.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T144652Z">
        <seg>Si se ha instalado un filtro con este método, se invocará cada vez que se escriba una clave en una base de datos DBM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a filter has been installed with this method, it will be invoked
every time you write a value to a DBM database.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T144634Z">
        <seg>Si se ha instalado un filtro con este método, se invocará cada vez que se escriba un valor en una base de datos DBM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If all data that comes from a certain handle is encoded in exactly the same
way, you can tell the PerlIO system to automatically decode everything, with
the C&lt;encoding&gt; layer.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T231755Z">
        <seg>Si todos los datos de un determinado identificador de archivo se codifican exactamente de la misma manera, puede ordenar al sistema de entrada/salida de Perl que descodifique todo automáticamente mediante la capa C&lt;encoding&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If an object is a noun, then methods are its verbs (save, print,
open).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T211620Z">
        <seg>Si un objeto es un sustantivo, entonces los métodos son sus verbos (guardar, imprimir, abrir).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If any specific niche
has been forgotten, it is not meant as an insult but an omission for the sake
of brevity.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T174218Z">
        <seg>Si no incluimos algún sector específico, no debe entenderse como menosprecio, sino como una omisión en aras de la brevedad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If both conversions are possible
without loss of precision, and the operation can be performed without
loss of precision then the integer result is used.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T194822Z">
        <seg>Si ambas conversiones son posibles sin pérdida de precisión y se puede realizar la operación sin pérdida de precisión, se usa el resultado entero.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it cannot relinquish
its privileges, it will not run.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T185104Z">
        <seg>Si no puede renunciar a los privilegios, no se ejecutará.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it does not then C&lt;undef&gt; is returned.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T162149Z">
        <seg>Si no existe, devuelve C&lt;undef&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it does, life is now
officially tough for you, because you have to compile the module
yourself (no easy feat on Windows).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T010118Z">
        <seg>En ese caso la cosa se complica, ya que tendrá que encargarse de la compilación (algo que no es tarea fácil en Windows).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it fails to
find the method, it then goes to the next parent in the original
class's C&lt;@ISA&gt; array and searches from there.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T163431Z">
        <seg>Si no hay éxito en la búsqueda del método, se pasará a la siguiente clase primaria del array C&lt;@ISA&gt; de la clase original, y la búsqueda continuará desde ahí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it returns a true value, then no objects of that class will
be cloned; or rather, they will be copied as unblessed, undef values.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T085916Z">
        <seg>Si devuelve un valor verdadero, no se clonarán objetos de esa clase; o más bien, se copiarán como valores undef no bendecidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it wasn't latin-1, then your data is unpleasantly converted.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120424T094659Z">
        <seg>Si la codificación no es latin-1, el resultado de la conversión de los datos no será lo que se esperaba.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it's run from a terminal, F&lt;perldoc&gt; will usually call F&lt;pod2man&gt; to
translate POD (Plain Old Documentation - see L&lt;perlpod&gt; for an
explanation) into a manpage, and then run F&lt;man&gt; to display it; if
F&lt;man&gt; isn't available, F&lt;pod2text&gt; will be used instead and the output
piped through your favourite pager.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110716T155650Z">
        <seg>Cuando se ejecuta desde un terminal, normalmente F&lt;perldoc&gt; llama a F&lt;pod2man&gt; para convertir el formato POD (Plain Old Documentation; consulte L&lt;perlpod&gt; para ver una descripción) en una página de manual, y después ejecuta F&lt;man&gt; para mostrarla; si F&lt;man&gt; no está disponible, se usa F&lt;pod2text&gt; y el resultado se canaliza a través de su paginador favorito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If not, Perl looks
at each parent class in turn.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T085723Z">
        <seg>Si no, Perl busca en cada clase primaria por orden.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If so, these will be entirely transparent to the user of
the module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T171505Z">
        <seg>Si es así, esto será completamente transparente para el usuario del módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If so, you can install it with C&lt;ppm&gt; and
you won't have to bother with any of the other steps here.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000432Z">
        <seg>Si es así, puede instalarlo con C&lt;ppm&gt; y omitir los pasos siguientes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If that class defines the method,
then that class's version of the method is called.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T085712Z">
        <seg>Si la clase define el método, se llama a la versión del método en la misma.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the C&lt;$need&gt; argument is given then it will check that the current
version (as defined by the $VERSION variable in the package) is greater
than or equal to C&lt;$need&gt;; it will die if this is not the case.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T162412Z">
        <seg>Si se incluye el argumento C&lt;$necesaria&gt;, el método comprobará si la versión actual (tal y como se define en la variable $VERSION del paquete) es mayor o igual que C&lt;$necesaria&gt;; el programa finalizará si no se cumple esta condición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the C&lt;&lt; decimal string --&gt; native integer &gt;&gt; conversion cannot be done
without loss of information, the result is compatible with the conversion
sequence C&lt;&lt; decimal_string --&gt; native_floating_point --&gt; native_integer &gt;&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T194502Z">
        <seg>Si no se puede aplicar la conversión C&lt;&lt; cadena decimal --&gt; entero nativo &gt;&gt; sin pérdida de información, el resultado es compatible con la secuencia de conversiones C&lt;&lt; cadena decimal --&gt; punto flotante nativo --&gt; entero nativo &gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the C&lt;POD2::E&lt;lt&gt;language_codeE&lt;gt&gt;&gt; package isn't
installed in your system, the switch is ignored.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T184436Z">
        <seg>Si el paquete C&lt;POD2::E&lt;lt&gt;código_idiomaE&lt;gt&gt;&gt; no está instalado en el sistema, se ignorará el modificador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the left hand side is a package name, it looks for the
method in that package.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T212756Z">
        <seg>Si hay un nombre de un paquete, busca el método en dicho paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the left hand side is an object, then Perl
looks for the method in the package that the object has been blessed
into.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T212804Z">
        <seg>Si hay un objeto, entonces Perl busca el método en el paquete usado para bendecirlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the left hand side is neither a package name nor an object, then the
method call will cause an error, but see the section on L&lt;/Method Call
Variations&gt; for more nuances.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T000150Z">
        <seg>Si no hay ni un nombre de paquete ni un objeto, entonces la llamada al método producirá un error; consulte la sección L&lt;/Variantes en las llamadas a los métodos&gt; para obtener más información.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the method exists, then a reference to the
subroutine is returned.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T162153Z">
        <seg>Si el método existe, devuelve una referencia a la subrutina.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the module you want
isn't listed there, you can test it yourself and let CPAN Testers know,
you can join CPAN Testers, or you can request it be tested.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T004221Z">
        <seg>Si el módulo que desea no está en la lista, puede probarlo usted mismo y comunicar el resultado al grupo de CPAN Testers, puede unirse al grupo de CPAN Testers o puede solicitar que prueben ese módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the name is given in UTF-8, set this to C&lt;HVhek_UTF8&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T230658Z">
        <seg>Si se proporciona el nombre codificado en UTF-8, debe establecer C&lt;HVhek_UTF8&gt; como valor de kflags.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the package name is null, the
C&lt;main&gt; package is assumed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T111016Z">
        <seg>Si se omite el nombre del paquete, se supondrá que es C&lt;main&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the pattern begins with a C&lt;U&gt;, the resulting string will be treated</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T153939Z">
        <seg>Si el patrón comienza con una C&lt;U&gt;, la cadena resultante se tratará</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the source number can be represented in the target form, that
representation is used.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T193733Z">
        <seg>Si el número de origen se puede representar en la forma de destino, se usa esa representación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the source number is between two numbers representable in the target form,
a representation of one of these numbers is used.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T193843Z">
        <seg>Si el número de origen está entre dos números representables en la forma de destino, se usa una representación de uno de estos números.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the source number is outside of the limits representable in the target form,
a representation of the closest limit is used.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T193802Z">
        <seg>Si el número de origen está fuera de los límites representables en la forma de destino, se usa una representación del límite más cercano.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If there is a subroutine named C&lt;Class()&gt; in the current
namespace, Perl will always interpret C&lt;&lt; Class-&gt;new() &gt;&gt; as the second
alternative: a call to C&lt;new()&gt; on the object  returned by a call to
C&lt;Class()&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T212647Z">
        <seg>Si hay una subrutina llamada C&lt;Clase()&gt; en el espacio de nombres actual, Perl siempre interpretará C&lt;&lt; Clase-&gt;new() &gt;&gt; como la segunda alternativa: una llamada a C&lt;new()&gt; sobre el objeto devuelto por la llamada a C&lt;Clase()&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If there's something you
need to do, then it's probably already been done, and a working example is
usually available for free.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T181805Z">
        <seg>Cuando se enfrente a un problema, es probable que pueda obtener un ejemplo que funciona (generalmente gratis) de alguien que lo haya hecho ya.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If they are not then you might have decompressed them incorrectly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T001348Z">
        <seg>Si no fuera así, es posible que no los haya descomprimido correctamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If things aren't broken, upgrading perl may break them (or at least issue
new warnings).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T190850Z">
        <seg>Si todo funciona bien, la situación puede cambiar al actualizar perl (como mínimo pueden surgir nuevas advertencias).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this command lists any paths that don't exist on your system, then you
may need to move the appropriate libraries to these locations, or create
symbolic links, aliases, or shortcuts appropriately.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T072645Z">
        <seg>Si este comando muestra rutas de acceso que no existen en el sistema, es posible que tenga que mover las bibliotecas necesarias a estas ubicaciones o crear los vínculos simbólicos, alias o accesos directos correspondientes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If we call a method on a C&lt;Child&gt; object and that method is not defined
in the C&lt;Child&gt; class, Perl will look for that method in the C&lt;Parent&gt;
class and then, if necessary, in the C&lt;Grandparent&gt; class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T215529Z">
        <seg>Si se llama a un método en un objeto de la clase C&lt;Hijo&gt; y el método no está definido en la clase C&lt;Hijo&gt;, Perl buscará el método en la clase C&lt;Padre&gt; y después, si es necesario, en la clase C&lt;Abuelo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If we created an object
to represent F&lt;/etc/hostname&gt; on a machine named "foo.example.com",
that object's path would be "/etc/hostname", its content would be
"foo\n", and it's last modification time would be 1304974868 seconds
since the beginning of the epoch.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T190359Z">
        <seg>Si se crea un objeto para representar el archivo F&lt;/etc/hostname&gt; en un equipo llamado "foo.ejemplo.com", la ruta del objeto sería "/etc/hostname", su contenido
"foo\n" y la hora de la última modificación podría ser de 1304974868 segundos desde el principio del tiempo Unix.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If we try to set it to an
invalid value, our code will throw an error.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185412Z">
        <seg>Si se intenta asignar un valor no válido el código generará un error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If we wanted to include the mp3's title in the greeting, we could
override the method:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T173937Z">
        <seg>Si deseamos incluir el título del archivo mp3 en el saludo podemos sobrescribir el método:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you
have a package called C&lt;m&gt;, C&lt;s&gt;, or C&lt;y&gt;, then you can't use the
qualified form of an identifier because it would be instead interpreted
as a pattern match, a substitution, or a transliteration.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T111503Z">
        <seg>Si tiene un paquete llamado C&lt;m&gt;, C&lt;s&gt; o C&lt;y&gt;, no puede usar la forma calificada de un identificador, ya que podría interpretarse como una detección de patrones, una substitución o una transliteración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you
need text in a binary stream, encode your text strings first using the
appropriate encoding, then join them with binary strings.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120424T094814Z">
        <seg>Si necesita texto en una secuencia binaria, codifique las cadenas de texto con la codificación adecuada y después únalas con cadenas binarias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you
override this method, it should never throw an exception.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T003431Z">
        <seg>Si sobrescribe este método, no debe generar nunca una excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you actually want the key to be stored in the DBM database
as a C int, you will have to use C&lt;pack&gt; when writing, and C&lt;unpack&gt;
when reading.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T160157Z">
        <seg>Si desea almacenarla como un entero de C, debe usar C&lt;pack&gt; al escribir y C&lt;unpack&gt; al leer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you add new tests (or new
modules with tests), you may need to update the F&lt;t/TEST&gt; file so that
the tests are run.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204501Z">
        <seg>Si agrega pruebas nuevas (o módulos nuevos con pruebas), es posible que tenga que actualizar el archivo F&lt;t/TEST&gt; para que se ejecuten.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are interested in the guts underlying these systems, check out
L&lt;perlobj&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185301Z">
        <seg>Si está interesado en conocer los detalles de estos sistemas, consulte L&lt;perlobj&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are looking for a table of contents to the Perl library modules
documentation, see the L&lt;perltoc&gt; page.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110808T205427Z">
        <seg>En la página L&lt;perltoc&gt; encontrará una tabla de contenido de la documentación de los módulos de biblioteca de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are reading this in the future then it's possible that the state
of the art has changed.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T133213Z" creationid="explorer" creationdate="20150905T133128Z">
        <seg>Si está leyendo este documento en el futuro, es probable que las técnicas
utilizadas sea más avanzadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are using cpan-mac, just drop the folder on the
B&lt;installme&gt; droplet, and use the module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T151519Z">
        <seg>Si usa cpan-mac, simplemente coloque la carpeta en el I&lt;droplet&gt; B&lt;installme&gt; y ya podrá usar el módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are working with a git clone of the Perl repository, you will
want to create a branch for your changes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T223337Z">
        <seg>Si trabaja con un clon del repositorio git de Perl, tendrá que crear una rama para incorporar sus cambios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you assign directly to C&lt;$_[0]&gt; you will change the contents of the
variable that holds the reference to the object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T214123Z">
        <seg>Si asigna un valor directamente a C&lt;$_[0]&gt;, cambiará el contenido de la variable que contiene la referencia al objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you attempt to call a
method on an object that isn't defined in its own class, Perl will also
look for that method in any parent classes it may have.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T161722Z">
        <seg>Si intenta llamar a un método no definido en la clase del objeto que hace la llamada, Perl lo buscará también en las clases primarias del objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you call C&lt;ref($thing)&gt; and C&lt;$thing&gt;
holds a reference to an object, it will return the name of the class
that the object has been blessed into.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161239Z">
        <seg>Si llama a C&lt;ref($algo)&gt; y C&lt;$algo&gt; contiene una referencia a un objeto, devolverá el nombre de la clase en la que se bendijo el objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you call a method that doesn't exist in a class, Perl will throw an
error.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T172524Z">
        <seg>Si llama a un método que no existe en una clase, Perl generará un error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you can't remember what mnemonic means,
you've got a problem.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T230236Z">
        <seg>Si no puede recordar el significado de "mnemotécnico", tiene un problema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you choose not to use cpan-mac for some reason, there
are alternatives listed here.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T010335Z">
        <seg>Si prefiere no utilizar cpan-mac por alguna razón, abajo se indican algunas alternativas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you choose to use
Moose, it comes with a full-fledged role implementation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T165843Z">
        <seg>Si elige usar Moose, dispondrá de una implementación completa de los roles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you copy a subroutine from one package to another, C&lt;SUPER&gt;
resolution will be done based on the original package.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162802Z">
        <seg>Si se copia una subrutina de un paquete en otro, la resolución de C&lt;SUPER&gt; se basará en el paquete original.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you define an C&lt;AUTOLOAD&gt; in your class, then Perl will call your
C&lt;AUTOLOAD&gt; to handle the C&lt;DESTROY&gt; method.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T182841Z">
        <seg>Si define C&lt;AUTOLOAD&gt; en la clase, Perl llamará a su método C&lt;AUTOLOAD&gt; para controlar el método C&lt;DESTROY&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you do not wish to install the L&lt;Module::Starter|Module::Starter&gt;
package from CPAN, F&lt;h2xs&gt; is an older tool, originally intended for the
development of XS modules, which comes packaged with the Perl
distribution.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T174332Z">
        <seg>Si no desea instalar el paquete L&lt;Module::Starter|Module::Starter&gt; de CPAN, puede usar F&lt;h2xs&gt;, una herramienta más antigua que se creó originalmente para desarrollar módulos XS, y que se incluye en la distribución de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you do so,
we recommend that you follow the built-in semantics described below.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161515Z">
        <seg>Si lo hace, le recomendamos que siga la semántica predefinida que se describe a continuación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you do this, you can't accidentally forget to decode
or encode anymore, on things that use the layered handle.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T004741Z">
        <seg>Si hace esto, no se olvidará de volver a descodificar o codificar cosas que usan el identificador de archivo con una capa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you do want to
export a bunch of symbols, use the C&lt;%EXPORT_TAGS&gt; and define a standard
export set - look at L&lt;Exporter&gt; for more details.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T142246Z">
        <seg>Si desea exportar un conjunto de símbolos, use C&lt;%EXPORT_TAGS&gt; y defina un conjunto de exportación definido. Encontrará más detalles en L&lt;Exporter&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't
understand these concepts yet, please read L&lt;perlintro&gt; first.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194505Z">
        <seg>De no ser así, lea primero L&lt;perlintro&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't know what one of these is, the rest of this
document isn't going to be much use to you.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T172229Z">
        <seg>Si no sabe lo que es un módulo Perl, este documento no le va a ser de gran ayuda.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't see a certain project listed at
L&lt;http://lists.perl.org&gt;, check the particular website for that project.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T183150Z">
        <seg>Si no ve un proyecto determinado en L&lt;http://lists.perl.org&gt;, visite el sitio web específico del proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't see an error message, you have the module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T234541Z">
        <seg>Si no aparece un mensaje de error, significa que ya tiene el módulo instalado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't want this to happen, you can begin</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T234916Z">
        <seg>Si no desea que ocurra esto, puede comenzar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you feel the urge to write Perl modules, L&lt;perlnewmod&gt; will give you
good advice.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T121048Z">
        <seg>Si desea escribir módulos de Perl, L&lt;perlnewmod&gt; le ayudará a empezar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you find that you need to speed up a specific part of a Perl
application (not something you often need) you may want to use C,
but you can access this from your Perl code with L&lt;perlxs&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T154121Z">
        <seg>Si necesita acelerar una parte específica de una aplicación Perl (algo que normalmente no necesitará) es posible que desee usar código C, pero podrá acceder a dicho código desde el código Perl mediante L&lt;perlxs&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you go with
C&lt;Moose&gt;, it comes with its own role implementation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T105609Z">
        <seg>Si se decanta por C&lt;Moose&gt;, podrá disponer de su implementación de roles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have Perl installed locally, you probably have the documentation
installed as well: type C&lt;perldoc perl&gt; in a terminal or
L&lt;view online|http://perldoc.perl.org/perl.html&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T194136Z">
        <seg>Si ha instalado Perl localmente, es probable que también haya instalado la documentación: escriba C&lt;perldoc perl&gt; en el terminal. Como alternativa, puede L&lt;consultar la documentación en línea|http://perldoc.perl.org/perl.html&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have a burning desire to tell the world about your release, post
an announcement to the moderated C&lt;comp.lang.perl.announce&gt; newsgroup.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T213958Z">
        <seg>Si está impaciente por dar a conocer su módulo, publique un anuncio en el grupo de noticias moderado C&lt;comp.lang.perl.announce&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have a library that provides an API, you can make any component
of it available as just another Perl function or variable using a Perl
extension written in C or C++ and dynamically linked into your main
perl interpreter.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110329T225328Z">
        <seg>Si tiene una biblioteca que proporciona una API, puede hacer que cualquier componente de la misma esté disponible como cualquier otra función o variable de Perl mediante una extensión programada en C o C++, y vinculada dinámicamente al intérprete perl principal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have a really hairy regular expression, use the C&lt;/x&gt; modifier and
put in some whitespace to make it look a little less like line noise.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T102049Z">
        <seg>En el caso de una expresión regular muy compleja, debe usar el modificador C&lt;/x&gt; y poner algunos espacios en blanco para evitar que parezca un galimatías.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have any suggested changes for this page, let me know.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T011727Z">
        <seg>Si tiene alguna sugerencia relativa a esta página, le agradecería que me lo comunicara.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have cached your return value, then
return a pointer to it without changing the reference count.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T221254Z">
        <seg>Si almacenó en caché el valor devuelto, debe devolver un puntero a dicho valor sin cambiar el contador de referencias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have never been to a hackathon, here are a few basic things you need to
know before attending: have a working laptop and know how to use it; check out
the involved projects beforehand; have the necessary version control client;
and bring backup equipment (an extra LAN cable, additional power strips, etc.)
because someone will forget.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T212715Z">
        <seg>Si nunca ha estado en un I&lt;hackathon&gt;, debe saber algunas cosas básicas antes de asistir: necesita un ordenador portátil operativo y saber cómo usarlo; antes de acudir debe haber echado un vistazo a los proyectos en los que va a trabajar; necesita un cliente de control de versiones; y debería llevar material de repuesto (un cable LAN adicional, una regleta de alimentación adicional, etc.), ya que siempre habrá alguien a quien se le olvide algo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have to communicate with things
that are too liberal, you may have to use C&lt;utf8&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T234951Z">
        <seg>Sin embargo, si tiene que comunicarse con algo que es demasiado liberal, puede que tenga que utilizar C&lt;utf8&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have to communicate with things that aren't so liberal,
you may want to consider using C&lt;UTF-8&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T234936Z">
        <seg>Si tiene que comunicarse con algo que no es tan liberal, es posible que sea mejor utilizar C&lt;UTF-8&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have to do anything with the number of bytes, it's probably best to move
that part to step 3, just after you've encoded the string.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T223450Z">
        <seg>Si necesita el número de bytes para algo, debe calcularlo en el paso 3, después de codificar la cadena.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you haven't read L&lt;perlhack&gt; yet, go do that first!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T233415Z">
        <seg>Si todavía no ha leído L&lt;perlhack&gt;, es lo primero que debe hacer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you just want to know how to use the utilities described here,
F&lt;pod2usage&gt; will just extract the "USAGE" section; some of
the utilities will automatically call F&lt;pod2usage&gt; on themselves when
you call them with C&lt;-help&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T152917Z">
        <seg>Si sólo quiere saber cómo se usan las utilidades aquí descritas, F&lt;pod2usage&gt; solo extraerá la sección "USAGE" (USO); algunas de estas utilidades llamarán automáticamente a F&lt;pod2usage&gt; si las llama con el modificador C&lt;-help&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need non-ASCII characters in your source code, make it a UTF-8 encoded
file and C&lt;use utf8&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T003009Z">
        <seg>Si necesita utilizar caracteres que no pertenezcan a ASCII en el código fuente, codifíquelos como UTF-8 y use el pragma C&lt;use utf8&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need to C&lt;die&gt;, say C&lt;croak&gt; instead.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T190624Z">
        <seg>Asimismo, si el código incluye C&lt;die&gt;, debe usar C&lt;croak&gt; en su lugar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need to install your software on a system without a
compiler, or if having I&lt;any&gt; dependencies is a problem, then C&lt;Moose&gt;
may not be right for you.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T165513Z">
        <seg>Si tiene que instalar el software en un sistema sin compilador, o si las dependencias suponen un problema, entonces C&lt;Moose&gt; podría no ser la solución adecuada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need to maintain such
code, you should read L&lt;perlobj&gt; to understand exactly how Perl's
built-in OO works.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T105835Z">
        <seg>Si necesita mantener este tipo de código, debería leer L&lt;perlobj&gt; para comprender exactamente cómo funciona la orientación a objetos ofrecida por Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need to set the encoding for STDIN, STDOUT, and STDERR, for example
based on the user's locale, C&lt;use open&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T222838Z">
        <seg>Si necesita establecer la codificación para STDIN, STDOUT y STDERR basándose, por ejemplo, en la configuración regional del usuario, use el pragma C&lt;use open&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need to store multiple values
or complex structures, you should serialise them, for example with C&lt;pack&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T222203Z">
        <seg>Si necesita almacenar varios valores o estructuras complejas, debe serializarlas (por ejemplo, con C&lt;pack&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you needed to know the length of the string in bytes, now's the perfect time
for that.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T223544Z">
        <seg>Si necesita averiguar la longitud de la cadena en bytes, ahora es el momento de hacerlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you only have one reference to an object stored in a
lexical scalar, the object is destroyed when that scalar goes out of
scope.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T230259Z">
        <seg>Si sólo dispone de una referencia a un objeto almacenada en una variable escalar léxica, se destruirá el objeto cuando se salga del ámbito de la variable escalar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you or your team can be faster,
better, and stronger through Perl, you'll deliver more value.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T002649Z">
        <seg>Si con Perl usted y su equipo pueden desarrollar de manera más rápida y mejor, su productividad aumentará.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you override this method, it should never throw an exception.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T003509Z">
        <seg>Si sobrescribe este método, no debe generar nunca una excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you properly encode your strings for output, none of this is of your
concern, and you can just C&lt;eval&gt; dumped data as always.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T232342Z">
        <seg>Si codifica correctamente las cadenas para la salida, no tiene que preocuparse por esto, y puede aplicar C&lt;eval&gt; a los datos volcados, como siempre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you read this file _as_is_, just ignore the funny characters you
see.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T220852Z">
        <seg>Puede leer este archivo en cualquier editor de texto (verá algunos caracteres extraños, pero puede ignorarlos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you read this file _as_is_, just ignore the funny characters you see.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T210658Z">
        <seg>Puede leer este archivo en cualquier editor de texto (verá algunos caracteres extraños, pero puede ignorarlos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you run
into resistance, figure out what those people get out of the other
choice and how Perl might satisfy that requirement.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T184036Z">
        <seg>Si le oponen resistencia, averigüe qué necesitan y hágales ver en qué medida Perl podría cubrir sus necesidades.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you simply want to check that a variable contains an object
reference, we recommend that you use C&lt;defined blessed($object)&gt;, since
C&lt;ref&gt; returns true values for all references, not just objects.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T003301Z">
        <seg>Si únicamente desea comprobar si una variable contiene una referencia a un objeto, se recomienda el uso de C&lt;defined blessed($objeto)&gt;, ya que C&lt;ref&gt; devuelve verdadero para todas las referencias, no solo para los objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you still need commercial support
L&lt;ActiveState|http://www.activestate.com/activeperl&gt; offers
this.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T191032Z">
        <seg>Si de todos modos necesita soporte comercial, L&lt;ActiveState|http://www.activestate.com/activeperl&gt; lo ofrece.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you store the object in a package global, that object may not
go out of scope until the program exits.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T181935Z">
        <seg>Si almacena el objeto en una variable global de paquete, es posible que no se salga del ámbito del objeto hasta que finalice el programa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you submit a
patch, you should add your name to this file as part of the patch.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T232619Z">
        <seg>Si envía un parche, debe agregar su nombre a este archivo como parte del parche.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you try C&lt;Moose&gt; and find that one of these issues is preventing you
from using C&lt;Moose&gt;, we encourage you to consider L&lt;Moo&gt; next.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T133328Z" creationid="explorer" creationdate="20150905T122545Z">
        <seg>Si prueba C&lt;Moose&gt; y descubre que uno de los problemas mencionados le impide
utilizarlo, le recomendamos que pruebe L&lt;Moo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you use one of them,
you should never have to access the object as a hash directly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T164008Z">
        <seg>Si usa cualquiera de ellos, no tendrá que acceder directamente al hash.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you used WinZip, this was already done for you.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000525Z">
        <seg>Si utilizó WinZip, ya estará desempaquetado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want
it connected to the rest of the CPAN, you'll need to go to "Register
Namespace" on PAUSE.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T221251Z">
        <seg>Si desea conectarlo con el resto de CPAN, tendrá que registrar el espacio de nombres a través de "Register Namespace" en PAUSE.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want objects to
actually I&lt;be&gt; opaque you need to arrange for that yourself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T232546Z">
        <seg>Si desea que los objetos I&lt;sean&gt; realmente opacos debe conseguirlo por sí mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to CLONE all objects you will need to keep track of them per
package.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T121234Z">
        <seg>Si desea ejecutar C&lt;CLONE&gt; sobre todos los objetos tendrá que hacer un seguimiento de los objetos correspondientes a cada paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to alias only a particular variable or
subroutine, assign a reference instead:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T180240Z">
        <seg>Si desea crear un alias de una sola variable o subrutina específica, debe asignar una referencia:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to detect
the global destruction phase on older versions of Perl, you can use the
C&lt;Devel::GlobalDestruction&gt; module on CPAN.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T230800Z">
        <seg>Si desea detectar si el programa está en la fase de destrucción global en versiones anteriores de Perl, puede usar el módulo C&lt;Devel::GlobalDestruction&gt;, disponible en CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to do something when the object is destroyed, you can
define a C&lt;DESTROY&gt; method in your class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T182003Z">
        <seg>Si desea realizar alguna tarea específica en el momento de destruir el objeto, puede definir un método C&lt;DESTROY&gt; en la clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to know how Perl OO works under the hood, the L&lt;perlobj&gt;
document explains the nitty gritty details.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195052Z">
        <seg>Si desea conocer el funcionamiento interno de la orientación a objetos en Perl, este documento explica los detalles esenciales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to know whether a particular scalar refers to an object,
you can use the C&lt;blessed&gt; function exported by L&lt;Scalar::Util&gt;, which
is shipped with the Perl core.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161006Z">
        <seg>Si desea averiguar si una variable escalar concreta hace referencia a un objeto, puede usar la función C&lt;blessed&gt; exportada por L&lt;Scalar::Util&gt; (que forma parte del núcleo de Perl).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to learn more about Perl 6, or have a desire to help in
the crusade to make Perl a better place then read the Perl 6 developers
page at L&lt;http://www.perl6.org/&gt; and get involved.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T175128Z">
        <seg>Si desea aprender más sobre Perl 6 o ayudarnos en nuestra cruzada por mejorar Perl, vea la página para programadores de Perl 6 en L&lt;http://www.perl6.org/&gt; e involúcrese en su desarrollo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to learn the basics of Perl, you might start with the
Llama book, which assumes that you already know a little about
programming:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110604T233625Z">
        <seg>Si desea aprender los conceptos básicos de Perl, puede empezar por el Libro de la Llama, cuya lectura requiere unos conocimientos mínimos de programación:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to run a threaded Perl on OpenBSD
3.7 or higher, you will need to upgrade to at least Perl 5.8.7.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T123548Z">
        <seg>Si desea ejecutar una versión de Perl compatible con hilos de ejecución en OpenBSD 3.7 o posterior, tendrá que actualizar a Perl 5.8.7 como mínimo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to use Perl on the Hurd, I recommend using the Debian
GNU/Hurd distribution ( see http://www.debian.org/ ), even if an
official, stable release has not yet been made.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T134438Z">
        <seg>Si desea usar Perl en Hurd, la distribución recomendada es Debian GNU/Hurd (visite http://www.debian.org/ ), aunque aún no existe una versión oficial estable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're
hacking on the Perl core, this will help you find what you're looking
for.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204734Z">
        <seg>En él encontrará toda la información necesaria para «hackear» el núcleo de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're already familiar with these terms, you
should still skim this section, since it explains each concept in terms
of Perl's OO implementation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T122956Z">
        <seg>Aunque ya esté familiarizado con estos conceptos, debería leer por encima esta sección, puesto que explica cada concepto en términos de la implementación de la orientación a objetos de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're just looking to write some
object-oriented code of your own, you are probably better served by
using one of the object systems from CPAN described in L&lt;perlootut&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T123950Z">
        <seg>Si solo tiene que escribir código orientado a objetos, lo más recomendable es usar alguno de los sistemas de programación orientada a objetos disponibles en CPAN y descritos en L&lt;perlootut&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're looking for an introduction to object-oriented
programming in Perl, please see L&lt;perlootut&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T202427Z">
        <seg>Si busca una introducción a la programación orientada a objetos en Perl, consulte L&lt;perlootut&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're looking to write your own object system, or you need to
maintain code which implements objects from scratch then this document
will help you understand exactly how Perl does object orientation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T233132Z">
        <seg>Si desea escribir su propio sistema de orientación a objetos o tiene que mantener código que implementa objetos desde cero, este documento le ayudará a entender exactamente cómo funciona la orientación a objetos en Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're new to Perl, you should start by running C&lt;perldoc perlintro&gt;,
which is a general intro for beginners and provides some background to help
you navigate the rest of Perl's extensive documentation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T175025Z">
        <seg>Si nunca ha programado en Perl, debe empezar por ejecutar C&lt;perldoc perlintro&gt; para leer una introducción general para principiantes y aprender a orientarse por la amplia documentación de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're on a system
that requires superuser/root access to install modules into the
directories you see when you type C&lt;perl -e "print qq(@INC)"&gt;, you'll
want to install them into a local directory (such as your home
directory) and use this approach.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T011047Z">
        <seg>Si usa un sistema en el que la instalación de módulos en los directorios que ve al ejecutar C&lt;perl -e "print qq(@INC)"&gt; requiere privilegios de acceso de superusuario/raíz, posiblemente prefiera instalar los módulos en un directorio local (como su directorio personal) y usar este enfoque.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're unsure
about the demand your module will have, consider sending out feelers
on the C&lt;comp.lang.perl.modules&gt; newsgroup, or as a last resort, ask the
modules list at C&lt;modules@perl.org&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T190304Z">
        <seg>Si no está seguro de la demanda que puede tener su módulo, puede sondear opiniones en el grupo de noticias C&lt;comp.lang.perl.modules&gt; o, como último recurso, preguntar en la lista sobre módulos, escribiendo a la dirección C&lt;modules@perl.org&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're uploading to CPAN, the automated gremlins will extract the
README file and place that in your CPAN directory.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T215056Z">
        <seg>Si va a subir el módulo a CPAN, los enanitos automatizados extraerán el archivo README y lo colocarán en su directorio de CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're using VMStar:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T005951Z">
        <seg>Si usa VMStar:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're using untarzipme or StuffIt, the archive should be extracted
now.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T232557Z">
        <seg>Si usa untarzipme o StuffIt, ya se habrá extraído el contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're writing your own documentation in POD, the F&lt;podchecker&gt;
utility will look for errors in your markup.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T171353Z">
        <seg>Al redactar documentación POD puede usar la utilidad F&lt;podchecker&gt; para detectar errores de marcas POD.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you've found a bug with the perl interpreter or one of the modules
in the standard library (those that come with Perl), you can use the
L&lt;perlbug&gt; utility that comes with Perl (&gt;= 5.004).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T092943Z">
        <seg>Si ha encontrado un error en el intérprete de perl o en uno de los módulos de la biblioteca estándar (los que se incluyen con Perl), puede usar la utilidad L&lt;perlbug&gt; incluida en Perl (&gt;= 5.004) para enviar un informe.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you've succeeded
in compiling perl, the L&lt;perlbug&gt; script in the F&lt;utils/&gt; subdirectory
can be used to help mail in a bug report.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150514T162512Z" creationid="explorer" creationdate="20150514T162512Z">
        <seg>Si ha logrado
compilar perl, puede utilizar el script L&lt;perlbug&gt; del subdirectorio F&lt;utils/&gt;
para notificar informes de error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your C&lt;DESTROY&gt; method issues a warning during global destruction,
the Perl interpreter will append the string " during global
destruction" to the warning.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T161712Z" creationid="explorer" creationdate="20150905T161712Z">
        <seg>Si el método C&lt;DESTROY&gt; genera una advertencia durante la fase de destrucción global, el intérprete de Perl agregará la cadena "I&lt;during global destruction&gt;" (durante la destrucción global) a la advertencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your C&lt;DESTROY&gt; method throws an error, this error will be ignored.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T182134Z">
        <seg>Si su método C&lt;DESTROY&gt; genera un error, se omitirá.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your Perl book isn't listed and you think it should be, let us know.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110604T233542Z">
        <seg>Si su libro sobre Perl no está en la lista y cree que deberíamos incluirlo, póngase en contacto con nosotros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your Perl success stories and testimonials may be of help to others 
who wish to advocate the use of Perl in their applications, 
or if you wish to simply express your gratitude to Larry and the 
Perl developers, please write to perl-thanks@perl.org .</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110214T002103Z">
        <seg>Si considera que sus éxitos con Perl y sus testimonios pueden ayudar a otros programadores que desean utilizar Perl en sus proyectos, o si simplemente quiere expresar su gratitud a Larry y a los demás programadores de Perl, escriba un mensaje a la dirección perl-thanks@perl.org .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your class does have an C&lt;AUTOLOAD&gt; method, we strongly recommend
that you override C&lt;can&gt; in your class as well.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T181628Z">
        <seg>Si su clase dispone de un método C&lt;AUTOLOAD&gt;, le recomendamos que sobrescriba el método C&lt;can&gt; en su clase también.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your class responds to method calls via C&lt;AUTOLOAD&gt;, you may want to
overload C&lt;can&gt; to return a subroutine reference for methods which your
C&lt;AUTOLOAD&gt; method handles.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T225122Z">
        <seg>Si la clase responde a llamadas a métodos a través de C&lt;AUTOLOAD&gt;, puede que desee sobrescribir el método C&lt;can&gt; para que devuelva una referencia a subrutina para aquellos métodos controlados por su método C&lt;AUTOLOAD&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your input is binary, and is supposed to remain binary, you shouldn't decode
it to a text string, of course.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195950Z">
        <seg>Por supuesto, si la entrada es binaria y debe permanecer así, no debe descodificarla en una cadena de texto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your sources are UTF-8 encoded, you can indicate that with the
C&lt;use utf8&gt; pragma.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T093345Z">
        <seg>Si el código fuente está codificado como UTF-8, puede indicarlo con el pragma C&lt;use utf8&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your stdio requires a seek or eof between reads and writes on a
particular stream, so does Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110214T002318Z">
        <seg>Si stdio requiere ejecutar seek o eof entre lecturas y escrituras para una secuencia determinada, Perl también lo requerirá</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If yours doesn't, or if for
another reason you have a statically-linked perl, B&lt;and&gt; the
module requires compilation, you'll need to build a new Perl binary
that includes the module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000402Z">
        <seg>Si no fuera el caso del suyo, o si por otra razón tiene un perl vinculado estáticamente B&lt;y&gt; el módulo requiere compilación, tendrá que compilar un nuevo binario de Perl que incluya el módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ignore case.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T184954Z">
        <seg>No se distinguen mayúsculas de minúsculas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ilya Zakharevich C&lt;ilya@math.ohio-state.edu&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174608Z">
        <seg>Ilya Zakharevich C&lt;ilya@math.ohio-state.edu&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In
particular, if you use C&lt;eval {}&gt; you should localize C&lt;$@&gt;, and if you
use C&lt;system&gt; or backticks you should localize C&lt;$?&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T161807Z" creationid="explorer" creationdate="20150905T161807Z">
        <seg>En particular, si usa C&lt;eval {}&gt; debería localizar C&lt;$@&gt;, y si usa C&lt;system&gt; o comillas invertidas, debería localizar C&lt;$?&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In
particular, though the first such conversion may be time-consuming,
repeated operations will not need to redo the conversion.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T193551Z">
        <seg>Así, aunque la primera conversión tarde un poco más, al repetir una operación no será necesario repetir la conversión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In
scalar context it reads a single line from the filehandle, and in list
context it reads the whole file in, assigning each line to an element of
the list:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120630T221539Z">
        <seg>En contexto de escalar, este operador lee una sola línea del identificador de archivo, mientras que en contexto de lista lee todo el archivo y asigna cada línea a un elemento de la lista:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In
some cases, Perl will warn you that you're doing something wrong, with a
friendly warning:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120424T094544Z">
        <seg>En algunos casos Perl le mostrará un mensaje amistoso para avisarle de que está haciendo algo mal:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In C&lt;&lt; native floating point --&gt; native integer &gt;&gt; conversions the magnitude
of the result is less than or equal to the magnitude of the source.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T195546Z">
        <seg>En las conversiones C&lt;&lt; punto flotante nativo --&gt; entero nativo &gt;&gt;, la magnitud del resultado es menor o igual que la magnitud del número de origen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In C&lt;CLONE&gt; you can do whatever
you need to do,
like for example handle the cloning of non-Perl data, if necessary.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T121127Z">
        <seg>C&lt;CLONE&gt; le permite hacer todo lo que necesite, como controlar la clonación de datos que no sean de Perl, si es necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In English, that second interpretation reads as "call a subroutine
named Class(), then call new() as a method on the return value of
Class()".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T212208Z">
        <seg>La segunda interpretación significa "llamar a una subrutina denominada Clase() y después llamar a new() como un método en el valor devuelto por Clase()".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In I&lt;Perl
Best Practices&gt; (copyright 2004, Published by O'Reilly Media, Inc.),
Damian Conway provides a list of criteria to use when deciding if OO is
the right fit for your problem:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T170853Z">
        <seg>En el libro I&lt;Perl Best Practices&gt; (publicado en 2004 por O'Reilly Media, Inc.), Damian Conway proporciona una lista de criterios para decidir si la orientación a objetos se ajusta a nuestro problema:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Perl most objects are hashes, but the OO systems we recommend keep
you from having to worry about this.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120627T111829Z">
        <seg>En Perl la mayoría de los objetos son hashes, pero los sistemas de orientación a objetos recomendados evitan tener que preocuparse de estos detalles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Perl, a class's constructor
is just another method, unlike some other languages, which provide
syntax for constructors.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120627T221805Z">
        <seg>En Perl, el constructor de una clase es un método más; otros lenguajes de programación tienen una sintaxis especial para ellos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Perl, any package can be a class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195659Z">
        <seg>En Perl, cualquier paquete puede ser una clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Perl, methods are simply subroutines that live in a class's package.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200137Z">
        <seg>En Perl, los métodos no son más que subrutinas que pertenecen al paquete de una clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Perl, there is no special keyword for constructing an object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120627T221345Z">
        <seg>En Perl no hay una palabra reservada especial para construir un objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a Unicode encoding, multiple subsequent bytes can be used to
store a single code point, or simply: character.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T222414Z">
        <seg>En una codificación de Unicode se pueden utilizar varios bytes seguidos para almacenar un solo código de carácter (o carácter).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to this
limitation,  the exponent of the binary number is also restricted when it
is represented as a floating point number.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T192616Z">
        <seg>Además de esta limitación, el exponente del número binario también está restringido cuando se representa como un número de punto flotante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition,
when unqualified, the identifiers STDIN, STDOUT, STDERR, ARGV,
ARGVOUT, ENV, INC, and SIG are forced to be in package C&lt;main&gt;,
even when used for other purposes than their built-in ones.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T111411Z">
        <seg>Además, cuando no se usan los nombres calificados, los identificadores STDIN, STDOUT, STDERR, ARGV, ARGVOUT, ENV, INC y SIG se almacenan en el paquete C&lt;main&gt;, incluso cuando se usan para propósitos distintos de los predefinidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, many modules on CPAN already use C&lt;Moose&gt;,
providing you with lots of examples to learn from.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T165149Z">
        <seg>Además, muchos módulos de CPAN ya usan C&lt;Moose&gt;, lo que proporciona muchos ejemplos de los que puede aprender.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, plenty of code in the wild does all of its OO "by hand",
using just the Perl built-in OO features.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T180223Z">
        <seg>Además, existe mucho código en el que se usa orientación a objetos "a mano", basado en las características de orientación a objetos predefinidas de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, some of the modules shipped with Perl
include C or XS code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204653Z">
        <seg>Además, algunos de los módulos distribuidos con Perl incluyen código C o XS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In any way, if you're seeing failures beyond those mentioned in this
document, please consider upgrading to the latest Hurd before reporting
the failure as a bug.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T134905Z">
        <seg>En cualquier caso, si ve más errores que los mencionados en este documento, debería actualizar a la versión más reciente de Hurd antes de notificar los errores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In decimal representation this is close
to 16 decimal digits and decimal exponents in the range of -304..304.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T173532Z">
        <seg>En representación decimal, estos límites se acercan a 16 dígitos decimales y exponentes decimales en el intervalo -304..304.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In directories where either C&lt;Makefile.PL&gt; or C&lt;Build.PL&gt; exist, C&lt;perldoc&gt;
will add C&lt;.&gt; and C&lt;lib&gt; first to its search path, and as long as you're not
the superuser will add C&lt;blib&gt; too.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T215109Z" creationid="explorer" creationdate="20160506T214125Z">
        <seg>En directorios en los que existen C&lt;Makefile.PL&gt; o C&lt;Build.PL&gt;, C&lt;perldoc&gt;
agregará C&lt;.&gt; y C&lt;lib&gt; al principio de la ruta de búsqueda. También agregará C&lt;blib&gt; si su cuenta no es la del superusuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact numbers stored in the native integer format may be stored either
in the signed native form, or in the unsigned native form.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T174323Z">
        <seg>De hecho, los números almacenados en formato de entero nativo se pueden almacenar en forma nativa con signo o sin signo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, text strings are never in any other format!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T223110Z">
        <seg>(de hecho, es el único formato de las cadenas de texto).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, there's
really no such thing as a global variable in Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T110213Z">
        <seg>De hecho, en Perl no hay variables globales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, you can match
on just about anything you could dream of by using more complex regular
expressions.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230108Z">
        <seg>De hecho, puede detectar coincidencias donde quiera con expresiones regulares más complejas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general though, we try to
limit this list to books published in the past five years.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110526T104958Z">
        <seg>Sin embargo, en general intentaremos limitar esta lista a libros publicados en los últimos cinco años.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, C&lt;use Module ()&gt; is recommended over C&lt;require Module&gt;,
because it determines module availability at compile time, not in the
middle of your program's execution.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T084542Z">
        <seg>En general se recomienda usar C&lt;use Module ()&gt; en lugar de C&lt;require Module&gt;, ya que determina la disponibilidad del módulo en tiempo de compilación, y no durante la ejecución del programa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, if something strange has gone wrong with your program and you're
not sure where you should look for help, try making your code comply with
B&lt;use strict&gt; and B&lt;use warnings&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T145326Z" creationid="explorer" creationdate="20150905T145326Z">
        <seg>En general, si ocurre algo raro en su programa y no sabe dónde buscar ayuda,
trate de hacer que cumpla las normas de
B&lt;use strict&gt; y B&lt;use warnings&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, the benefit of a language is closely related to the skill of
the people using that language.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T160645Z">
        <seg>En general, las ventajas que ofrece un lenguaje están muy relacionadas con la destreza de los usuarios del lenguaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, you want to use either the current
stable release, or the stable release immediately prior to that one.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T190633Z">
        <seg>En general, conviene usar la versión estable actual o la versión estable inmediatamente anterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In object-oriented code, we often find that one object references
another object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185150Z">
        <seg>Es habitual en el código orientado a objetos que un objeto contenga referencias a otro objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to make it more robust
it is recommended to start every program with the following lines:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T000957Z">
        <seg>Sin embargo, para trabajar de manera más segura se recomienda iniciar cada programa con las líneas siguientes:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to understand Perl objects, you first need to understand
references in Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T202442Z">
        <seg>Antes de comprender cómo funcionan los objetos en Perl debe conocer el concepto de referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In other words, Perl can resolve the syntax as either C&lt;&lt;
File-&gt;new( $path, $data ) &gt;&gt; B&lt;or&gt; C&lt;&lt; new( File( $path, $data ) ) &gt;&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T003010Z">
        <seg>Es decir, Perl puede resolver la sintaxis como C&lt;&lt; Archivo-&gt;new( $ruta, $datos ) &gt;&gt; B&lt;o&gt; como C&lt;&lt; new( Archivo( $ruta, $datos ) ) &gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In other words: don't try to find out what the internal
encoding for a certain string is, but instead just encode it into the encoding
that you want.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T235456Z">
        <seg>En resumen: no intente averiguar cuál es la codificación interna de una cadena determinada; solo tiene que codificarla con la codificación que desee.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In particular, bugs/features of the compiler
used may lead to breakage of some of the above rules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T194914Z">
        <seg>En particular, determinados errores o características del compilador usado pueden provocar la infracción de algunas de las normas anteriores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In particular, rounding is strongly biased to 0, though a number like
C&lt;"0.99999999999999999999"&gt; has a chance of being rounded to 1.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T194029Z">
        <seg>En particular, hay un sesgo muy fuerte de redondeo a 0, aunque es posible que un número como C&lt;"0.99999999999999999999"&gt; se redondee a 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In practice, it's best to consider
an object's internal data structure opaque.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195536Z">
        <seg>En la práctica es mejor considerar opaca la estructura interna de los objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In reality, subclassing sometimes involves
violating encapsulation, but a good API can minimize the need to do
this.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T093446Z">
        <seg>En realidad, a veces la creación de subclases requiere infringir el principio de encapsulación, pero si la interfaz es buena, la posibilidad de que esto ocurra es mínima.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In scopes where C&lt;use integer;&gt; is in force, nearly all the operators listed
above will force their argument(s) into integer format, and return an integer
result.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T200425Z">
        <seg>En ámbitos en los que C&lt;use integer;&gt; está activo, casi todos los operadores indicados arriba forzarán la conversión de sus argumentos a formato de entero, y devolverán un resultado entero.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In short, Perl 4 is the parent to both Perl 5 and Perl 6.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T153206Z">
        <seg>Se puede resumir de la siguiente manera: Perl 4 es el antecesor de Perl 5 y Perl 6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In simple
terms, "C3" order ensures that shared parent classes are never searched
before child classes, so Perl will now search: C&lt;Child&gt;, C&lt;Father&gt;,
C&lt;PaternalGrandparent&gt;, C&lt;Mother&gt; C&lt;MaternalGrandparent&gt;, and finally
C&lt;SharedGreatGrandParent&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T220749Z">
        <seg>A grandes rasgos, el orden "C3" garantiza que no se exploren las clases primarias comunes antes de buscar en las clases derivadas, de forma que el orden de búsqueda será ahora: C&lt;Hijo&gt;, C&lt;Padre&gt;, C&lt;AbueloPaterno&gt;, C&lt;Madre&gt;, C&lt;AbueloMaterno&gt; y, por último, C&lt;BisabueloComún&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In some cases perfection has been
sacrificed in the goal of getting the general idea across.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T180039Z">
        <seg>En algunos casos se ha sacrificado la precisión para transmitir la idea general.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In that case, it's easy to use C&lt;require&gt; instead.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170930Z">
        <seg>En este caso debe usarse C&lt;require&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the above example, it's not
clear if C&lt;save&gt; is a method provided by the C&lt;File&gt; class or simply a
subroutine that expects a file object as its first argument.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T151640Z">
        <seg>En el ejemplo anterior no está claro si C&lt;guardar&gt; es un método proporcionado por la clase C&lt;Archivo&gt; o simplemente una subrutina que espera un objeto archivo como primer argumento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the case of single inheritance, Perl simply looks up
the inheritance chain to find a method:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T163016Z">
        <seg>En el caso de la herencia simple, Perl simplemente busca en la cadena de herencia para encontrar el método:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example above, you can see that we passed C&lt;&lt; isa =&gt; 'Bool' &gt;&gt;
to C&lt;has()&gt; when creating our C&lt;is_on&gt; attribute.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T103446Z">
        <seg>En el ejemplo anterior se aprecia que se pasa un valor C&lt;&lt; isa =&gt; 'Bool' &gt;&gt;
a C&lt;has()&gt; al crear el atributo C&lt;encendido&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example pragma, retrieval
is encapsulated into the routine C&lt;in_effect()&gt;, which takes as parameter
the number of call frames to go up to find the value of the pragma in the
user's script.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T220619Z">
        <seg>En el pragma de ejemplo, la recuperación se encapsula en la rutina C&lt;in_effect()&gt;, que usa como parámetro el número de marcos de llamadas que hay que subir para encontrar el valor del pragma en el script del usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the first case, any double
colons in the module name, such as C&lt;Some::Module&gt;, are translated
into your system's directory separator, usually "/".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T120304Z">
        <seg>En el primer caso, si el nombre del módulo contiene el símbolo "::" (por ejemplo, C&lt;Mi::Modulo&gt;), dicho símbolo se traducirá como el separador de directorios habitual (generalmente "/").</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the first form, the anonymous hash is being blessed into the class
in C&lt;$class&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T160837Z">
        <seg>En la primera forma, el hash anónimo se bendice en la clase especificada por el nombre de clase almacenado en C&lt;$clase&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the first two versions, the body of the subroutine is
lexically in the main package, I&lt;not&gt; in Some_package.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T181503Z">
        <seg>En las dos primeras versiones, el cuerpo de la subrutina se define en el paquete C&lt;main&gt;, I&lt;no&gt; en Un_paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the past,
people just bit the bullet and used multiple inheritance.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T102115Z">
        <seg>En el pasado, los programadores tenían que resignarse a usar herencia múltiple.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the past, the Perl community experimented with a technique called
"inside-out objects".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T200642Z">
        <seg>En el pasado, la comunidad Perl experimentó con una técnica llamada "objetos I&lt;inside-out&gt;".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the previous examples, the C&lt;{}&gt; code creates a reference to an
empty anonymous hash.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T153615Z">
        <seg>En los ejemplos anteriores, el código C&lt;{}&gt; crea una referencia a un hash anónimo vacío.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the second form, the anonymous hash is blessed into
the current package.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T224445Z">
        <seg>En la segunda forma, el hash anónimo se bendice en el paquete actual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the simplest
case, the C&lt;$class&gt; variable will end up containing the string "File".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T153706Z">
        <seg>En el caso más simple la variable C&lt;$clase&gt; contendrá la cadena "Archivo".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In these cases perl will fall back to the old behaviour of using C's
argv[0] value for C&lt;$^X&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T203924Z">
        <seg>En estos casos, perl vuelve al comportamiento anterior (utilizar el valor argv[0] de C como valor de C&lt;$^X&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this
case, we have to advance C&lt;patcopy&gt; along with C&lt;pat&gt; when we see
spaces:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T160506Z">
        <seg>En este caso, tenemos que incrementar C&lt;patcopy&gt; junto con C&lt;pat&gt; cuando veamos espacios:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, it finds a C&lt;save()&gt; method in the C&lt;File&gt; class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T161929Z">
        <seg>En este caso se encuentra un método C&lt;guardar()&gt; en la clase C&lt;Archivo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, we will get the following output:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162617Z">
        <seg>En este ejemplo se obtiene el siguiente resultado:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In those cases where C&lt;HvENAME()&gt; returns null,
C&lt;HvNAME()&gt; should be used instead.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T221116Z">
        <seg>En aquellos casos en los que C&lt;HvENAME()&gt; devuelva un valor nulo, se debe usar C&lt;HvNAME()&gt; en su lugar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Individual modules in F&lt;lib/&gt;, F&lt;ext/&gt;, F&lt;dist/&gt;, and F&lt;cpan/&gt; usually
have their own documentation, either in the F&lt;Module.pm&gt; file or an
accompanying F&lt;Module.pod&gt; file.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204323Z">
        <seg>En general, los módulos individuales de F&lt;lib/&gt;, F&lt;ext/&gt;, F&lt;dist/&gt; y F&lt;cpan/&gt; tienen su propia documentación, ya sea en el archivo F&lt;Módulo.pm&gt; o en un archivo F&lt;Módulo.pod&gt; adjunto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Information about hackathons can be located in the same
place as information about L&lt;workshops|"Workshops"&gt; as well as in
L&lt;irc://irc.perl.org/#perl&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T183722Z">
        <seg>Encontrará información sobre los I&lt;hackathons&gt; en el mismo lugar en el que se ofrece información sobre los L&lt;talleres|"Talleres"&gt;, así como en L&lt;irc://irc.perl.org/#perl&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Information about irc.perl.org is located on the
network's website: L&lt;http://www.irc.perl.org&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T162553Z">
        <seg>Encontrará información sobre irc.perl.org en el sitio web de la red: L&lt;http://www.irc.perl.org&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inheritance allows two classes to share code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184814Z">
        <seg>La herencia permite que dos clases compartan código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inheritance lets the new class reuse the methods and attributes
of another class.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T121426Z" creationid="explorer" creationdate="20150905T121426Z">
        <seg>Mediante herencia, la nueva clase puede reutilizar los métodos y atributos
de otra clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inside an C&lt;END&gt; code block, C&lt;$?&gt; contains the value that the program is
going to pass to C&lt;exit()&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T162442Z">
        <seg>Dentro de un bloque de código C&lt;END&gt;, C&lt;$?&gt; contiene el valor que el programa va a pasar a C&lt;exit()&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inside of a C&lt;CHECK&gt; block, the value of C&lt;${^GLOBAL_PHASE}&gt; will be
C&lt;"CHECK"&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T163011Z">
        <seg>Dentro de un bloque C&lt;CHECK&gt;, el valor de C&lt;${^GLOBAL_PHASE}&gt; es C&lt;"CHECK"&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inside of a C&lt;END&gt; block, the value of C&lt;${^GLOBAL_PHASE}&gt; will be
C&lt;"END"&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T162540Z">
        <seg>Dentro de un bloque C&lt;END&gt;, el valor de C&lt;${^GLOBAL_PHASE}&gt; es C&lt;"END"&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inside of an C&lt;INIT&gt; block, the value of C&lt;${^GLOBAL_PHASE}&gt; will be C&lt;"INIT"&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T114240Z">
        <seg>Dentro de un bloque C&lt;INIT&gt; el valor de C&lt;${^GLOBAL_PHASE}&gt; será C&lt;"INIT"&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead a compact form is used, which can only store values that are
integers (signed and unsigned), strings or C&lt;undef&gt; - references and
floating point values are stringified.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T233332Z">
        <seg>En su lugar se usa una forma compacta que solo puede almacenar valores enteros (con signo o sin signo), cadenas o C&lt;undef&gt;; las referencias y los valores de punto flotante se convierten en cadenas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead of C&lt;:encoding(UTF-8)&gt;, you can simply use C&lt;:utf8&gt;, which skips the
encoding step if the data was already represented as UTF8 internally.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110222T085438Z">
        <seg>En lugar de utilizar C&lt;:encoding(UTF-8)&gt;, puede usar simplemente C&lt;:utf8&gt;, omitiendo así el paso de codificación cuando los datos ya están representados internamente como UTF8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead of C&lt;decode&gt; and C&lt;encode&gt;, you could use C&lt;_utf8_on&gt; and C&lt;_utf8_off&gt;,
but this is considered bad style.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T234601Z">
        <seg>En lugar de C&lt;decode&gt; y C&lt;encode&gt;, puede usar C&lt;_utf8_on&gt; y C&lt;_utf8_off&gt;, pero esto se considera poco elegante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, we should use accessor methods to access the
data in that hash.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T093528Z">
        <seg>En lugar de esto, deberíamos usar métodos de acceso para acceder a los datos del hash.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, you want
to put the blame on the user, and say this:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T183443Z">
        <seg>En lugar de ello, tiene que atribuir la culpa al usuario y decir esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Introduce the F&lt;.tar.gz&gt; file into an HFS as binary; don't translate from
ASCII to EBCDIC.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T182233Z">
        <seg>Introduzca el archivo F&lt;.tar.gz&gt; en un HFS como binario; no lo traduzca de ASCII a EBCDIC.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Irrespective of its distribution, all code examples here are in the public
domain.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110329T231038Z">
        <seg>Independientemente de su distribución, todos los ejemplos de código incluidos son de dominio público.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It
handles all kinds of structured text, too, through an extensive
collection of extensions.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T152943Z" creationid="explorer" creationdate="20150905T152943Z">
        <seg>Además, permite
procesar todo tipo de texto estructurado mediante una amplia colección de extensiones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It
is intended as a "bootstrap" guide for those who are new to the
language, and provides just enough information for you to be able to
read other peoples' Perl and understand roughly what it's doing, or
write your own simple scripts.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T170432Z">
        <seg>Es una guía de iniciación para los nuevos usuarios del lenguaje que proporciona la información necesaria para poder leer el código Perl de otras personas y comprender a grandes rasgos su funcionamiento, o para escribir scripts sencillos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It
looks like the same operator, but these are two different operations.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T212611Z">
        <seg>Parece el mismo operador, pero en realidad estas dos operaciones son diferentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It allows you to install
modules or distributions from CPAN, or just get information about them, and
a lot more.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T160706Z">
        <seg>Permite hacer muchas cosas, como instalar módulos o distribuciones de CPAN, o simplemente obtener información sobre ellas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also has a minimal C&lt;Moose&gt;
compatibility mode which makes moving from C&lt;Class::Accessor&gt; to
C&lt;Moose&gt; easy.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T105341Z">
        <seg>También ofrece un modo de compatibilidad mínima con C&lt;Moose&gt; que facilita la migración desde C&lt;Class::Accessor&gt; a C&lt;Moose&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also is
automatically enabled under C&lt;use feature ':5.12'&gt; or C&lt;use v5.12&gt; or
using C&lt;-E&gt; on the command line for Perl 5.12 or higher.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T114743Z" creationid="explorer" creationdate="20150513T114743Z">
        <seg>También se habilita
automáticamente con C&lt;use feature ':5.12'&gt; o C&lt;use v5.12&gt;, o
si se utiliza C&lt;-E&gt; en la línea de comandos de Perl 5.12 o una versión posterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also makes C++
programmers feel like they know what's going on--as opposed to using the
single quote as separator, which was there to make Ada programmers feel
like they knew what was going on.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T174634Z">
        <seg>Además, hace que los programadores de C++ se sientan más cómodos (más que si se usara la comilla, que se parece más al estilo seguido por los programadores de Ada).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also provides a "Moose-like" API on demand for the
features it supports.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104350Z">
        <seg>También proporciona una API "de tipo Moose" para las características que ofrece.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also takes
care of creating a C&lt;new()&gt; method for you.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T103149Z">
        <seg>También se ocupa de crear automáticamente un método C&lt;new()&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It begins with a brief overview of the concepts behind object
oriented design.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120627T095527Z">
        <seg>Comienza con una breve descripción de los conceptos relacionados con el diseño orientado a objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can
be useful but it may be a memory hog.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T225603Z">
        <seg>Puede resultar útil, pero esta operación consume mucha memoria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can be used after running C&lt;make
install&gt; (or your platform's equivalent procedure) to verify that perl
and its libraries have been installed correctly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T154112Z">
        <seg>Se puede usar después de ejecutar C&lt;make install&gt; (o el procedimiento equivalente para su plataforma) para comprobar que perl y sus bibliotecas se han instalado correctamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can run scripts from the previous major release, Perl 4
(March 1991), but has significant differences.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T002510Z">
        <seg>Permite ejecutar scripts de la versión principal anterior, Perl 4 (lanzada en marzo de 1991), pero incluye diferencias importantes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It collects
information about your installation to include with your message, then
sends the message to the right place.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T185416Z">
        <seg>Esta utilidad recopila información sobre la instalación para incluirla en el mensaje y después envía el informe a la dirección adecuada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It combines
(in the author's opinion, anyway) some of the best features of B&lt;sed&gt;,
B&lt;awk&gt;, and B&lt;sh&gt;, making it familiar and easy to use for Unix users to
whip up quick solutions to annoying problems.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T150704Z" creationid="explorer" creationdate="20150905T150704Z">
        <seg>Perl combina
(en opinión del autor) algunas de las mejores características de B&lt;sed&gt;,
B&lt;awk&gt; y B&lt;sh&gt;, por lo que resulta familiar y fácil de usar para los usuarios de Unix, permitiéndoles crear rápidamente soluciones para problemas fastidiosos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It creates a directory
with stubs of all the necessary files to start a new module, according
to recent "best practice" for module development, and is invoked from
the command line, thus:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T220527Z">
        <seg>Crea un directorio con el esqueleto de todos los archivos necesarios para iniciar un nuevo módulo, según las "prácticas recomendadas" actuales para el desarrollo de módulos, y se invoca desde la línea de comandos de la siguiente manera:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It describes in detail how to cope with most idiosyncrasies that the
C&lt;Configure&gt; script can't work around for any given system or
architecture.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T195428Z">
        <seg>En este documento se describe en detalle cómo tener en cuenta la mayor parte de las idiosincrasias que el script C&lt;Configure&gt; no puede prever para una arquitectura o un sistema específicos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It does not
even aim to be entirely accurate.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T180122Z">
        <seg>Tampoco explica el lenguaje en detalle.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It does not receive any additional arguments.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T182052Z">
        <seg>No recibe ningún argumento adicional.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It doesn't make much sense to decode a PNG image into a
text string.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T222919Z">
        <seg>(por ejemplo, no tiene sentido descodificar una imagen PNG en una cadena de texto).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It generates a
constructor for you, as well as the accessors you define.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104918Z">
        <seg>También genera automáticamente un constructor y todos los métodos de acceso que defina.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has a lot of features, a big
ecosystem, and a thriving user base.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T105135Z">
        <seg>Dispone de muchas características, un gran ecosistema y una importante base de usuarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has an incredibly minimal API and absolutely no dependencies
on any recent Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T125357Z" creationid="explorer" creationdate="20150905T125357Z">
        <seg>Tiene una API increíblemente reducida sin ninguna dependencia
de versiones recientes de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has no dependencies,
and almost no syntax to learn.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185727Z">
        <seg>No presenta dependencias y casi no hay sintaxis que aprender.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has now
been split off with C&lt;pp_unpack&gt; to its own file, F&lt;pp_pack.c&gt;]</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T001305Z">
        <seg>Ahora se ha escindido de C&lt;pp_unpack&gt; en su propio archivo, F&lt;pp_pack.c&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has the information
about the modules (with their versions) included with each release
of Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211552Z">
        <seg>Este módulo contiene información sobre los módulos (con sus versiones) incluidos en cada versión de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It initially switches
to the C&lt;DB&gt; package so that the debugger doesn't interfere with variables
in the program you are trying to debug.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T134757Z">
        <seg>Inicialmente cambia al paquete C&lt;DB&gt;, de forma que el depurador no interfiera con las variables del programa que intenta depurar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is I&lt;not&gt; resolved based on the object's class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162425Z">
        <seg>I&lt;NO&gt; se resuelve en base a la clase del objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is assumed that you already
know the difference between bytes and characters, and realise (and accept!)
that there are many different character sets and encodings, and that your
program has to be explicit about them.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T101636Z">
        <seg>Se supone que ya conoce la diferencia entre bytes y caracteres, y comprende (y acepta) que hay muchos juegos de caracteres y codificaciones distintos que deben especificarse cuando se utilicen en un programa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is called with a pointer to the stash, and
a I&lt;level&gt; of 0.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T214949Z">
        <seg>Se llama con un puntero al hash de tabla de símbolos, y un valor de I&lt;level&gt; igual a 0.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is distributed
in releases and comes in well-defined packages.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T094309Z">
        <seg>Se distribuye en versiones y se proporciona en paquetes bien definidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is generally easier to read
C&lt;$var_names_like_this&gt; than C&lt;$VarNamesLikeThis&gt;, especially for
non-native speakers of English.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T111012Z">
        <seg>Generalmente resulta más fácil leer C&lt;$nombres_de_variable_como_este&gt; que C&lt;$NombresDeVariableComoEste&gt; (especialmente para los no castellanohablantes).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is not concerned with displaying any details of the compressed data stored in the zip file.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T184216Z">
        <seg>No muestra detalles sobre los datos comprimidos que se encuentran almacenados en dicho archivo zip.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is possible to ask for a different method resolution order with the
L&lt;mro&gt; pragma.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T163826Z">
        <seg>Se puede usar el pragma L&lt;mro&gt; para solicitar un orden de resolución de métodos distinto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is possible to explicitly call a parent method from a child:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T225511Z">
        <seg>Es posible llamar explícitamente a un método de la clase primaria desde una clase derivada:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is possible to manually set C&lt;@ISA&gt;, and you may see this in older
Perl code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T211942Z">
        <seg>Es posible establecer C&lt;@ISA&gt; manualmente; puede ver esto en código Perl antiguo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is similar to the command line mode of the L&lt;CPAN&gt; module,</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T145328Z">
        <seg>Es similar al modo de línea de comandos del módulo L&lt;CPAN&gt;,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is specifically
designed to be reusable by other modules or programs.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T164538Z">
        <seg>Está diseñado específicamente para que otros módulos o programas lo puedan reutilizar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is the responsibility of the F&lt;.pm&gt; file to load
(or arrange to autoload) any additional functionality.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T171656Z">
        <seg>El archivo F&lt;.pm&gt; debe encargarse de cargar cualquier funcionalidad adicional (o producir la carga automática).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is therefore
conventional for a module to use only keys that begin with the module's
name (the name of its main package) and a "/" character.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T142647Z">
        <seg>Por ello, se sigue la convención de que en un módulo deben usarse únicamente claves que empiecen por el nombre del módulo (el nombre del paquete principal) seguido de un carácter "/".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is typically run by the makefiles created by L&lt;ExtUtils::MakeMaker&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T154631Z">
        <seg>Lo suelen ejecutar los archivos makefile generados por L&lt;ExtUtils::MakeMaker&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is written in the POD format (see pod/perlpod.pod) which is
specifically designed to be readable as is.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T220735Z">
        <seg>Está escrito en formato POD (vea pod/perlpod.pod), un formato diseñado específicamente para ser legible tal cual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is written in the POD format (see pod/perlpod.pod) which is specially
designed to be readable as is.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T210718Z">
        <seg>Está escrito en formato POD (vea pod/perlpod.pod), un formato diseñado específicamente para ser legible tal cual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is, however, very simple, pure Perl, and it has no non-core
dependencies.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T165657Z">
        <seg>Sin embargo, es muy simple, está programado en Perl puro y no tiene ninguna dependencia externa al núcleo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It isn't the reference that is blessed as an object; it's
the thing the reference refers to (i.e. the referent).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T205800Z">
        <seg>No es la referencia la que se bendice como un objeto; se bendice aquello a lo que alude la referencia (es decir, el referente).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It looks
like most programming languages you're likely to have experience
with, so if you've ever written a C program, an awk script, a shell
script, or even a BASIC program, you're already partway there.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T181052Z">
        <seg>Perl se parece a la mayoría de los lenguajes de programación con los que es probable que tenga experiencia, por lo que si ya ha escrito programas en C, scripts en awk o de shell, o incluso un programa en BASIC, no le costará adaptarse.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It makes a lot of sense to create a
C&lt;HasOnOffSwitch&gt; role and apply it to both classes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T102023Z">
        <seg>Tiene sentido crear un rol C&lt;TieneInterruptor&gt; y aplicarlo a ambas clases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It makes no sense to deal with bytes in a text string, and it
makes no sense to deal with characters in a byte string.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T091855Z">
        <seg>No tiene sentido trabajar con bytes en una cadena de texto o trabajar con caracteres en una cadena de bytes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It may do this
by providing a mechanism for exporting some of its symbols into the
symbol table of any package using it, or it may function as a class
definition and make its semantics available implicitly through
method calls on the class and its objects, without explicitly
exporting anything.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T083137Z">
        <seg>Para ello puede proporcionar un mecanismo que exporte algunos de sus símbolos a la tabla de símbolos de cualquier paquete que lo use, o puede funcionar como una definición de clase y hacer que su semántica esté disponible implícitamente mediante llamadas a métodos de la clase y sus objetos, sin exportar nada de forma explícita.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It no longer accepts
updates, but you can still use the site to read old entries and comments.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T092539Z" creationid="explorer" creationdate="20160505T092539Z">
        <seg>Actualmente ya no se actualiza, pero todavía se pueden consultar las publicaciones y los comentarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It only _looks_ like it should be confusing.\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T140939Z" creationid="explorer" creationdate="20150905T140939Z">
        <seg>Puede que parezca lioso, pero no lo es en realidad.\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It only influences
the way your sources are read.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T232131Z">
        <seg>Solo influye en la manera de leer el código fuente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It only works when assigning to dynamic variables, not
lexicals.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T112629Z">
        <seg>Sólo funciona al asignar valores a variables dinámicas (no léxicas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It operates on
C&lt;$_&gt; by default, or can be bound to another variable using the C&lt;=~&gt;
binding operator (also documented in L&lt;perlop&gt;).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T171859Z">
        <seg>Opera en C&lt;$_&gt; de manera predeterminada, o se puede enlazar a otra variable con el operador de enlace C&lt;=~&gt; (que también se describe en L&lt;perlop&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It provides very
few features, nor is it self-hosting.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104248Z">
        <seg>Proporciona muy pocas características y no es autocontenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It quickly became a good language
for many system management tasks.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T095108Z">
        <seg>Pronto se convirtió en un lenguaje útil para muchas tareas de administración de sistemas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It runs in order, of course.\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T163755Z">
        <seg>Por supuesto, se ejecuta por orden.\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It still boasts some of the most powerful regular expressions to be
found anywhere, and its support for Unicode text is world-class.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T154159Z" creationid="explorer" creationdate="20150905T152855Z">
        <seg>El lenguaje de expresiones regulares que incluye es el más potente que existe y su compatibilidad con texto Unicode es vanguardista.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It uses the domain to provide
general support services to the Perl community, including the hosting
of mailing lists, web sites, and other services.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T185650Z">
        <seg>Usa el dominio para proporcionar servicios generales de soporte a la comunidad Perl, como el alojamiento de listas de correo y sitios web, entre otros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It will also load the
parent classes and make sure that the package doesn't inherit from
itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T084116Z">
        <seg>También cargará las clases primarias y se asegurará de que el paquete no herede de sí mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It will be called in the context of the new thread,
so all modifications are made in the new area.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T085659Z">
        <seg>Se llamará en el contexto del nuevo hilo de ejecución, de forma que todas las modificaciones se realizarán en el nuevo espacio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It will not be sent to C&lt;STDERR&gt; and it will not cause the program to
die.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T182145Z">
        <seg>No se enviará a C&lt;STDERR&gt; y no hará que el programa finalice.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It will search
the B&lt;q&gt;uestion headings in perlfaq[1-9] and print the entries matching
the regular expression.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T202339Z">
        <seg>Busca en los encabezados de las preguntas ("q" viene de la palabra inglesa B&lt;q&gt;uestion) de perlfaq[1-9] e imprime en pantalla las entradas compatibles con la expresión regular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It will use the same encoding for
the source code and for STDIN and STDOUT.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T222701Z">
        <seg>Utilizará la misma codificación para el código fuente que para STDIN y STDOUT.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It would be much better if you could ignore the NULL terminations issue
in the main application code and have a mechanism that automatically
added the terminating NULL to all keys and values whenever you write to
the database and have them removed when you read from the database.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T160001Z">
        <seg>Sería mucho mejor poder ignorar el problema de los caracteres NULL de terminación de cadena en el código principal de la aplicación y disponer de un mecanismo que agregue automáticamente un carácter NULL de terminación a todas las claves y todos los valores que se escriban en la base de datos, y lo elimine al leer de la base de datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It'll also appear in
the main F&lt;by-module&gt; and F&lt;by-category&gt; directories if you make it onto
the modules list.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T213939Z">
        <seg>También aparecerá en los directorios principales F&lt;by-module&gt; (por módulo) y F&lt;by-category&gt; (por categoría) si registra el módulo en la lista de módulos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's
easy to program Unicode capable software, but it does require discipline to do
it right.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195631Z">
        <seg>Es fácil programar software compatible con Unicode, pero hacerlo bien requiere disciplina.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's
used by Java, C++, C#, Python, Ruby, and many other languages.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194417Z">
        <seg>Se usa en Java, C++, C#, Python, Ruby y otros muchos lenguajes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's a good idea to put here what the module actually
does in detail, and the user-visible changes since the last release.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T184032Z">
        <seg>Es recomendable incluir en el README una descripción detallada de lo que hace el módulo, así como los cambios visibles para el usuario con respecto a la versión anterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's a good idea to run this on a pod file you've
patched.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T232503Z">
        <seg>Tras aplicar un parche a un archivo pod, es recomendable ejecutar este programa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's a good option for a super minimal
environment and for throwing something together quickly without having
to worry about details.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T105438Z">
        <seg>Es una buena opción para entornos reducidos y para crear un programa rápidamente sin preocuparse de los detalles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's also
very useful for creating skeletons of pure Perl modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T143712Z">
        <seg>También resulta muy útil para crear la estructura inicial de módulos Perl puros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's also a simple rule that works
consistently with C&lt;VAR_NAMES_LIKE_THIS&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T232159Z">
        <seg>Es una regla sencilla que también se aplica C&lt;NOMBRES_DE_VARIABLE_COMO_ESTE&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's an alternative to C&lt;make test&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T144434Z">
        <seg>Es una alternativa a C&lt;make test&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's been around a long
time and is well battle-tested.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T170010Z">
        <seg>Se ha utilizado durante mucho tiempo y está bien probado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's better to pretend that the internal format is some unknown
encoding, and that you always have to encode and decode explicitly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120424T084551Z">
        <seg>Es mejor imaginar que el formato interno es alguna codificación desconocida y acostumbrarse a codificar y descodificar explícitamente siempre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's documented in extravagant detail in L&lt;perlfunc&gt; and L&lt;perlopentut&gt;,
but in short:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T182802Z">
        <seg>Esta función se describe de forma muy detallada en L&lt;perlfunc&gt; y L&lt;perlopentut&gt;. A continuación se muestra un resumen de cómo se usa:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's good that you lost track, because you shouldn't depend on the internal
format being any specific encoding.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T235316Z">
        <seg>Eso es una buena señal, ya que no debe esperar que el formato interno tenga una codificación específica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's important to realize that there are no bytes in a text string.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T200052Z">
        <seg>Es importante comprender que en una cadena de texto no hay bytes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's important to set a few things straight first.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T203509Z">
        <seg>Para empezar es importante aclarar algunas ideas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's just F&lt;perlbug&gt; installed under
another name.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T154258Z">
        <seg>No es más que F&lt;perlbug&gt; instalado con otro nombre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's likely you'll have to add new data types later.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185246Z">
        <seg>Es probable que tenga que agregar nuevos tipos de datos más adelante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's not
focussed solely on Perl, but it does have an active group of users who do
their best to help people with their Perl programming questions.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T093314Z" creationid="explorer" creationdate="20160505T093314Z">
        <seg>No se centra exclusivamente en Perl, pero tiene un grupo activo de usuarios que hacen lo posible por ayudar a personas que tienen dudas sobre programación en Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's possible to have a class that does not expose any publicly
settable attributes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184450Z">
        <seg>Es posible tener una clase donde no pueda modificarse ningún atributo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's probably
best to spend a full day learning all this, but the basics can be learned in
minutes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T213641Z">
        <seg>Probablemente lo mejor sea dedicar un día entero a esta tarea, pero para aprender los conceptos básicos bastan unos pocos minutos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's slow and too clever by far.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T181324Z">
        <seg>Es lenta y hace demasiadas suposiciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's ultimately
up to you (and possibly your management) which tasks you'll use Perl
for and which you won't.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T170622Z">
        <seg>En última instancia, el usuario (y posiblemente sus jefes) deberán decidir para qué tareas pueden usar Perl, y para cuáles no.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's used as the default argument to a number of functions in Perl, and
it's set implicitly by certain looping constructs.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T231450Z">
        <seg>Se usa como argumento predeterminado de varias funciones de Perl y su valor se establece implícitamente en determinadas estructuras de bucle.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's well established that
modern programs need to be capable of communicating funny accented letters, and
things like euro symbols.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T215005Z">
        <seg>Los programas modernos deben poder comunicar caracteres acentuados o símbolos como el del euro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's widely used for everything
from quick "one-liners" to full-scale application development.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110528T173720Z">
        <seg>Se utiliza para todo tipo de desarrollos, desde "programas de una línea" hasta aplicaciones a gran escala.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ithreads work by cloning the data tree so that no data is shared
between different threads.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T172005Z">
        <seg>Los hilos de ejecución de intérprete clonan el árbol de datos de forma que no haya datos compartidos entre distintos hilos de ejecución.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its biggest influence
is the Common Lisp Object System, but it also borrows ideas from
Smalltalk and several other languages.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T164837Z">
        <seg>Su principal influencia es el sistema de orientación a objetos de Common Lisp, pero también toma ideas de Smalltalk y de otros lenguajes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its general-purpose
programming facilities support procedural, functional, and
object-oriented programming paradigms, making Perl a comfortable
language for the long haul on major projects, whatever your bent.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T154055Z" creationid="explorer" creationdate="20150905T152542Z">
        <seg>Sus características de programación de propósito general
son compatibles con los paradigmas de programación procedural, funcional y
orientada a objetos, lo que convierte a Perl en un lenguaje cómodo
para grandes proyectos de larga duración, sea cual sea su paradigma preferido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its major
features are that it's easy to use, supports both procedural and
object-oriented (OO) programming, has powerful built-in support for text
processing, and has one of the world's most impressive collections of
third-party modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T180316Z">
        <seg>Se caracteriza principalmente por su facilidad de uso (permite programar tanto de manera procedural como orientada a objetos (OO)), su magnífica capacidad para procesamiento de texto y por tener una de las colecciones de módulos de terceros más impresionantes del mundo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JAPH stands for "Just another Perl hacker,", which Randal Schwartz used
to sign email and usenet messages starting in the late 1980s.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T183544Z">
        <seg>JAPH significa "Just another Perl hacker". A finales de los ochenta, Randal Schwartz empezó a utilizar esta firma en mensajes de correo electrónico y usenet.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JavaScript is the most
popular language to use another paradigm.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T171655Z">
        <seg>JavaScript es el lenguaje más popular que usa un paradigma diferente;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JavaScript's OO system is
prototype-based.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T171656Z">
        <seg>el sistema de orientación a objetos de JavaScript se basa en prototipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Jon Orwant</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174039Z">
        <seg>Jon Orwant</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Juerd Waalboer &lt;#####@juerd.nl&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172332Z">
        <seg>Juerd Waalboer &lt;#####@juerd.nl&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just "outdent" it a little to make it more visible:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120615T030522Z">
        <seg>Solo tiene que reducir un poco la sangría para que sea más visible:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just as with any Perl subroutine, all of the arguments passed in C&lt;@_&gt;
are aliases to the original argument.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T161107Z">
        <seg>Al igual que cualquier subrutina en Perl, todos los argumentos pasados en C&lt;@_&gt; son alias del argumento original.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just because you I&lt;CAN&gt; do something a particular way doesn't mean that
you I&lt;SHOULD&gt; do it that way.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T104631Z">
        <seg>Que algo se B&lt;pueda&gt; hacer de una determinada manera no significa que se B&lt;deba&gt; hacer de esa manera.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just forget
about it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T122627Z">
        <seg>Olvide que existe.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just like special scalars and arrays, there are also special hashes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T002143Z">
        <seg>De la misma manera que hay escalares y arrays especiales, también hay hashes especiales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Keys that follow the convention
won't conflict with the core's historical keys.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T143255Z">
        <seg>Las claves que sigan la convención no provocarán conflictos con las claves antiguas del núcleo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Kirrily "Skud" Robert &lt;skud@cpan.org&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174318Z">
        <seg>Kirrily "Skud" Robert &lt;skud@cpan.org&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;Class::Accessor&gt; is the polar opposite of C&lt;Moose&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185534Z">
        <seg>L&lt;Class::Accessor&gt; es el polo opuesto a C&lt;Moose&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;DB_File&gt;, L&lt;GDBM_File&gt;, L&lt;NDBM_File&gt;, L&lt;ODBM_File&gt; and L&lt;SDBM_File&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190429Z">
        <seg>L&lt;DB_File&gt;, L&lt;GDBM_File&gt;, L&lt;NDBM_File&gt;, L&lt;ODBM_File&gt; y L&lt;SDBM_File&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;Exporter|Exporter&gt; gives you a standard way of exporting symbols and
subroutines from your module into the caller's namespace.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T142326Z">
        <seg>L&lt;Exporter|Exporter&gt; ofrece una manera estándar de exportar símbolos y subrutinas de su módulo al espacio de nombres del autor de la llamada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;Moose&gt; bills itself as a "postmodern object system for Perl 5".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T102741Z">
        <seg>L&lt;Moose&gt; se presenta como un "sistema postmoderno de orientación a objetos para Perl 5".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;Perl Mongers|http://www.pm.org/&gt; uses the pm.org domain for services
related to local Perl user groups, including the hosting of mailing lists
and web sites.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T192310Z">
        <seg>L&lt;Perl Mongers|http://www.pm.org/&gt; usa el dominio pm.org para ofrecer servicios relacionados con grupos de usuarios de Perl, como el alojamiento de listas de correo y sitios web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;Perl News|http://perlnews.org/&gt; covers some of the major events in the Perl
world, L&lt;Perl Weekly|http://perlweekly.com/&gt; is a weekly e-mail
(and RSS feed) of hand-picked Perl articles.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T192720Z">
        <seg>L&lt;Perl News|http://perlnews.org/&gt; cubre los principales eventos del mundo Perl. L&lt;Perl Weekly|http://perlweekly.com/&gt; es un boletín de correo electrónico (y canal RSS) semanal que incluye artículos sobre Perl seleccionados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;Perl.com|http://www.perl.com/&gt; used to be part of the O'Reilly
Network, a subsidiary of O'Reilly Media.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T183122Z">
        <seg>Anteriormente, Perl.com ( L&lt;http://www.perl.com/&gt; ) formaba parte de O'Reilly Network, una subsidiaria de O'Reilly Media.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;Test::Simple|Test::Simple&gt; and L&lt;Test::More|Test::More&gt; are good
places to start when writing a test suite.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T181602Z">
        <seg>L&lt;Test::Simple|Test::Simple&gt; y L&lt;Test::More|Test::More&gt; son buenos puntos de partida para escribir una batería de pruebas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;http://blogs.perl.org/&gt; hosts many Perl blogs, there are also
several blog aggregators: L&lt;Perlsphere|http://perlsphere.net/&gt; and
L&lt;IronMan|http://ironman.enlightenedperl.org/&gt; are two of them.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T191305Z">
        <seg>L&lt;http://blogs.perl.org/&gt; hospeda muchos blogs sobre Perl. También hay varios agregadores de blogs, como L&lt;Perlsphere|http://perlsphere.net/&gt; o L&lt;IronMan|http://ironman.enlightenedperl.org/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;overload&gt;, L&lt;perlop&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174614Z">
        <seg>L&lt;overload&gt;, L&lt;perlop&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;perldoc|perldoc&gt;, L&lt;pod2man|pod2man&gt;, L&lt;perlpod&gt;,
L&lt;pod2html|pod2html&gt;, L&lt;pod2usage|pod2usage&gt;, L&lt;podselect|podselect&gt;,
L&lt;podchecker|podchecker&gt;, L&lt;splain|splain&gt;, L&lt;perldiag&gt;,
C&lt;roffitall|roffitall&gt;, L&lt;File::Find|File::Find&gt;, L&lt;pl2pm|pl2pm&gt;,
L&lt;perlbug|perlbug&gt;, L&lt;h2ph|h2ph&gt;, L&lt;c2ph|c2ph&gt;, L&lt;h2xs|h2xs&gt;, L&lt;enc2xs&gt;,
L&lt;xsubpp&gt;, L&lt;cpan&gt;, L&lt;instmodsh&gt;, L&lt;piconv&gt;, L&lt;prove&gt;, L&lt;corelist&gt;, L&lt;ptar&gt;,
L&lt;ptardiff&gt;, L&lt;shasum&gt;, L&lt;zipdetails&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T100853Z" creationid="explorer" creationdate="20150905T100853Z">
        <seg>L&lt;perldoc|perldoc&gt;, L&lt;pod2man|pod2man&gt;, L&lt;perlpod&gt;,
L&lt;pod2html|pod2html&gt;, L&lt;pod2usage|pod2usage&gt;, L&lt;podselect|podselect&gt;,
L&lt;podchecker|podchecker&gt;, L&lt;splain|splain&gt;, L&lt;perldiag&gt;,
C&lt;roffitall|roffitall&gt;, L&lt;File::Find|File::Find&gt;, L&lt;pl2pm|pl2pm&gt;,
L&lt;perlbug|perlbug&gt;, L&lt;h2ph|h2ph&gt;, L&lt;c2ph|c2ph&gt;, L&lt;h2xs|h2xs&gt;, L&lt;enc2xs&gt;,
L&lt;xsubpp&gt;, L&lt;cpan&gt;, L&lt;instmodsh&gt;, L&lt;piconv&gt;, L&lt;prove&gt;, L&lt;corelist&gt;, L&lt;ptar&gt;,
L&lt;ptardiff&gt;, L&lt;shasum&gt;, L&lt;zipdetails&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;perlfaq&gt; contains questions and answers related to many common
tasks, and often provides suggestions for good CPAN modules to use.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T004714Z">
        <seg>L&lt;perlfaq&gt; contiene preguntas y respuestas relacionadas con muchas tareas comunes, y en muchos casos sugiere los módulos de CPAN adecuados para cada tarea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;perlmod&gt; describes Perl modules in general.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T183926Z">
        <seg>En L&lt;perlmod&gt; se describen los módulos de Perl en general.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;perlmod&gt;, L&lt;perlmodlib&gt;, L&lt;perlmodinstall&gt;, L&lt;h2xs&gt;, L&lt;strict&gt;,
L&lt;Carp&gt;, L&lt;Exporter&gt;, L&lt;perlpod&gt;, L&lt;Test::Simple&gt;, L&lt;Test::More&gt;
L&lt;ExtUtils::MakeMaker&gt;, L&lt;Module::Build&gt;, L&lt;Module::Starter&gt;
http://www.cpan.org/ , Ken Williams's tutorial on building your own
module at http://mathforum.org/~ken/perl_modules.html</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T214535Z">
        <seg>L&lt;perlmod&gt;, L&lt;perlmodlib&gt;, L&lt;perlmodinstall&gt;, L&lt;h2xs&gt;, L&lt;strict&gt;,
L&lt;Carp&gt;, L&lt;Exporter&gt;, L&lt;perlpod&gt;, L&lt;Test::Simple&gt;, L&lt;Test::More&gt;
L&lt;ExtUtils::MakeMaker&gt;, L&lt;Module::Build&gt;, L&lt;Module::Starter&gt;,
http://www.cpan.org/ , y el tutorial de Ken Williams sobre cómo crear su propio módulo en http://mathforum.org/~ken/perl_modules.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;perlmodlib&gt; lists the
modules which came with your Perl installation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T172026Z">
        <seg>L&lt;perlmodlib&gt; enumera los módulos incluidos en la instalación de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;perlpod&gt;, L&lt;Pod::Perldoc&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190911Z">
        <seg>L&lt;perlpod&gt;, L&lt;Pod::Perldoc&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;perlunicode&gt;, L&lt;perluniintro&gt;, L&lt;Encode&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172338Z">
        <seg>L&lt;perlunicode&gt;, L&lt;perluniintro&gt;, L&lt;Encode&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;perlunifaq&gt;, L&lt;perlunicode&gt;, L&lt;perluniintro&gt;, L&lt;Encode&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125222Z">
        <seg>L&lt;perlunifaq&gt;, L&lt;perlunicode&gt;, L&lt;perluniintro&gt;, L&lt;Encode&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>L&lt;zipdetails&gt; displays information about the internal record structure of the zip file.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T184202Z">
        <seg>L&lt;zipdetails&gt; muestra información sobre la estructura de registros interna de un archivo zip.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Large numbers of other programmers will be using your code modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T174742Z">
        <seg>Muchos programadores van a utilizar sus módulos de código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Larry Wall &lt;larry@wall.org&gt;, with the help of oodles of other folks.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T223437Z">
        <seg>Larry Wall &lt;larry@wall.org&gt;, con la ayuda de muchas personas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Larry has his reasons for each of these things, but he doesn't claim that
everyone else's mind works the same as his does.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T095645Z">
        <seg>Larry tiene sus razones para cada una de estas preferencias, pero no aspira a que la mente de los demás funcione igual que la suya.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Last Updated: Fri, 29 Oct 1999 22:50:30 +0200</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T211229Z">
        <seg>Última actualización: viernes, 29 de octubre de 1999 22:50:30 +0200</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Later, we'll write accessors to manipulate this data.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T184509Z">
        <seg>Más adelante escribiremos métodos de acceso para manipular estos datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Length of the name.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T131506Z">
        <seg>Longitud del nombre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's assume we have two classes, C&lt;Radio&gt; and C&lt;Computer&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T101910Z">
        <seg>Supongamos que tenemos dos clases: C&lt;Radio&gt; y C&lt;Equipo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's look at each of these principles in depth.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T125149Z">
        <seg>Veamos cada uno de estos principios en profundidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's now see how it's done.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T172830Z">
        <seg>Veamos la manera de hacerlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's take a simple patch from start to finish.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T000931Z">
        <seg>Vamos a crear un parche sencillo de principio a fin.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's take an example.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T181249Z">
        <seg>Veamos un ejemplo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's write a real constructor for the C&lt;File&gt; class we used
earlier:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T184322Z">
        <seg>Vamos a escribir un constructor real para la clase C&lt;Archivo&gt; usada previamente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like C&lt;CLONE&gt;, C&lt;CLONE_SKIP&gt; is called once per package; however, it is
called just before cloning starts, and in the context of the parent
thread.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T172709Z">
        <seg>Al igual que en el caso de C&lt;CLONE&gt;, se llama a C&lt;CLONE_SKIP&gt; una vez por paquete; sin embargo, en el caso de esta última, se llama justo antes de que comience la clonación, y en el contexto del hilo de ejecución primario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like C&lt;CLONE&gt;, C&lt;CLONE_SKIP&gt; is currently called with no parameters other
than the invocant package name, although that may change.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T173106Z">
        <seg>Al igual que en el caso de C&lt;CLONE&gt;, el único parámetro usado en las llamadas a C&lt;CLONE_SKIP&gt; es el nombre del paquete que llama, aunque esto podría cambiar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like C&lt;Moose&gt;, C&lt;Class::Accessor&gt; generates accessor methods and a
constructor for your class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104633Z">
        <seg>Al igual que C&lt;Moose&gt;, C&lt;Class::Accessor&gt; genera los métodos de acceso y un constructor para la clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like F&lt;lib/&gt;, this directory contains modules which are only released
as part of the core.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T120451Z" creationid="explorer" creationdate="20150513T120451Z">
        <seg>Al igual que F&lt;lib/&gt;, este directorio contiene módulos que solo se publican
como parte del núcleo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Likely candidates are: "op/stat", "lib/io_pipe",
"lib/io_sock", "lib/io_udp" and "lib/time".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T211245Z">
        <seg>Los candidatos probables son: "op/stat", "lib/io_pipe", "lib/io_sock", "lib/io_udp" y "lib/time".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Likewise the symbol table for the nested
package mentioned earlier is named C&lt;%OUTER::INNER::&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T180040Z">
        <seg>De la misma forma, el nombre de la tabla de símbolos del paquete anidado mencionado previamente sería C&lt;%EXTERIOR::INTERIOR::&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Line numbers
displayed by diagnostics are internally stored as short integers,
so they are limited to a maximum of 65535 (higher numbers usually being
affected by wraparound).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110214T002446Z">
        <seg>Por otra parte, los números de línea especificados por los diagnósticos se almacenan internamente como enteros cortos, por lo que están limitados a un máximo de 65535 (cifras más altas quedarán afectadas por el desbordamiento).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Line up corresponding items vertically.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T132651Z">
        <seg>Alinear elementos correspondientes verticalmente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Line up corresponding things vertically, especially if it'd be too long
to fit on one line anyway.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111013T190721Z">
        <seg>Alinee verticalmente los elementos correspondientes, especialmente si no caben en una sola línea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Line up your transliterations when it makes sense:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T105757Z">
        <seg>Alinee las transliteraciones cuando sea adecuado:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Long lines broken after an operator (except C&lt;and&gt; and C&lt;or&gt;).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T184855Z">
        <seg>A continuación de un operador (excepto C&lt;and&gt; y C&lt;or&gt;), las líneas largas deben dividirse.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Look for
F&lt;.xs&gt; and F&lt;.c&gt; files, which normally denote that the distribution
must be compiled, and you cannot install it "out of the box."
(See L&lt;"PORTABILITY"&gt;.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T010522Z">
        <seg>Vea si contiene archivos F&lt;.xs&gt; y F&lt;.c&gt;, que normalmente indican que no se puede instalar la distribución sin compilarla antes (vea L&lt;"PORTABILIDAD"&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>MARK++;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231226Z">
        <seg>MARK++;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure the newlines for the modules are in Mac format, not Unix format.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T001340Z">
        <seg>Asegúrese de que los saltos de línea de los módulos están en el formato de Mac, no en el de Unix.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure you have MMS (from Digital) or the freeware MMK ( available
from MadGoat at http://www.madgoat.com ).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003249Z">
        <seg>Asegúrese de que dispone de MMS (de Digital) o el software gratuito MMK ( disponible en MadGoat, en http://www.madgoat.com ).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure you have the appropriate permissions to install the module
in your Perl 5 library directory.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000331Z">
        <seg>Asegúrese de que tiene los permisos adecuados para instalar el módulo en el directorio de biblioteca de Perl 5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many cities around the world have local Perl Mongers chapters.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120407T140726Z">
        <seg>En muchas ciudades del mundo hay grupos locales de Perl Mongers.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many good books have been written about Perl--see the section later in
L&lt;perlfaq2&gt; for more details.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T001313Z">
        <seg>Se han escrito muchos libros buenos sobre Perl. Encontrará más información en una sección posterior de L&lt;perlfaq2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many members of the community have a Perl-related blog on this site.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T092130Z" creationid="explorer" creationdate="20160505T092130Z">
        <seg>Muchos miembros de la comunidad tienen un blog sobre Perl en este sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many of the beginner-level books, too, go over basic features and
techniques that are still valid today.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110604T233459Z">
        <seg>Muchos de los libros para principiantes describen características y técnicas básicas que mantienen su vigencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many operators can be combined with a C&lt;=&gt; as follows:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233453Z">
        <seg>Muchos operadores se pueden combinar con un signo C&lt;=&gt; de la manera siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many other more specific chats are also
hosted on the network.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120407T140023Z">
        <seg>Muchos otros sitios de charla más específicos también se encuentran alojados en la red.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many people think that Unicode and UTF-8 are
the same thing, but they're not.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T213953Z">
        <seg>Muchas personas creen que Unicode es lo mismo que UTF-8, pero se equivocan.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mark Kettenis &lt;kettenis@gnu.org&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T211200Z">
        <seg>Mark Kettenis &lt;kettenis@gnu.org&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mathematicians, geneticists, journalists,
managers and many other people also use Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T210153Z">
        <seg>Pero también lo usan matemáticos, expertos en ingeniería genética, periodistas, directivos, y otros profesionales de muchos campos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Method resolution order only matters in the case of multiple
inheritance.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T163006Z">
        <seg>El orden de resolución de métodos solo es interesante en el caso de la herencia múltiple.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods are always written to receive the object as their first
argument:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T124957Z">
        <seg>Los métodos siempre se programan de forma que el primer argumento recibido sea el objeto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Module names are also capitalized unless they're
functioning as pragmas; pragmas are in effect compiler directives,
and are sometimes called "pragmatic modules" (or even "pragmata"
if you're a classicist).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T083941Z">
        <seg>Para los nombres de los módulos se utiliza mayúscula inicial en cada palabra, a no ser que funcionen como pragmas (que en realidad son directivas del compilador, y a veces se denominan "módulos pragmáticos" o incluso "pragmata", si lo suyo es el latín).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modules
which can be released on cpan are known as "dual-life" modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204635Z">
        <seg>Los módulos que se pueden publicar en CPAN se denominan módulos de «evolución dual».</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modules following this convention all play nicely with each other.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T142840Z">
        <seg>Los módulos que sigan esta convención no provocarán conflictos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modules shipped as part of the Perl core live in four subdirectories.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T143358Z">
        <seg>Los módulos distribuidos como parte del núcleo de Perl se encuentran en cuatro subdirectorios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modules under F&lt;dist/&gt; should make
an effort to work with earlier versions of Perl 5.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T120414Z" creationid="explorer" creationdate="20150513T120414Z">
        <seg>Los módulos de F&lt;dist/&gt; deberían poder
trabajar con versiones anteriores de Perl 5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More complex data types can be constructed using references, which allow
you to build lists and hashes within lists and hashes.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Se pueden crear tipos de datos más complejos mediante referencias, que permiten generar listas y hashes dentro de listas y hashes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More detailed information about Perl syntax can be found in L&lt;perlsyn&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233914Z">
        <seg>Encontrará información más detallada sobre la sintaxis de Perl en L&lt;perlsyn&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More information can be found at:
L&lt;http://www.osdc.com.au/&gt; for Australia, L&lt;http://www.osdc.org.il&gt;
for Israel, and L&lt;http://www.osdc.fr/&gt; for France.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T182618Z">
        <seg>Encontrará más información en: L&lt;http://www.osdc.com.au/&gt; (Australia), L&lt;http://www.osdc.org.il&gt; (Israel) y L&lt;http://www.osdc.fr/&gt; (Francia).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most Perl classes use C&lt;new&gt; as the name for
their constructor:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200001Z">
        <seg>La mayoría de las clases Perl usan C&lt;new&gt; como nombre del constructor:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most Perl-related channels will
be kind enough to point you in the right direction if you ask nicely.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120407T140119Z">
        <seg>En la mayoría de los canales vinculados con Perl encontrará gente amistosa que le indicará un camino a seguir, si lo pide amablemente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most Perl-related projects set up mailing lists for both users and
contributors.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120406T150141Z">
        <seg>La mayoría de los proyectos relacionados con Perl tienen configuradas listas de correo para los usuarios y contribuyentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most Unix systems have dynamic linking.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T151305Z">
        <seg>La mayoría de los sistemas Unix disponen de vinculación dinámica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most mailing lists are archived at L&lt;http://nntp.perl.org/&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120402T101458Z">
        <seg>La mayoría de las listas de correo se archivan en L&lt;http://nntp.perl.org/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most methods you write will expect to operate on objects:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T155931Z">
        <seg>La mayoría de los métodos que escriba operarán sobre objetos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most notably, it doesn't support
any sort of attribute declaration, so you have to do that by hand.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T105054Z">
        <seg>En particular, no admite ningún tipo de declaración de atributo, por lo que tendrá que declararlos a mano.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most object systems share a number of common concepts.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195132Z">
        <seg>La mayoría de los sistemas orientados a objetos comparten una serie de conceptos comunes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most of these
are small stand-alone modules, a number of which have been spun off
from C&lt;Moose&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104016Z">
        <seg>La mayoría son módulos independientes, algunos generados a partir de C&lt;Moose&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most of these books are available online through Safari Books Online
( http://safaribooksonline.com/ ).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110427T232213Z">
        <seg>La mayoría de estos libros están disponibles en línea a través de Safari Books Online
( http://safaribooksonline.com/ ).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most other
approaches are doomed to failure.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T191605Z">
        <seg>La probabilidad de éxito de las demás opciones es baja.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most tasks only require a small subset of the Perl language.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T175541Z">
        <seg>La mayoría de las tareas solo requieren conocer un pequeño subconjunto del lenguaje Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most text file processing
can be done a line at a time with Perl's looping constructs.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T182903Z">
        <seg>Gran parte de las tareas de procesamiento de archivos de texto se puede hacer de línea en línea con las estructuras de bucle de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Much older code also uses the L&lt;base&gt; pragma.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T211959Z">
        <seg>En el código realmente antiguo también se usaba el pragma L&lt;base&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multiple inheritance often indicates a design problem, but Perl always
gives you enough rope to hang yourself with if you ask for it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T000613Z">
        <seg>La herencia múltiple suele indicar un problema de diseño, pero Perl siempre le dará cuerda suficiente como para ahorcarse, si es lo que desea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mustn't forget to change the number of tests which appears at the top,
or else the automated tester will get confused.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T160729Z">
        <seg>No hay que olvidarse de actualizar el número de pruebas especificado al principio del código, para que el programa de ejecución automática de pruebas no se confunda.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Name of the MRO, either in ISO-8859-1 or UTF-8.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T220433Z">
        <seg>Nombre del orden de resolución de métodos, codificado en ISO-8859-1 o UTF-8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Needless to say,
heuristics can produce very surprising results!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T160123Z">
        <seg>Huelga decir que la heurística puede producir resultados sorprendentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nested modules (such as C&lt;File::Basename&gt;)
are specified either as C&lt;File::Basename&gt; or C&lt;&lt; File/Basename &gt;&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T195628Z">
        <seg>Los módulos anidados, como C&lt;File::Basename&gt;, se pueden especificar mediante C&lt;File::Basename&gt; o C&lt;&lt; File/Basename &gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nicholas Clark &lt;nick@ccl4.org&gt;, collating wisdom supplied by Slaven Rezic
and Tim Bunce.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T222859Z">
        <seg>Nicholas Clark &lt;nick@ccl4.org&gt;, con aportaciones de Slaven Rezic
y Tim Bunce.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nicholas Clark created the pluggable interface, 
refactored Brandon's implementation to work with it, and wrote this document.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T230038Z">
        <seg>Nicholas Clark creó la interfaz conectable, refactorizó la implementación de Brandon para trabajar con ella y redactó este documento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No hostname given at /usr/local/lib/perl5/site_perl/5.6.0/Net/Acme.pm</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T153007Z">
        <seg>No se ha especificado un nombre de host en /usr/local/lib/perl5/site_perl/5.6.0/Net/Acme.pm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No hostname given at bad_code, line 10.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T190610Z">
        <seg>No se ha especificado ningún nombre de host en programa_deficiente, línea 10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No knowledge of XS is necessary.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T143949Z">
        <seg>Para ello no tiene que saber cómo funciona XS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No one is actively supporting Perl 4.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T190945Z">
        <seg>Actualmente nadie ofrece soporte para Perl 4 de forma activa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No space before the semicolon.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T184732Z">
        <seg>Ningún espacio antes de punto y coma.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No space between function name and its opening parenthesis.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T122815Z">
        <seg>Ningún espacio entre un nombre de función y su paréntesis de apertura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No, Data::Dumper's Unicode abilities are as they should be.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120424T092109Z">
        <seg>No, el procesamiento de Unicode en Data::Dumper es correcto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No, Perl is easy to start L&lt;learning|http://learn.perl.org/&gt; --and easy to keep learning.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T154301Z">
        <seg>No. Es fácil L&lt;adquirir los conocimientos básicos|http://learn.perl.org/&gt;; y también lo es seguir aprendiendo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No, and this isn't really a Unicode FAQ.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T224419Z">
        <seg>No. Y este documento no contiene preguntas y respuestas sobre Unicode.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nobody else on the planet is going to talk your local data format, so we
can ignore that.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T185839Z">
        <seg>Nadie más en el planeta va a comunicarse con su formato de datos local, por lo que podemos ignorar esta parte.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Not every class has attributes and methods.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200428Z">
        <seg>No todas las clases tienen atributos y métodos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Not every event or Perl Mongers group is on that calendar, so don't lose
heart if you don't see yours posted.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T182726Z">
        <seg>No todos los eventos o grupos de Perl Mongers figuran en ese calendario, así que no se desanime si no ve el suyo publicado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Not everything in Perl changes every day.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110526T105111Z">
        <seg>En Perl no todo cambia a diario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note
that the object passed to C&lt;save()&gt; in this case is still a
C&lt;File::MP3&gt; object, even though the method is found in the C&lt;File&gt;
class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162010Z">
        <seg>Observe que el objeto pasado a C&lt;guardar()&gt; en este caso sigue siendo un objeto de la clase C&lt;Archivo::MP3&gt;, pese a que el método se encuentra en la clase C&lt;Archivo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note how we load the user pragma C&lt;myint&gt; with an empty list C&lt;()&gt; to
prevent its C&lt;import&gt; being called.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T232603Z">
        <seg>Cargamos el pragma de usuario C&lt;entero&gt; con una lista vacía C&lt;()&gt; para impedir que se llame a su método C&lt;import&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note however that this is not
"breadth-first" searching: All the C&lt;Father&gt; ancestors (except the
common ancestor) are searched before any of the C&lt;Mother&gt; ancestors are
considered.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T164139Z">
        <seg>Observe que no se trata ya del orden de búsqueda en anchura: todos los antecesores de C&lt;Padre&gt; (excepto los antecesores comunes) se usan en la búsqueda antes de buscar en cualquiera de los antecesores de C&lt;Madre&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that C&lt;END&gt; code blocks are B&lt;not&gt; executed at the end of a string
C&lt;eval()&gt;: if any C&lt;END&gt; code blocks are created in a string C&lt;eval()&gt;,
they will be executed just as any other C&lt;END&gt; code block of that package
in LIFO order just before the interpreter is being exited.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T081223Z">
        <seg>Tenga en cuenta que los bloques de código C&lt;END&gt; B&lt;no&gt; se ejecutan al final de una evaluación C&lt;eval()&gt; de cadena: si se crea un bloque C&lt;END&gt; mediante una función C&lt;eval()&gt; de cadena, se ejecutará como cualquier otro bloque C&lt;END&gt; del mismo paquete en orden LIFO, justo antes de que se produzca la salida del intérprete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that C&lt;blessed($thing)&gt; will also return false if C&lt;$thing&gt; has
been blessed into a class named "0".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T224540Z">
        <seg>Observe que C&lt;blessed($algo)&gt; devolverá falso si se bendijo C&lt;$algo&gt; en una clase llamada "0".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that GNU's gzip/gunzip is not the same as Info-ZIP's zip/unzip
package.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003117Z">
        <seg>Tenga en cuenta que la herramienta gzip/gunzip de GNU no es lo mismo que la herramienta zip/unzip de Info-ZIP.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that function names are considered more readable
with parentheses after their name, that is C&lt;function()&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111015T151802Z">
        <seg>Tenga en cuenta que los nombres de función se consideran más legibles con los paréntesis a continuación: C&lt;funcion()&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that not all modules will work with on all platforms.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003510Z">
        <seg>Tenga en cuenta que no todos los módulos funcionarán en todas las plataformas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that some modules in this directory may not yet have
been released separately on CPAN.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204551Z">
        <seg>Tenga en cuenta que es posible que algunos de los módulos de este directorio aún no se hayan publicado por separado en CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the braces are required in Perl, even if you've only got one
line in the block.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T232125Z">
        <seg>Tenga en cuenta que en Perl es obligatorio usar las llaves, aunque sólo haya una línea en el bloque.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that there's nothing wrong with defining multiple subclasses of a
given class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T162944Z">
        <seg>No hay nada malo en definir múltiples subclases de una clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that this variable was added in Perl 5.14.0.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T184208Z">
        <seg>Esta variable se incorporó en Perl 5.14.0.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note, however, that (unlike most other OO languages) Perl does not
ensure or enforce encapsulation in any way.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T205111Z">
        <seg>Tenga en cuenta, sin embargo, que (al contrario de lo que ocurre en otros lenguajes de orientación a objetos) no se asegura ni se fuerza la encapsulación en modo alguno.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now if we see a C&lt;U&gt; which was at the start of the string, we turn on
the C&lt;UTF8&gt; flag for the output SV, C&lt;cat&gt;:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T153250Z">
        <seg>Ahora bien, si vemos una C&lt;U&gt; al principio de la cadena, activamos la marca C&lt;UTF8&gt; para el SV de salida, C&lt;cat&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now it's barely a skeleton
as its whitewashed bones have fractured or eroded.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T191029Z">
        <seg>Ahora, sus huesos pelados, rotos o erosionados, solo se asemejan vagamente a un esqueleto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now let's look over C&lt;pp_pack&gt;: we take a pattern into C&lt;pat&gt;, and then
loop over the pattern, taking each format character in turn into
C&lt;datum_type&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T153027Z">
        <seg>Echemos un vistazo a C&lt;pp_pack&gt;: tenemos un patrón en C&lt;pat&gt; y un bucle que recorre el patrón y pasa de uno en uno los caracteres de formato a C&lt;datum_type&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we can add our tests
to the end.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T084005Z">
        <seg>Ahora podemos agregar nuestras pruebas al final.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we can use the subroutine just as any other built-in function:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20121113T234036Z">
        <seg>Ahora podemos usar la subrutina como cualquier función predefinida:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we must do two additional things before
this patch is ready to go: we've changed the behaviour of Perl, and so
we must document that change.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T160519Z">
        <seg>Ahora tenemos que hacer dos cosas más para terminar de preparar el parche: hemos cambiado el comportamiento de Perl, por lo que debemos documentar el cambio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we'll test that we got that space-at-the-beginning business right:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T155500Z">
        <seg>Ahora comprobamos que la comprobación de espacio inicial es correcta:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you cannot alter C&lt;$PI&gt;, which is probably a good thing all in all.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T181052Z">
        <seg>Ahora no puede modificar C&lt;$PI&gt;, lo que probablemente no sea mala idea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you're ready to build:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003322Z">
        <seg>Ya está listo para compilar:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, quite a few people have the Acme Transmogrifier, and you've had to
write something to talk the protocol from scratch - you'd almost
certainly want to make that into a module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T185722Z">
        <seg>Hay muchos usuarios de Acme Transmogrifier y ha tenido que partir de cero para escribir el código de comunicación del protocolo. Con toda seguridad, este código podría ser un buen candidato a módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nowadays,
there are several good choices on CPAN for using roles.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T174601Z">
        <seg>Actualmente ya existen varias opciones buenas en CPAN para usar roles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Numbers don't need quotes around them:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233757Z">
        <seg>No es necesario escribir los números entre comillas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>OO Perl is relatively simple and is implemented using references which
know what sort of object they are based on Perl's concept of packages.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T232947Z">
        <seg>La programación orientada a objetos en Perl es relativamente sencilla y se implementa con referencias que "conocen" qué tipo de objeto son, basándose en el concepto de paquetes de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Object Orientation is not the best solution to every problem.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185233Z">
        <seg>La orientación a objetos no es la mejor solución para todos los problemas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objects are
merely Perl data structures (hashes, arrays, scalars, filehandles,
etc.) that have been explicitly associated with a particular class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T125357Z">
        <seg>Los objetos son simplemente estructuras de datos (hashes, arrays, escalares, identificadores de archivos, etc.) que se han asociado explícitamente a una clase concreta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course,
Perl has its internal encoding to store the string in memory, but ignore that.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110403T233817Z">
        <seg>Por supuesto, Perl utiliza su propia codificación para almacenar la cadena en memoria, pero el usuario no tiene que conocer los detalles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, C&lt;Moose&gt; isn't perfect.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T224958Z">
        <seg>Por supuesto, C&lt;Moose&gt; no es perfecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, if the child thread needs
to make use of the objects, then a more sophisticated approach is
needed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T085957Z">
        <seg>Si el hilo derivado tuviera que usar los objetos, sería necesario un enfoque más sofisticado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, if the class name is in a scalar Perl will do the right
thing as well:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T212808Z">
        <seg>Por supuesto, si el nombre de la clase está almacenado en una variable escalar, Perl también hará lo correcto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, it'll need
to be executable first, so C&lt;chmod 755 script.pl&gt; (under Unix).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T180511Z">
        <seg>Por supuesto, antes deberá marcarlo como ejecutable con el comando C&lt;chmod 755 script.pl&gt; (en Unix).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often, you'll need to be root.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T231210Z">
        <seg>Normalmente necesitará privilegios de usuario raíz.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Okay, if you insist: the "internal format" is utf8, not UTF-8.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T003322Z">
        <seg>Bueno, ya que insiste: el "formato interno" es utf8, no UTF-8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Older documentation (and some CPAN modules) encouraged this syntax,
particularly for constructors, so you may still find it in the wild.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T224117Z">
        <seg>Versiones anteriores de la documentación (y algunos módulos de CPAN) recomendaban el uso de esta sintaxis, especialmente para los constructores, de forma que aún pueden encontrarse ejemplos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Older threaded Perls (5.8.6 or earlier)
will run into this problem.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T123532Z">
        <seg>pero afecta a las versiones antiguas (5.8.6 o anteriores) que se hayan compilado con compatibilidad con hilos de ejecución.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Omit redundant punctuation as long as clarity doesn't suffer.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T215159Z">
        <seg>Omitir la puntuación redundante mientras se entienda bien el código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On EBCDIC platforms, this may be different even.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120423T141204Z">
        <seg>En plataformas EBCDIC la codificación puede ser distinta a las mencionadas.</seg>
      </tuv>
    </tu>
    <tu>
      <note>revisar</note>
      <tuv lang="EN-US">
        <seg>On FreeBSD the full path of the perl interpreter is found by using
C&lt;sysctl&gt; with C&lt;KERN_PROC_PATHNAME&gt; if that is supported, else by reading
the symlink F&lt;/proc/curproc/file&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T133425Z">
        <seg>En FreeBSD, la ruta completa del intérprete perl se obtiene mediante C&lt;sysctl&gt; con C&lt;KERN_PROC_PATHNAME&gt;, si se admite; de lo contrario, se puede leer el vínculo simbólico F&lt;/proc/curproc/file&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On a Unix-like system, these documentation files will usually also be
available as manpages for use with the F&lt;man&gt; program.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110214T001235Z">
        <seg>En un sistema Unix, esta documentación estará también disponible, por lo general, en forma de páginas de manual que se pueden consultar con el programa F&lt;man&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On a binary string, you would do things like:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110212T161901Z">
        <seg>Con una cadena binaria puede realizar operaciones como estas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On a text string, you would do things like:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110212T161721Z">
        <seg>Con una cadena de texto puede realizar operaciones como estas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On return, the reference will overwrite the hash slot in the
symbol table specified by the *some_hash typeglob.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T180948Z">
        <seg>Al volver, la referencia reemplazará la ubicación de hash ocupada en la tabla de símbolos especificada por el typeglob *mi_hash.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On the other hand</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T173133Z">
        <seg>Por otra parte,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On typical hardware, floating
point values can store numbers with up to 53 binary digits, and with binary
exponents between -1024 and 1024.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T192712Z">
        <seg>En el hardware típico, los valores de punto flotante pueden almacenar números que tengan hasta 53 dígitos binarios, y con exponentes binarios entre -1024 y 1024.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once
those changes are applied and released, the new version of the module
will be incorporated into the core.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204527Z">
        <seg>Cuando se hayan aplicado y publicado estos cambios, la nueva versión del módulo se incorporará al núcleo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once a C&lt;BEGIN&gt; has run, it is immediately undefined and any
code it used is returned to Perl's memory pool.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T113611Z">
        <seg>Una vez ejecutado el bloque C&lt;BEGIN&gt;, pasa a estar no definido y el código usado se devuelve al banco de memoria de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once a referent has been blessed, the C&lt;blessed&gt; function from the
L&lt;Scalar::Util&gt; core module can tell us its class name.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195928Z">
        <seg>Una vez que un referente ha sido bendecido, la función C&lt;blessed&gt; del módulo
L&lt;Scalar::Util&gt; indicará el nombre de la clase asociada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once again, C&lt;module-starter&gt; or C&lt;h2xs&gt; has done all the work for you.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T183334Z">
        <seg>Una vez más, C&lt;module-starter&gt; (o C&lt;h2xs&gt;) se encarga de todo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once registered, your module will appear in the
by-module and by-category listings on CPAN.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T184359Z">
        <seg>Una vez registrado, el módulo figurará en las listas I&lt;by-module&gt; y I&lt;by-category&gt; de CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once uploaded, it'll sit unnoticed in your author directory.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T213907Z">
        <seg>Una vez subido, el módulo se alojará en su directorio de autor sin hacer ruido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once we've blessed the hash referred to by C&lt;$self&gt; we can start
calling methods on it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120726T094644Z">
        <seg>Una vez bendecido el hash al que hace referencia C&lt;$self&gt;, puede empezar a utilizarse para hacer llamadas a métodos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you have an open filehandle, you can call
methods on it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211748Z">
        <seg>Una vez abierto un identificador de archivo, puede usarlo para llamar a métodos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you start accumulating users, they'll send you bug reports.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T183805Z">
        <seg>Cuando empiece a acumular usuarios, también empezará a recibir informes de error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you're done here, check out L&lt;perlhacktips&gt; next.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T001811Z">
        <seg>Por último, consulte L&lt;perlhacktips&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you've ensured that your module passes its own tests - always a
good thing to make sure - you can C&lt;make dist&gt;, and the Makefile will
hopefully produce you a nice tarball of your module, ready for upload.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T184244Z">
        <seg>Cuando se haya asegurado de que el módulo supera todas las pruebas (algo que siempre es recomendable), puede ejecutar C&lt;make dist&gt; para que Makefile produzca un paquete tar del módulo, listo para enviarlo a CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One can
also use the B&lt;-w&gt; flag, but its use is normally discouraged, because
it gets applied to all executed Perl code, including that not under
your control.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T145909Z" creationid="explorer" creationdate="20150905T145909Z">
        <seg>También se puede
usar la marca B&lt;-w&gt;, pero esto no se recomienda, ya que
se aplica a todo el código Perl ejecutado, incluido el que no está bajo
su control.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One good reason is when you already have an existing
application written in another language that's all done (and done
well), or you have an application language specifically designed for a
certain task (e.g. prolog, make).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T153952Z">
        <seg>Una buena razón es tener una aplicación escrita en otro lenguaje que funciona bien y está bien programada, o disponer de un lenguaje para aplicaciones diseñado específicamente para una tarea determinada (como prolog o make).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of
the guiding mottos for Perl development is "there's more than one way
to do it" (TMTOWTDI, sometimes pronounced "tim toady").</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T175605Z">
        <seg>Uno de los lemas que guían el desarrollo de Perl es "se puede hacer de varias maneras", que es la traducción de "there's more than one way to do it" (o TMTOWTDI, que en inglés se pronuncia como "tim toady").</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of C&lt;Moo&gt;'s most compelling features is its interoperability with
C&lt;Moose&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T123105Z" creationid="explorer" creationdate="20150905T123105Z">
        <seg>Una de las características más atractivas de C&lt;Moo&gt; es su interoperabilidad con
C&lt;Moose&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of Perl's internal formats happens to be UTF-8.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120424T093611Z">
        <seg>Resulta que uno de los formatos internos de Perl es UTF-8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the things that makes Perl really powerful is the fact that Perl
hackers tend to want to share the solutions to problems they've faced,
so you and I don't have to battle with the same problem again.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T215247Z">
        <seg>Uno de los factores que hacen que Perl sea una herramienta realmente eficaz es el hecho de que los hackers que usan este lenguaje suelen compartir el código que desarrollan al solucionar problemas para que sus camaradas no tengan que enfrentarse a esos mismos problemas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One should note
that these code blocks don't really exist as named subroutines (despite
their appearance).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T113303Z">
        <seg>Debe tenerse en cuenta que estos bloques de código no existen realmente como subrutinas con nombres, aunque así lo parezca.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One simple way to check that things are in the right place is to print out
the hard-coded C&lt;@INC&gt; that perl looks through for libraries:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T181620Z">
        <seg>Una manera sencilla de comprobar que todo está en su sitio es imprimir en pantalla la variable C&lt;@INC&gt; incrustada en el programa, en la que perl busca las bibliotecas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One useful value for C&lt;PERLDOC_PAGER&gt; is C&lt;less -+C -E&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110808T214441Z">
        <seg>Un valor útil para C&lt;PERLDOC_PAGER&gt; es C&lt;less -+C -E&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One-line BLOCK may be put on one line, including curlies.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T184549Z">
        <seg>Un BLOQUE de una línea puede colocarse en una sola línea, llaves incluidas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only identifiers starting with letters (or underscore) are stored
in a package's symbol table.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T111259Z">
        <seg>En la tabla de símbolos de un paquete sólo se almacenarán los identificadores que comiencen por letras (o guiones bajos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only the "P" is capitalized.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T192851Z">
        <seg>Solo se escribe la "P" inicial en mayúsculas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Oops, we forgot one thing: what if there are spaces at the start of the
pattern?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T002240Z">
        <seg>Vaya, nos olvidamos de una cosa: ¿qué pasa si hay espacios al principio del patrón?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Opening curly on same line as keyword, if possible, otherwise line up.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T184515Z">
        <seg>Llave de apertura en la misma línea que la palabra reservada, si es posible; si no, alineada en vertical con ella.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operator
overloading allows user-defined behaviors for numbers, such as operations
over arbitrarily large integers, floating points numbers with arbitrary
precision, operations over "exotic" numbers such as modular arithmetic or
p-adic arithmetic, and so on.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T195056Z">
        <seg>que permite establecer comportamientos definidos por el usuario para números, como operaciones con enteros arbitrariamente grandes, números de punto flotante de precisión arbitraria, operaciones con números "exóticos" (como la aritmética modular o la aritmética de números p-ádicos), etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operators such as C&lt;**&gt;, C&lt;sin&gt; and C&lt;exp&gt; force arguments to floating point
format.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T193256Z">
        <seg>Algunos operadores, como C&lt;**&gt;, C&lt;sin&gt; y C&lt;exp&gt;, fuerzan la conversión de los argumentos al formato de punto flotante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or if you already have an open filehandle:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T122417Z">
        <seg>O bien, si ya tiene un identificador de archivo abierto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or it can do a little of both.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T083144Z">
        <seg>También se pueden combinar ambos mecanismos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or, if you're fond of VMS command syntax:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003212Z">
        <seg>O bien, si es aficionado a la sintaxis de comandos VMS:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or, if you're lazy, just:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T223146Z">
        <seg>Si no le sobra energía, puede limitarse a escribir esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or, you can combine this step with the next to save disk space:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T184519Z">
        <seg>O bien, puede combinar este paso con el siguiente para ahorrar espacio en disco:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ordinary code runs at runtime.\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T163656Z">
        <seg>El código normal se ejecuta en tiempo de ejecución.\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other modules should begin with a capital letter and use mixed
case, but probably without underscores due to limitations in primitive
file systems' representations of module names as files that must fit into a
few sparse bytes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T111114Z">
        <seg>Los nombres de los demás módulos deben empezar por una letra mayúscula y usar luego una mezcla de mayúsculas y minúsculas, pero preferiblemente sin guiones bajos (por limitaciones en sistemas de archivos primitivos para la representación de nombres de módulos como archivos que deben ajustarse a unos pocos bytes dispersos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other people picked up on this and started to write clever or obfuscated
programs to produce the same output, spinning things quickly out of
control while still providing hours of amusement for their creators and
readers.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T183720Z">
        <seg>Otras personas adoptaron esta tendencia y empezaron a escribir programas astutos o enrevesados para producir el mismo resultado, y se descontroló el asunto, lo que proporcionó grandes momentos de diversión a sus creadores y lectores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other places to ask questions are on the
L&lt;PerlMonks site|http://www.perlmonks.org/&gt; or
L&lt;stackoverflow|http://stackoverflow.com/questions/tagged/perl&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T190614Z">
        <seg>Otros lugares en los que puede hacer consultas son el
L&lt;sitio de PerlMonks|http://www.perlmonks.org/&gt; y L&lt;stackoverflow|http://stackoverflow.com/questions/tagged/perl&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise arguments are
converted to floating point format and the floating point result is used.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T194652Z">
        <seg>De lo contrario, los argumentos se convierten al formato de punto flotante y se usa el resultado de punto flotante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise if you really do want to build Perl, you need to get a
binary version of C&lt;gcc&gt; for your system first.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T182903Z">
        <seg>Si prefiere compilar Perl, lo primero que debe hacer es obtener una versión binaria de C&lt;gcc&gt; para su sistema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise use a C&lt;foreach()&gt; loop or
the C&lt;system()&gt; function instead.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T223610Z">
        <seg>Como alternativa, use un bucle C&lt;foreach()&gt; o la función C&lt;system()&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, you'll have to follow the
steps below.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000455Z">
        <seg>De lo contrario, tendrá que realizar los pasos siguientes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Our constructor and accessors are not very smart.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T222317Z">
        <seg>Ni el constructor ni los métodos de acceso del ejemplo anterior son muy sólidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Our new
tests pass, hooray!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T155653Z">
        <seg>¡Pruebas nuevas superadas! ¡Viva!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Over the years, Perl has grown into
a general-purpose programming language.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T095131Z">
        <seg>Con los años, Perl se ha convertido en un lenguaje de programación de propósito general.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Over the years, many people have developed systems
which build on top of Perl's built-in system to provide more features
and convenience.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T174806Z">
        <seg>A lo largo de los años, muchas personas han desarrollado sistemas basados en el sistema predefinido de Perl para proporcionar más características y facilidades.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Package names are sometimes an exception to this rule.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T101701Z">
        <seg>A veces los nombres de los módulos son una excepción a esta regla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Package-&gt;VERSION(1.2);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T225330Z">
        <seg>Paquete-&gt;VERSION(1.2);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Packages may themselves contain package separators, as in
C&lt;$OUTER::INNER::var&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T135637Z">
        <seg>Los paquetes también pueden contener separadores, como en C&lt;$EXTERIOR::INTERIOR::var&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PageName|ModuleName|ProgramName|URL</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T195331Z">
        <seg>NombrePágina|NombreMódulo|NombrePrograma|DirecciónURL</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parent</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T163031Z">
        <seg>Padre</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Past contributors are:
brian d foy C&lt;&lt; &lt;bdfoy@cpan.org&gt; &gt;&gt; 
Adriano R. Ferreira C&lt;&lt; &lt;ferreira@cpan.org&gt; &gt;&gt;,
Sean M. Burke C&lt;&lt; &lt;sburke@cpan.org&gt; &gt;&gt;,
Kenneth Albanowski C&lt;&lt; &lt;kjahds@kjahds.com&gt; &gt;&gt;,
Andy Dougherty  C&lt;&lt; &lt;doughera@lafcol.lafayette.edu&gt; &gt;&gt;,
and many others.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T220016Z">
        <seg>Anteriormente contribuyeron a este documento: brian d foy C&lt;&lt; &lt;bdfoy@cpan.org&gt; &gt;&gt;, Adriano R. Ferreira C&lt;&lt; &lt;ferreira@cpan.org&gt; &gt;&gt;, Sean M. Burke C&lt;&lt; &lt;sburke@cpan.org&gt; &gt;&gt;, Kenneth Albanowski C&lt;&lt; &lt;kjahds@kjahds.com&gt; &gt;&gt;, Andy Dougherty C&lt;&lt; &lt;doughera@lafcol.lafayette.edu&gt; &gt;&gt; y muchos otros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PaternalGrandparent       MaternalGrandparent</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160301Z" creationid="explorer" creationdate="20150905T160301Z">
        <seg>AbueloPaterno             AbueloMaterno</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Paul Marquess</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190203Z">
        <seg>Paul Marquess</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perhaps you could move them?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T192925Z">
        <seg>¿Se anima a moverlas?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl 5 is the older
sibling, and though they are different languages, someone who knows one will
spot many similarities in the other.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T153328Z">
        <seg>Perl 5 es el hermano mayor de Perl 6 y, aunque son lenguajes distintos, quien conozca uno de estos lenguajes observará muchas similitudes en el otro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl 6 development also has a
presence in L&lt;irc://irc.freenode.net/#perl6&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120402T102156Z">
        <seg>El desarrollo de Perl 6 también tiene presencia en L&lt;irc://irc.freenode.net/#perl6&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl 6 has proven to be a fascinating source of ideas for those
using Perl 5 (the L&lt;Moose&gt; object system is a well-known example).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T203626Z">
        <seg>Perl 6 ha resultado ser una fuente de ideas fascinante para los usuarios de Perl 5 (el sistema de objetos L&lt;Moose&gt; es un ejemplo bien conocido).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl 6 is
not meant to replace Perl 5, and vice versa.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T153546Z">
        <seg>Perl 6 no sustituye a Perl 5, y viceversa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl 6 is a reinvention of Perl, it is a language in the same lineage but
not compatible.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T153357Z">
        <seg>Perl 6 es una reinvención de Perl. Es un lenguaje del mismo linaje, pero incompatible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl 6 was I&lt;originally&gt; described as the community's rewrite of Perl 5.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T153645Z">
        <seg>Perl 6 se describió I&lt;originalmente&gt; como la reescritura de Perl 5 hecha por la comunidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl I&lt;does&gt; provide special syntax for method invocation, the C&lt;&lt; -&gt;
&gt;&gt; operator.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T155919Z">
        <seg>Perl I&lt;ofrece&gt; una sintaxis especial para la llamada a métodos: el operador C&lt;&lt; -&gt;
&gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl I&lt;only&gt; provides method inheritance as a built-in feature.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T212133Z">
        <seg>Perl I&lt;sólo&gt; proporciona herencia de métodos como una característica propia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl Mongers?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T102328Z">
        <seg>¿Y Perl Mongers?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl actually stands for Pathologically Eclectic Rubbish Lister, but
don't tell anyone I said that.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T210339Z">
        <seg>En realidad Perl significa I&lt;Pathologically Eclectic Rubbish Lister&gt; (Presentador de basura patológicamente ecléctico), pero nadie debe enterarse de esto :-).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl after 5.8.0 has support for the C&lt;CLONE&gt;
special subroutine.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T142029Z" creationid="explorer" creationdate="20150905T141205Z">
        <seg>Desde la versión 5.8.0 de Perl se incluye la subrutina especial C&lt;CLONE&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl after 5.8.7 has support for the C&lt;CLONE_SKIP&gt; special subroutine.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T121320Z">
        <seg>En la versión 5.8.7 de Perl se incluyó la subrutina especial C&lt;CLONE_SKIP&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl allows multiple inheritance, which means that a class can inherit
from multiple parents.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T085228Z">
        <seg>Perl permite la herencia múltiple: una clase puede heredar de múltiples clases primarias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl already I&lt;is&gt; commercial software: it has a license
that you can grab and carefully read to your manager.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211511Z">
        <seg>Perl I&lt;es&gt; software comercial: tiene una licencia que su jefe puede analizar minuciosamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl also lets you use a dereferenced scalar reference in a method
call.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211611Z">
        <seg>Perl también permite usar la desreferencia de una referencia escalar en la llamada a un método.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl also lets you use a scalar containing a string as a class name:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T222721Z">
        <seg>Perl también permite usar una variable escalar que contiene el nombre de una clase:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl builds and runs on a bewildering number of platforms.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T101803Z">
        <seg>Perl se puede compilar y ejecutar en una gran variedad de plataformas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl by default is very forgiving.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T000941Z">
        <seg>Por su diseño, Perl es un lenguaje muy indulgente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl can be used for almost any coding problem, even ones which require
integrating specialist C code for extra speed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T153759Z">
        <seg>Perl se puede usar para solucionar prácticamente cualquier problema de programación, incluso los que requieren integrar código C especializado para aumentar la velocidad de ejecución.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl can internally represent numbers in 3 different ways: as native
integers, as native floating point numbers, and as decimal strings.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T195112Z">
        <seg>Perl puede representar los números internamente de 3 maneras distintas: como enteros nativos, como números de punto flotante nativos y como cadenas decimales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl comes with a wide selection of builtin functions.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T122816Z">
        <seg>Perl incluye una amplia selección de funciones y operadores predefinidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl converts between these automatically.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T171748Z">
        <seg>Perl realiza la conversión entre estas codificaciones automáticamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl derives from the ubiquitous C programming language and to a
lesser extent from sed, awk, the Unix shell, and many other tools
and languages.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T112652Z">
        <seg>Perl desciende del extendido lenguaje de programación C y, en menor medida, de sed, awk, la shell de Unix, y de muchos otros lenguajes y herramientas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl does not have any built-in way to express roles.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20121113T234905Z">
        <seg>Perl no dispone de ningún mecanismo predefinido para expresar roles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl does not provide any special syntax for class definitions.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083417Z">
        <seg>Perl no proporciona una sintaxis especial para definir clases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl does not provide any special syntax for defining a method.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T155848Z">
        <seg>Perl no proporciona ninguna sintaxis especial para la definición de métodos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl has an B&lt;internal format&gt;, an encoding that it uses to encode text strings
so it can store them in memory.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T220626Z">
        <seg>Perl utiliza un B&lt;formato interno&gt;, que es una codificación con la que se codifican las cadenas de texto para almacenarlas en memoria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl has an abstracted interface for all supported character encodings, so this
is actually a generic C&lt;Encode&gt; tutorial and C&lt;Encode&gt; FAQ.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T001114Z">
        <seg>Perl incluye una interfaz que abstrae todas las codificaciones de caracteres compatibles; este documento es en realidad un tutorial genérico de C&lt;Encode&gt; con las preguntas más frecuentes sobre C&lt;Encode&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl has many strengths, and a few weaknesses,
precisely which areas are good and bad is often a personal choice.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T203217Z">
        <seg>Perl tiene muchos puntos fuertes y algunos puntos débiles. Los aspectos en los que es bueno o malo suelen ser una opción personal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl has most of the usual conditional and looping constructs.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234722Z">
        <seg>Perl ofrece las estructuras condiciones y de bucle habituales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl has no special syntax for attributes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200350Z">
        <seg>Perl no dispone de una sintaxis especial para los atributos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl has three main variable types: scalars, arrays, and hashes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T115532Z">
        <seg>En Perl hay tres tipos de variables principales: escalares, arrays y hashes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl has two major annual conventions: The Perl Conference (now part of OSCON),
put on by O'Reilly, and Yet Another Perl Conference or YAPC (pronounced
yap-see), which is localized into several regional YAPCs (North America,
Europe, Asia) in a stunning grassroots display by the Perl community.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T212821Z">
        <seg>Hay dos importantes congresos anuales sobre Perl: la Conferencia Perl (que ahora forma parte de OSCON), organizada por O'Reilly, y la YAPC (pronunciado yap-si, que significa Yet Another Perl Conference), que se celebra en varias conferencias YAPC regionales (Norteamérica, Europa, Asia) y constituye una impresionante demostración de la comunidad Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl informally
reserves lowercase module names for "pragma" modules like C&lt;integer&gt; and
C&lt;strict&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T232314Z">
        <seg>De manera informal, Perl reserva los nombres de módulo en minúsculas para los módulos de tipo "pragma", como C&lt;integer&gt; y C&lt;strict&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl is a general-purpose programming language originally developed for
text manipulation and now used for a wide range of tasks including
system administration, web development, network programming, GUI
development, and more.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T153221Z">
        <seg>Perl es un lenguaje de programación de propósito general desarrollado originalmente para la manipulación de texto y que, en la actualidad, se usa para una amplia gama de tareas, como administración de sistemas, desarrollo web, programación de red, desarrollo de interfaces gráficas de usuario, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl is a high-level programming language with an eclectic heritage
written by Larry Wall and a cast of thousands.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110227T183512Z">
        <seg>Perl es un lenguaje de programación de alto nivel con una herencia ecléctica, creado por Larry Wall con la ayuda de miles de programadores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl is at the mercy of your machine's definitions of various
operations such as type casting, atof(), and floating-point
output with sprintf().</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110214T002255Z">
        <seg>Perl depende de las definiciones de hardware para diversas operaciones, como la conversión de tipos, atof() o la salida de números de punto flotante con sprintf().</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl is available for most operating systems, including virtually
all Unix-like platforms.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T233002Z">
        <seg>Perl está disponible para la mayoría de los sistemas operativos (incluidas prácticamente todas las plataformas Unix).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl is designed to give you several
ways to do anything, so consider picking the most readable one.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T095827Z">
        <seg>Perl se diseñó para ofrecer varias maneras de hacer casi todo; seguramente le interese elegir la más legible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl is flexible and extensible enough for you to use on virtually any
task, from one-line file-processing tasks to large, elaborate systems.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T190039Z">
        <seg>Por su flexibilidad y capacidad de ampliación, Perl se puede usar prácticamente para cualquier tarea, desde el procesamiento de archivos en una línea hasta el desarrollo de sistemas grandes y complejos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl is not produced nor maintained by the
Free Software Foundation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T175335Z">
        <seg>La Free Software Foundation no tiene nada que ver con el desarrollo y el mantenimiento de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl is supported by its users.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110330T081121Z">
        <seg>El soporte de Perl lo ofrecen sus usuarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl knows how it stored the string internally, and will use that knowledge
when you C&lt;encode&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110222T085244Z">
        <seg>Perl sabe cómo se ha almacenado la cadena internamente, y usará ese conocimiento al codificar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl knows what package the method is in by looking at the left side of
the arrow.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T212743Z">
        <seg>Perl mira lo que hay a la izquierda del operador flecha para determinar a qué paquete pertenece el método.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl lets you use a scalar variable containing a string as a method
name:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T222506Z">
        <seg>Perl permite usar como nombre de un método una variable escalar que contiene una cadena:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl modules always have a F&lt;.pm&gt; file, but there may also be
dynamically linked executables (often ending in F&lt;.so&gt;) or autoloaded
subroutine definitions (often ending in F&lt;.al&gt;) associated with the
module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T120957Z">
        <seg>Los módulos Perl siempre tienen un archivo F&lt;.pm&gt;, pero podrían tener asociados otros ejecutables vinculados dinámicamente (normalmente con la extensión F&lt;.so&gt;) o definiciones de subrutinas cargadas automáticamente (normalmente con extensión F&lt;.al&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl modules are included into your program by saying</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165845Z">
        <seg>Para incluir un módulo Perl en un programa, escriba</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl modules included on CPAN have a naming hierarchy you should try to
fit in with.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T173106Z">
        <seg>Los módulos Perl incluidos en CPAN tienen una jerarquía de nomenclatura; procure respetarla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl modules provide a range of features to help you avoid reinventing
the wheel, and can be downloaded from CPAN ( http://www.cpan.org/ ).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T004517Z">
        <seg>No pierda tiempo reinventando la rueda. Los módulos de Perl disponibles en CPAN ( http://www.cpan.org/) proporcionan funcionalidad que puede utilizar en sus programas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl officially stands for Practical Extraction and Report Language,
except when it doesn't.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110528T173706Z">
        <seg>Oficialmente, Perl significa Practical Extraction and Report Language (I&lt;Lenguaje práctico para la extracción de datos y creación de informes&gt;), salvo cuando no se usa para eso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl operations which take a numeric argument treat that argument in one
of four different ways: they may force it to one of the integer/floating/
string formats, or they may behave differently depending on the format of
the operand.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T192953Z">
        <seg>En Perl, las operaciones que consumen un argumento numérico tratan al argumento de una de cuatro maneras posibles: pueden forzar la conversión a uno de los formatos de entero/número de punto flotante/cadena, o pueden comportarse de una manera diferente en función del formato del operando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl operators are documented in full in L&lt;perlop&gt;, but here are a few
of the most common ones:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T224901Z">
        <seg>Encontrará información detallada sobre los operadores de Perl en L&lt;perlop&gt;; algunos de los más comunes son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl packages may be nested inside other package names, so we can have
package names containing C&lt;::&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T171044Z">
        <seg>Los paquetes Perl pueden anidarse dentro de otros nombres de paquete, por lo que los nombres de paquete pueden contener C&lt;::&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl provides a mechanism for alternative namespaces to protect
packages from stomping on each other's variables.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T173809Z">
        <seg>Perl proporciona un mecanismo de espacios de nombres alternativos que evita colisiones entre variables de distintos paquetes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl regexps also support backreferences, lookaheads, and all kinds of
other complex details.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T223159Z">
        <seg>Las expresiones regulares de Perl también ofrecen referencias a capturas previas, inspección hacia adelante, y muchas otras funcionalidades complejas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl runs on e-mail; there is no doubt about it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T183120Z">
        <seg>No cabe duda de que el desarrollo de Perl se basa en gran medida en el correo electrónico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl statements end in a semi-colon:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T180809Z">
        <seg>Las instrucciones de Perl deben terminar con un signo de punto y coma:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl supports a type of threads called interpreter threads (ithreads).</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T141053Z" creationid="explorer" creationdate="20150905T141053Z">
        <seg>Perl ofrece un tipo de hilos de ejecución denominados hilos de ejecución de intérprete (ithreads).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl supports another method invocation syntax called "indirect object"
notation.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160607Z" creationid="explorer" creationdate="20150905T160607Z">
        <seg>Perl admite otra sintaxis para las llamadas a métodos, denominada notación "indirecta de objeto".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl supports several other ways to call methods besides the C&lt;&lt;
$object-&gt;method() &gt;&gt; usage we've seen so far.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T210823Z">
        <seg>Perl admite varias formas de llamar a los métodos, además de la que ya hemos usado, C&lt;&lt; $objeto-&gt;metodo() &gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl tries to be all things
to all people, but nothing special to anyone.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T182450Z">
        <seg>Perl trata de cubrir todas las necesidades, en lugar de limitarse a fines específicos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl was originally a language optimized for scanning arbitrary
text files, extracting information from those text files, and printing
reports based on that information.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110526T100716Z">
        <seg>Perl se creó como un lenguaje optimizado para procesar archivos de texto, a fin de extraer información y utilizarla para generar informes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl websites come in a variety of forms, but they fit into two large
categories: forums and news websites.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T162312Z">
        <seg>Los sitios web sobre Perl son de diversos tipos, pero se engloban en dos grandes categorías: foros y sitios de noticias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl will always interpret this as a method call.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T212728Z">
        <seg>Perl siempre interpretará esto como una llamada a un método.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl workshops are, as the name might suggest, workshops where Perl is taught
in a variety of ways.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T181129Z">
        <seg>Los talleres ("workshops") de Perl son, como su nombre indica, eventos en los que se enseña Perl de varias maneras.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl's
learning curve is therefore shallow (easy to learn) and long (there's
a whole lot you can do if you really want).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110223T112601Z">
        <seg>Así, la curva de aprendizaje de Perl tiene una pendiente suave (es fácil de aprender) y larga (si desea seguir profundizando, puede aprender a hacer muchas cosas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl's OO system is class-based.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T123003Z">
        <seg>El sistema de orientación a objetos de Perl se basa en clases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl's built-in introspection features are fairly minimal.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T103520Z">
        <seg>Las características de introspección predefinidas son mínimas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl's licensing terms are also more open
than GNU software's tend to be.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110402T102459Z">
        <seg>Los términos de la licencia de Perl también son más flexibles en general que los de las licencias de software GNU.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl's operator overloading facility is completely ignored here.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T194943Z">
        <seg>Se omite completamente la funcionalidad de sobrecarga de operadores de Perl,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl's packages, namespaces, and some info on classes.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T140134Z" creationid="explorer" creationdate="20150905T140134Z">
        <seg>Paquetes de Perl, espacios de nombres e información sobre clases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl's process, file, and text manipulation facilities make it
particularly well-suited for tasks involving quick prototyping, system
utilities, software tools, system management tasks, database access,
graphical programming, networking, and web programming.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T210219Z">
        <seg>Las características de manipulación de texto, archivos y procesos que ofrece Perl lo convierten en un lenguaje especialmente adecuado para tareas que requieren crear rápidamente prototipos, utilidades del sistema, herramientas de software, tareas de administración de sistemas, acceso a bases de datos, programación gráfica, conexión a redes y programación web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl's regular expression support is both broad and deep, and is the
subject of lengthy documentation in L&lt;perlrequick&gt;, L&lt;perlretut&gt;, and
elsewhere.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T003733Z">
        <seg>El soporte de Perl para las expresiones regulares es amplio y profundo, y se describe en gran detalle en los documentos L&lt;perlrequick&gt; y L&lt;perlretut&gt;, entre otros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl's roots in text processing haven't been forgotten over the years.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T152753Z" creationid="explorer" creationdate="20150905T152753Z">
        <seg>Las raíces de Perl como lenguaje de procesamiento de texto siguen siendo muy fuertes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PerlMonks is one of the largest Perl forums, and describes itself as "A place
for individuals to polish, improve, and showcase their Perl skills." and "A
community which allows everyone to grow and learn from each other."</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T183405Z">
        <seg>PerlMonks es uno de los mayores foros de Perl, y se describe como "Un lugar que permite a los individuos pulir, mejorar y demostrar sus conocimientos de Perl" o como "Una comunidad que ayuda a que todos mejoren y aprendan unos de otros".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl_mro_register(aTHX_ &amp;my_mro_alg);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T225702Z">
        <seg>Perl_mro_register(aTHX_ &amp;mi_alg_mro);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl_mro_set_private_data(aTHX_ meta, &amp;c3_alg, private_sv);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T215414Z">
        <seg>Perl_mro_set_private_data(aTHX_ meta, &amp;alg_c3, private_sv);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perldoc can
also take you directly to documentation for functions (with the B&lt;-f&gt;
switch).</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T145123Z" creationid="explorer" creationdate="20150905T145123Z">
        <seg>Perldoc también puede
mostrarle directamente la documentación de las funciones (con el modificador B&lt;-f&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Platform-specific pieces of the build system also live in
platform-specific directories like F&lt;win32/&gt;, F&lt;vms/&gt;, etc.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204210Z">
        <seg>Las partes del sistema de compilación que son específicas de la plataforma se encuentran en directorios específicos de plataforma, como F&lt;win32/&gt;, F&lt;vms/&gt;, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please
don't send me mail asking for help on how to install your modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T011742Z">
        <seg>No deseo recibir mensajes de petición de ayuda para instalar módulos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please keep in mind that many
of them are code fragments rather than complete programs.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110529T142256Z">
        <seg>Tenga en cuenta que muchos de estos ejemplos son fragmentos de código, no programas completos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please report any errors, updates, or suggestions to F&lt;perlbug@perl.org&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T093412Z">
        <seg>Para notificar errores, actualizaciones o sugerencias, utilice la dirección F&lt;perlbug@perl.org&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please see L&lt;http://rakudo.org/&gt; for more information.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120527T130803Z">
        <seg>Encontrará más información en L&lt;http://rakudo.org/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please see its README
file in L&lt;http://perl5.git.perl.org/metaconfig.git/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204042Z">
        <seg>Consulte el archivo README (en L&lt;http://perl5.git.perl.org/metaconfig.git/&gt;) para obtener información detallada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please, unless you're hacking the internals, or debugging weirdness, don't
think about the UTF8 flag at all.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120424T094153Z">
        <seg>A menos que tenga que trabajar con los componentes internos o depurar cosas extrañas, olvídese de la marca UTF8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Pointer to the linearisation function, described below.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T224010Z">
        <seg>Puntero a la función de linealización, que se describe a continuación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Polymorphism is one of the key concepts of object-oriented design.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T084912Z">
        <seg>El polimorfismo es uno de los conceptos clave del diseño orientado a objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prints out a brief B&lt;h&gt;elp message.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T181553Z">
        <seg>Imprime en pantalla un breve mensaje de ayuda ("h" viene de la palabra inglesa B&lt;h&gt;elp).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Process</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195905Z">
        <seg>Procesar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Processing happens as you knew before.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110212T162051Z">
        <seg>El procesamiento se realiza igual que antes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Production releases, which incorporate bug fixes and new functionality,
are widely tested before release.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110223T111855Z">
        <seg>Las versiones de producción, que incorporan correcciones de errores y funcionalidad nueva, se someten a pruebas intensivas antes de su lanzamiento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provide a good synopsis of how your module is used in
code, a description, and then notes on the syntax and function of the
individual subroutines or methods.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T222421Z">
        <seg>Debe incluir una sinopsis adecuada que explique cómo se usa el módulo, una descripción, notas sobre la sintaxis y el propósito de las subrutinas o los métodos individuales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Quantifiers can be used to specify how many of the previous thing you
want to match on, where "thing" means either a literal character, one
of the metacharacters listed above, or a group of characters or
metacharacters in parentheses.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230521Z">
        <seg>Los cuantificadores se utilizan para especificar cuántas coincidencias de lo anterior (un carácter literal, uno de los metacaracteres antes especificados o un grupo de caracteres o metacaracteres entre paréntesis) se desea detectar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Radios and computers are not specializations of this parent.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T101942Z">
        <seg>Las radios y los equipos no son casos especiales de esta clase primaria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Read L&lt;perlootut&gt; and L&lt;perlobj&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T131850Z">
        <seg>Vea L&lt;perlootut&gt; y L&lt;perlobj&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Read all about it (and other special variables) in
L&lt;perlvar&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T212511Z">
        <seg>Encontrará información sobre este hash (y sobre otras variables especiales) en 
L&lt;perlvar&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Read all about them in L&lt;perlrequick&gt;,
L&lt;perlretut&gt;, and L&lt;perlre&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T004051Z">
        <seg>Encontrará más información en L&lt;perlrequick&gt;,
L&lt;perlretut&gt; y L&lt;perlre&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Read perlmod for the rest of the story.\n" }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T163827Z">
        <seg>Lea perlmod para obtener más información.\n" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Read the F&lt;INSTALL&gt; file, which is part of the source distribution.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T090744Z">
        <seg>Lea el archivo F&lt;INSTALL&gt; incluido en la distribución de código fuente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Read the cpan-mac directions carefully and
install it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T151444Z">
        <seg>Lea atentamente las instrucciones de cpan-mac e instálelo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Read the documentation to see if the module will work on your
system.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003533Z">
        <seg>Lea la documentación para ver si el módulo funciona en su sistema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Read the module's documentation, looking for
reasons why you might have trouble using it with MacPerl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T001151Z">
        <seg>Lea la documentación del módulo en busca de razones que impidan su uso con MacPerl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Read-only
attributes can only be set when the object is first created, while
read-write attributes can be altered at any time.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T084550Z">
        <seg>Los atributos de solo lectura solo se pueden asignar al crear el objeto; los de lectura y escritura pueden modificarse en cualquier momento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reading in the whole file at one time is called slurping.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T235621Z">
        <seg>La lectura de un archivo completo se suele llamar "slurping" (succión).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Receive and decode</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195902Z">
        <seg>Recibir y descodificar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Recently, the plan has been to release a new version of Perl roughly every
April, but getting the release right is more important than sticking rigidly to
a calendar date, so the release date is somewhat flexible.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T105556Z" creationid="explorer" creationdate="20160505T105556Z">
        <seg>Recientemente se acordó el plan de lanzar una versión nueva de Perl cada mes de abril, aproximadamente, pero dando prioridad a la calidad de la distribución, por lo que la fecha de lanzamiento es flexible; no se fija una fecha estricta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Recommended reading is "The Absolute
Minimum Every Software Developer Absolutely, Positively Must Know About Unicode
and Character Sets (No Excuses!)" by Joel Spolsky, at
L&lt;http://joelonsoftware.com/articles/Unicode.html&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T215214Z">
        <seg>Para adquirir estos conocimientos básicos, es recomendable leer el artículo "The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)" de Joel Spolsky, en
L&lt;http://joelonsoftware.com/articles/Unicode.html&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Recursive search.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T074128Z">
        <seg>Búsqueda recursiva.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Regarding aesthetics of code lay out, about the only thing Larry
cares strongly about is that the closing curly bracket of
a multi-line BLOCK should line up with the keyword that started the construct.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T095411Z">
        <seg>Con respecto a la estética del código, lo único que le importa a Larry es que la llave de cierre de un BLOQUE multilínea esté alineada con la palabra reservada con la que se inició esa estructura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember that it has to be C&lt;patcopy+1&gt; because the first character of
the string is the C&lt;U&gt; which has been swallowed into C&lt;datumtype!&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T002328Z">
        <seg>Recuerde que tiene que ser C&lt;patcopy+1&gt;,  ya que el primer carácter de la cadena es la C&lt;U&gt; consumida por C&lt;datumtype&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember that this is a closed list
with a very long turn-around time - be prepared to wait a good while for
a response from them.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T220222Z">
        <seg>Recuerde que se trata de una lista cerrada con un tiempo de respuesta largo; seguramente tardarán en contestar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember,
people often respond better to what they get out of it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T184528Z">
        <seg>Recuerde que las personas suelen ser más receptivas cuando algo les proporciona un beneficio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember, under the hood, this object is still just a hash.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T221210Z">
        <seg>Hay que tener presente que el objeto es, en realidad, un hash.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Roles are B&lt;applied&gt; to classes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185201Z">
        <seg>Los roles se B&lt;aplican&gt; a las clases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Roles are an alternative to inheritance for providing polymorphism.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185204Z">
        <seg>Los roles son una alternativa a la herencia para ofrecer polimorfismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Roles are relatively new to Perl, but have become rather
popular.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T101702Z">
        <seg>Son relativamente recientes en Perl, pero su uso se ha popularizado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run
C&lt;perl Porting/Maintainers -M Module::Name&gt; to find out more
information about a dual-life module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204240Z">
        <seg>Ejecute C&lt;perl Porting/Maintainers -M Nombre::Módulo&gt; para obtener más información sobre un módulo de evolución dual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run C&lt;perldoc
perldoc&gt; to learn more things you can do with F&lt;perldoc&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T173543Z">
        <seg>Ejecute C&lt;perldoc perldoc&gt; para ver qué más puede hacer con &lt;perldoc&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run by O'Reilly Media (the publisher of L&lt;the Camel Book|perlbook&gt;, among other
Perl-related literature), perl.com provides current Perl news, articles, and
resources for Perl developers as well as a directory of other useful websites.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T180049Z">
        <seg>Dirigido por O'Reilly Media (la editorial del L&lt;libro del Camello|perlbook&gt;, entre muchos otros libros sobre Perl), perl.com ofrece noticias de actualidad Perl, artículos y recursos para desarrolladores de Perl, así como un directorio de otros sitios web útiles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run this again, using Perl's -c switch.\n" }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T082532Z">
        <seg>Volvemos a ejecutar esto, ahora con el modificador -c de perl.\n" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>STDOUT-&gt;autoflush();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211913Z">
        <seg>STDOUT-&gt;autoflush();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>STRLEN fromlen;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231209Z">
        <seg>STRLEN fromlen;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SUPER-&gt;save($thing);     # FAIL: looks for save() method in class</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160129Z" creationid="explorer" creationdate="20150905T160129Z">
        <seg>SUPER-&gt;guardar($algo);   # ERROR: busca el método guardar() en la clase</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SUPER::save($thing);     # FAIL: looks for save() sub in package SUPER</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162325Z">
        <seg>SUPER::guardar($algo);     # ERROR: busca la subrutina guardar() en el paquete SUPER</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SV *fromstr;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231215Z">
        <seg>SV *fromstr;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Scalar values can be strings, integers or floating point numbers, and Perl
will automatically convert between them as required.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T230840Z">
        <seg>Los valores escalares pueden ser cadenas, enteros o números de punto flotante, y Perl los convertirá de un tipo a otro cuando sea necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Scalar values can be used in various ways:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T230948Z">
        <seg>Los valores escalares se pueden usar de varias maneras:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Scalars, arrays and hashes are documented more fully in L&lt;perldata&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T002217Z">
        <seg>Encontrará información detallada sobre los escalares, arrays y hashes en L&lt;perldata&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Second, ensure you've
found an actual bug.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T074446Z">
        <seg>Cuando esté seguro, confírmelo otra vez.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Second, when classes are well encapsulated, they become easier to
subclass.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T163744Z">
        <seg>En segundo lugar, cuando las clases están bien encapsuladas se hace más fácil la creación de subclases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See
L&lt;perlsub&gt; for details on these.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T155944Z">
        <seg>En L&lt;perlsub&gt; encontrará más información al respecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See
L&lt;perlsyn/"Switch Statements"&gt; for more details.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T131805Z">
        <seg>Consulte "Instrucciones switch" en L&lt;perlsyn&gt; para obtener información detallada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See C&lt;L&lt;perlsyn/"Foreach Loops"&gt;&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T151916Z">
        <seg>Vea la sección sobre bucles C&lt;foreach&gt; en C&lt;L&lt;perlsyn&gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See C&lt;perldoc --help&gt; (or C&lt;perldoc perldoc&gt; or C&lt;man perldoc&gt;)
for other helpful options L&lt;perldoc&gt; has to offer.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T145217Z" creationid="explorer" creationdate="20150905T145217Z">
        <seg>Ejecute C&lt;perldoc --help&gt; (o C&lt;perldoc perldoc&gt;, o C&lt;man perldoc&gt;)
para ver otras opciones útiles de L&lt;perldoc&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See F&lt;Cross/README&gt; for more details.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080923Z">
        <seg>Puede ver más detalles en F&lt;Cross/README&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;"Numeric operators and numeric conversions"&gt; for details.)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T084549Z">
        <seg>Encontrará información detallada en L&lt;"Operadores numéricos y conversiones numéricas"&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;/"What is Perl 6?"&gt; below
to find out more.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120723T181610Z">
        <seg>Vea L&lt;/"¿Qué es Perl 6?"&gt; a continuación para obtener más información.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;CPAN Ports|http://www.cpan.org/ports/&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T193730Z">
        <seg>Vea L&lt;Adaptaciones de Perl en CPAN|http://www.cpan.org/ports/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;Exporter&gt; and the L&lt;perlmodlib&gt; for
details on mechanics and style issues in module creation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165826Z">
        <seg>Vea L&lt;Exporter&gt; y L&lt;perlmodlib&gt; para obtener más información sobre los mecanismos y las cuestiones de estilo de la creación de módulos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;POD2::IT&gt; (or L&lt;POD2::FR&gt;) to see how to create new
localized C&lt;POD2::*&gt; documentation packages and integrate them into
L&lt;Pod::Perldoc&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T184719Z">
        <seg>Si desea saber cómo puede crear nuevos paquetes de documentación localizados (C&lt;POD2::*&gt;) e integrarlos en L&lt;Pod::Perldoc&gt;, vea L&lt;POD2::ES&gt; (o L&lt;POD2::IT&gt;, L&lt;POD2::FR&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;What is CPAN?|/"What modules and extensions are available for Perl?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T191735Z">
        <seg>Vea L&lt;¿Qué es CPAN?|/"¿Qué módulos y extensiones están disponibles para Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;overload&gt; for details.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T193227Z">
        <seg>Encontrará información detallada en L&lt;overload&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perldebug&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010923Z">
        <seg>Vea L&lt;perldebug&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perldiag&gt; for explanations of all Perl's diagnostics.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T180258Z">
        <seg>Encontrará en L&lt;perldiag&gt; las descripciones de todos los diagnósticos de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlembed&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110227T195121Z">
        <seg>Vea L&lt;perlembed&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlhack&gt; for details on how to submit this patch.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T234258Z">
        <seg>Vea L&lt;perlhack&gt; para obtener más información sobre cómo enviar este parche.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlhacktips/PERL_DESTRUCT_LEVEL&gt;
for more information about global destruction.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T232823Z">
        <seg>Encontrará más información sobre la fase de destrucción global en la sección "PERL_DESTRUCT_LEVEL" de L&lt;perlhacktips&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlhist&gt; for a history of Perl revisions.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T000717Z">
        <seg>En L&lt;perlhist&gt; encontrará el historial de revisiones de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlinterp&gt; for more details on the files that make up the Perl
interpreter, as well as details on how it works.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T081649Z">
        <seg>En L&lt;perlinterp&gt; encontrará más información sobre los archivos que integran el intérprete de Perl y detalles sobre el funcionamiento del intérprete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlmodlib&gt; for general style issues related to building Perl
modules and classes, as well as descriptions of the standard library
and CPAN, L&lt;Exporter&gt; for how Perl's standard import/export mechanism
works, L&lt;perlootut&gt; and L&lt;perlobj&gt; for in-depth information on
creating classes, L&lt;perlobj&gt; for a hard-core reference document on
objects, L&lt;perlsub&gt; for an explanation of functions and scoping,
and L&lt;perlxstut&gt; and L&lt;perlguts&gt; for more information on writing
extension modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T121550Z">
        <seg>En L&lt;perlmodlib&gt; encontrará información sobre cuestiones generales de estilo relacionadas con la creación de módulos y clases en Perl, así como descripciones de la biblioteca estándar y de CPAN; vea L&lt;Exporter&gt; para conocer cómo funciona el mecanismo estándar de exportación/importación; en L&lt;perlootut&gt; y L&lt;perlobj&gt; encontrará información detallada sobre la creación de clases; vea L&lt;perlobj&gt; para obtener información de referencia sobre objetos; en L&lt;perlsub&gt; podrá obtener información sobre cuestiones relacionadas con las funciones y el ámbito; por último, vea también L&lt;perlxstut&gt; y L&lt;perlguts&gt;, donde encontrará más detalles sobre la programación de módulos de extensión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlmodlib&gt; for more details on how this works, and
browse around CPAN and the modules list to get a feel of it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T150157Z">
        <seg>Encontrará los detalles sobre esta nomenclatura en L&lt;perlmodlib&gt;. Puede examinar CPAN y la lista de módulos para familiarizarse con ella.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlobj&gt; for more details.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185131Z">
        <seg>Consulte L&lt;perlobj&gt; para obtener más información.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlootut&gt; for
recommendations on OO coding in Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T230151Z">
        <seg>L&lt;perlootut&gt; incluye recomendaciones para la programación orientada a objetos en Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlport/"Supported Platforms"&gt;
for a listing.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T233033Z">
        <seg>Encontrará una lista en la sección "Plataformas compatibles" de L&lt;perlport&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlport&gt; for more information on portability issues.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003515Z">
        <seg>Vea L&lt;perlport&gt; para obtener más información sobre problemas de portabilidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlref&gt; for details.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T123813Z">
        <seg>Encontrará más información en L&lt;perlref&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlref&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T160316Z">
        <seg>Vea L&lt;perlref&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlrun&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T224554Z">
        <seg>Vea L&lt;perlrun&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlsec&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T224449Z">
        <seg>Vea L&lt;perlsec&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See L&lt;perlsub&gt; for other scoping issues related to my() and local(),
and L&lt;perlref&gt; regarding closures.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20121113T233156Z">
        <seg>Vea L&lt;perlsub&gt; para obtener información sobre otras cuestiones relativas al ámbito y relacionadas con my() y local(); vea L&lt;perlref&gt; para obtener información sobre las clausuras.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See above.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T010759Z">
        <seg>Vea arriba.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See also
L&lt;perlvar/"The Syntax of Variable Names"&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T134531Z">
        <seg>Vea también la sección "La sintaxis de los nombres de variables" de L&lt;perlvar&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See also: "What if I
don't encode?".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T000939Z">
        <seg>Vea también: "¿Qué pasa si no descodifico?".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See below for more description of the switches.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110808T174526Z">
        <seg>A continuación se muestra una descripción más detallada de los modificadores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See below for more details.&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T151441Z">
        <seg>Siga leyendo para obtener más detalles al respecto.&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the
L&lt;/Writing Accessors&gt; section for details.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T001706Z">
        <seg>Encontrará más información en la sección L&lt;/Implementación de métodos de acceso&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the
previous example.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T172529Z">
        <seg>Vea el ejemplo anterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the CPAN FAQ at L&lt;http://www.cpan.org/misc/cpan-faq.html&gt; for answers
to the most frequently asked questions about CPAN.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T190404Z">
        <seg>En la sección FAQ (preguntas más frecuentes) de CPAN (en L&lt;http://www.cpan.org/misc/cpan-faq.html&gt; ) encontrará respuestas a las preguntas más frecuentes sobre CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the Camel Book for why.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110214T002657Z">
        <seg>Consulte el "Libro del Camello" (en concreto, camello arábigo, o dromedario) para averiguar por qué.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the F&lt;h2ph&gt; documentation for more on how
to convert a whole bunch of header files at once.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T154352Z">
        <seg>Consulte la documentación de F&lt;h2ph&gt; para obtener más información sobre la manera de convertir varios archivos de encabezado a la vez.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the L&lt;Perl Mongers web site|http://www.pm.org/&gt; for more
information about joining, starting, or requesting services for a
Perl user group.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T183426Z">
        <seg>Visite el L&lt;sitio web de Perl Mongers|http://www.pm.org/&gt; para obtener más información sobre servicios relacionados con los grupos de usuarios de Perl: cómo unirse a un grupo, cómo iniciar un grupo o cómo solicitar servicios para un grupo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the L&lt;fields&gt;
pragma for more information.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T183654Z">
        <seg>Vea la documentación del pragma L&lt;fields&gt; para obtener más información.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the L&lt;mro&gt; documentation for more details on
this feature.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T164232Z">
        <seg>Consulte la documentación de L&lt;mro&gt; para conocer más detalles sobre esta característica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the L&lt;perlgit&gt; for details on how to do
this.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T234756Z">
        <seg>Encontrará más información en L&lt;perlgit&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the answer to
"Where can I buy a commercial version of Perl?" for more information.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T205439Z">
        <seg>Vea la respuesta a la pregunta "¿Dónde puedo adquirir una versión comercial de Perl?" para obtener más información.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the answer to the previous question.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T114613Z" creationid="explorer" creationdate="20150513T114613Z">
        <seg>Vea la respuesta a la pregunta anterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the list of operators in
the next section for information on comparison and boolean logic operators,
which are commonly used in conditional statements.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T232037Z">
        <seg>Consulte la lista de operadores de la siguiente sección para obtener información sobre los operadores lógicos booleanos y de comparación que se suelen usar en instrucciones condicionales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Semicolon omitted in "short" one-line BLOCK.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T172446Z">
        <seg>Punto y coma omitido en BLOQUE "pequeño" de una sola línea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setuid scripts have additional constraints that can produce error
messages such as "Insecure dependency".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T125058Z">
        <seg>Los scripts setuid tienen restricciones adicionales que pueden producir mensajes de error como "Insecure dependency" (dependencia insegura).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Several Unix/Linux related magazines frequently include articles on Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T110612Z" creationid="explorer" creationdate="20150905T110612Z">
        <seg>Varias revistas del mundo Unix/Linux suelen incluir artículos sobre Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SharedGreatGrandParent</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160247Z" creationid="explorer" creationdate="20150905T160247Z">
        <seg>    BisabueloComún</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly the NULL needs to be taken into account when you are considering
the length of existing keys/values.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T153814Z">
        <seg>También hay que tener en cuenta el carácter NULL al determinar la longitud de claves y valores existentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, Perl's built-in C&lt;ref&gt; function treats a reference to a
blessed object specially.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20121113T234651Z">
        <seg>De forma análoga, la función predefinida C&lt;ref&gt; trata de forma especial las referencias a objetos bendecidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, decimal strings can represent only those numbers which have a
finite decimal expansion.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T193311Z">
        <seg>De manera similar, las cadenas decimales solo pueden representar números que tengan una expansión decimal finita.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, just because an operator lets you assume default arguments
doesn't mean that you have to make use of the defaults.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T104921Z">
        <seg>Que un operador permita asumir argumentos predeterminados no significa que haya que hacer uso de esos valores predeterminados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, to
allow for future expansion, the return value should be a single C&lt;0&gt; or
C&lt;1&gt; value.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T121420Z">
        <seg>De forma análoga, y teniendo en cuenta posibles ampliaciones futuras, el valor devuelto debería ser un solo valor C&lt;0&gt; ó C&lt;1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simon Cozens, C&lt;simon@cpan.org&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174543Z">
        <seg>Simon Cozens, C&lt;simon@cpan.org&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since the 5.000 release, we have
averaged about one production release per year.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T175212Z">
        <seg>Desde el lanzamiento de la versión 5.000, hemos lanzado una versión de producción al año (en promedio).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since the object is also a hash, you can treat it as one, using it to
store data associated with the object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T204632Z">
        <seg>Como el objeto también es un hash, puede tratarlo como tal, usándolo para almacenar datos asociados con el objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since this is a global, if
you want to refer to do it without a package name prefix under C&lt;strict
'vars'&gt;, you need to declare it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T180854Z">
        <seg>Como se trata de una variable global, si desea hacer referencia a la misma sin un prefijo de nombre de paquete mediante C&lt;strict 'vars'&gt;, debe declararla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since we didn't define a C&lt;save()&gt; method in the C&lt;File::MP3&gt; class,
Perl will look at the C&lt;File::MP3&gt; class's parent classes to find the
C&lt;save()&gt; method.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T161837Z">
        <seg>Como no se ha definido el método C&lt;guardar()&gt; en la clase C&lt;Archivo::MP3&gt;, Perl lo buscará en las clases primarias de la clase C&lt;Archivo::MP3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since we're going
to be altering this file, let's copy it to F&lt;pp.c~&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T152911Z">
        <seg>Puesto que vamos a modificar este archivo, antes creamos una copia y le asignamos el nombre F&lt;pp.c~&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Six such conversions are possible:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T191858Z">
        <seg>Hay seis conversiones posibles:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Skip the real Pod formatting, and just show the raw Pod source (B&lt;U&gt;nformatted)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T181605Z">
        <seg>Omite el formato pod real y solo muestra el código pod sin formato ("u" viene de la palabra inglesa B&lt;U&gt;nformatted)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So
something like this:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T113027Z">
        <seg>De forma que el código siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So "perldoc intro" is enough to find/render "perlintro.pod".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T184932Z">
        <seg>Por ejemplo, "perldoc intro" es suficiente para encontrar y mostrar "perlintro.pod".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So C&lt;my $logmessage = shift;&gt; shifts the first item off the list of
arguments and assigns it to C&lt;$logmessage&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T164843Z">
        <seg>Así, C&lt;my $mensaje_registro = shift;&gt; quita el primer elemento de la lista de argumentos y se lo asigna a C&lt;$mensaje_registro&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So by storing a reference as the value of an array or hash
element, you can easily create lists and hashes within lists and
hashes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T002300Z">
        <seg>Así, almacenando una referencia como el valor de un elemento de array o hash, puede crear fácilmente listas y hashes dentro de listas y hashes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So given the diagram above, Perl will search C&lt;Child&gt;, C&lt;Father&gt;,
C&lt;PaternalGrandparent&gt;, C&lt;SharedGreatGrandParent&gt;, C&lt;Mother&gt;, and
finally C&lt;MaternalGrandparent&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T001044Z">
        <seg>Así, dado el diagrama anterior, Perl buscará siguiendo el orden C&lt;Hijo&gt;, C&lt;Padre&gt;, C&lt;AbueloPaterno&gt;, C&lt;BisabueloComún&gt;, C&lt;Madre&gt; y, por último, C&lt;AbueloMaterno&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So hopefully you've now got a few ideas about what's good to modularise.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T185929Z">
        <seg>Ya sabe qué partes podría convertir en módulos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So now you have a file ending in .tar.gz (or, less often, .zip).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T005254Z">
        <seg>Así pues, ahora tiene un archivo con la extensión .tar.gz (o .zip, aunque esto es menos frecuente).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So this is the end of the tale.\n" }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T115008Z">
        <seg>Y este cuento se ha acabado.\n" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So this is the sixth line.\n" }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T163737Z">
        <seg>Esta es la sexta línea.\n" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So this line comes out second.\n" }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T163922Z">
        <seg>Así que esta línea será la segunda.\n" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So when
you use this:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110819T095403Z">
        <seg>Así, cuando se ejecuta la siguiente instrucción:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So you can't execute any of
these code blocks by name.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T161823Z">
        <seg>Por esta razón no puede ejecutar ninguno de estos bloques usando su nombre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, here's where
C&lt;pat&gt; is set up:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T160354Z">
        <seg>Aquí es donde se establece C&lt;pat&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some
modules generate Makefiles that work better with GNU make, which is
available from http://www.mks.com/s390/gnu/</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003454Z">
        <seg>Los archivos Makefile generados por algunos módulos funcionan mejor con GNU make, que está disponible en http://www.mks.com/s390/gnu/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some brief examples:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T235546Z">
        <seg>Algunos ejemplos breves:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some database drivers for DBI can also automatically encode and decode, but
that is sometimes limited to the UTF-8 encoding.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T010916Z">
        <seg>Algunos controladores de base de datos para DBI también pueden codificar y descodificar automáticamente, pero a veces esta funcionalidad está limitada a la codificación UTF-8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some documentation is not available as man pages, so if a
cross-reference is not found by man, try it with L&lt;perldoc&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T145054Z" creationid="explorer" creationdate="20150905T145054Z">
        <seg>Parte de la documentación no está disponible en formato de páginas de manual. Si man no encuentra una
referencia cruzada, pruebe con L&lt;perldoc&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some encodings, like the C&lt;iso-8859&gt; ("latin") range, do not support the full
Unicode standard; characters that can't be represented are lost in the
conversion.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T220417Z">
        <seg>Algunas codificaciones, como las de la familia C&lt;iso-8859&gt; ("alfabeto latino"), no cubren el estándar Unicode completo; los caracteres que no se pueden representar se perderán durante la conversión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some modules might have special reporting requirements, such as a
Github or Google Code tracking system, so you should check the
module documentation too.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211743Z">
        <seg>Es posible que algunos módulos tengan requisitos de notificación específicos, como usar un sistema de seguimiento de errores de Github o Google Code, por lo que es recomendable consultar también la documentación de los módulos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some of the books we've listed appear almost ancient in internet
scale, but we've included those books because they still describe the
current way of doing things.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110606T230336Z">
        <seg>En la escala temporal de Internet, algunos de los libros de la lista parecen anticuados, pero los hemos incluido porque su contenido sigue siendo válido en la actualidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some of the highlights include:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T193230Z">
        <seg>Algunos elementos destacados son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some of the ones
we've already seen include C&lt;print&gt;, C&lt;sort&gt; and C&lt;reverse&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T003049Z">
        <seg>Ya hemos visto algunas funciones, como C&lt;print&gt;, C&lt;sort&gt; y C&lt;reverse&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some of these books are available as free downloads.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110604T233136Z">
        <seg>Algunos de estos libros están disponibles como descargas gratuitas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some use the UTF8 flag for this, but that's misuse, and makes well
behaved modules like Data::Dumper look bad.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T233133Z">
        <seg>Hay quien usa la marca UTF8 para esto, pero es un uso incorrecto que hace que parezca que hay errores en módulos que funcionan correctamente, como Data::Dumper.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some_package::foo();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T160525Z">
        <seg>Un_paquete::foo();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes we say that classes
B&lt;consume&gt; roles.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T164135Z">
        <seg>Se puede decir que las clases B&lt;consumen&gt; roles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes we say that the child
has an B&lt;is-a&gt; relationship with its parent class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T225349Z">
        <seg>Algunas veces se dice que la clase derivada tiene una relación de tipo "es un" (B&lt;is-a&gt; en inglés) con su clase primaria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Space after each comma.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T122827Z">
        <seg>Espacio después de cada coma.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Space after last parenthesis matching on current line.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T215117Z">
        <seg>Espacio después del último emparejamiento de paréntesis en la línea actual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Space around a "complex" subscript (inside brackets).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T122749Z">
        <seg>Espacio en torno a un subíndice "complejo" (entre corchetes).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Space around most operators.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T172455Z">
        <seg>Espacio en torno a la mayoría de operadores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Space before the opening curly of a multi-line BLOCK.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T172419Z">
        <seg>Espacio antes de llave de apertura de un BLOQUE multilínea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specify replacement for groff</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T195508Z">
        <seg>Especifique el sustituto de groff</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stack Overflow is a free question-and-answer site for programmers.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T093143Z" creationid="explorer" creationdate="20160505T093143Z">
        <seg>Stack Overflow es un sitio para programadores en el que todos pueden hacer preguntas o contestarlas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting in Perl 5.14 (and partially in Perl 5.12), just put a
C&lt;use feature 'unicode_strings'&gt; near the beginning of your program.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T001442Z">
        <seg>Desde Perl 5.14 (y, de forma parcial, desde Perl 5.12), solo tiene que agregar C&lt;use feature 'unicode_strings'&gt; al principio del programa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Steve Peters &lt;steve@fisharerojo.org&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125055Z">
        <seg>Steve Peters &lt;steve@fisharerojo.org&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Still, it's useful, and works well with C&lt;Class::Accessor&gt; and
C&lt;Class::Tiny&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T125828Z" creationid="explorer" creationdate="20150905T125828Z">
        <seg>De todos modos, es útil y funciona bien con C&lt;Class::Accessor&gt; y
C&lt;Class::Tiny&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Still, we think it's a lot easier to use than writing
your own OO code from scratch.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104758Z">
        <seg>Sin embargo, es mucho más sencillo usar este módulo que escribir código orientado a objetos desde cero.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Styles and techniques will therefore differ,
although some effort has been made to not vary styles too widely in the
same sections.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110529T142556Z">
        <seg>Por esta razón, habrá diversos estilos y técnicas, pero se ha procurado que en una misma sección los estilos no varíen demasiado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclasses can
use the accessors rather than having to know how a parent class is
implemented internally.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T205724Z">
        <seg>Las subclases pueden usar los métodos de acceso, en lugar de tener que conocer la implementación interna de una clase primaria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subroutine definitions (and declarations, for that matter) need
not necessarily be situated in the package whose symbol table they
occupy.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T181305Z">
        <seg>Las definiciones de subrutinas (y las definiciones de declaraciones) no tienen por qué ubicarse en el paquete al que pertenece la tabla de símbolos en que aparecen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subroutines can also return values:</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Las subrutinas también pueden devolver valores:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Substitute C&lt;mmk&gt; for C&lt;mms&gt; above if you're using MMK.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T182157Z">
        <seg>Si usa MMK, cambie C&lt;mmk&gt; por C&lt;mms&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such a
package may also derive some of its methods from another class (package)
by listing the other package name(s) in its global @ISA array (which
must be a package global, not a lexical).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T164322Z">
        <seg>Un paquete así también pueden derivar alguno de sus métodos de otra clase (paquete) especificando el nombre de este paquete en su array global @ISA, que debe ser una variable global (no léxica) del paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such double encoding
can be compared to double HTML encoding (C&lt;&amp;amp;gt;&gt;), or double URI encoding
(C&lt;%253E&gt;).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T000253Z">
        <seg>Esta codificación doble es similar a la codificación doble de HTML (C&lt;&amp;amp;gt;&gt;) o de URI (C&lt;%253E&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summing up, Perl numeric values can store only those numbers which have
a finite decimal expansion or a "short" binary expansion.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T174419Z">
        <seg>En resumen, en Perl los valores numéricos solo pueden almacenar números que tengan una expansión decimal finita o una expansión binaria "corta".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose you're reading in data from a local
format into a hash-of-hashes in Perl, turning that into a tree, walking
the tree and then piping each node to an Acme Transmogrifier Server.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T215705Z">
        <seg>Supongamos que ha escrito un programa que lee datos en un formato local y los almacena en un hash de hashes de Perl. Después los convierte en un árbol, recorre el árbol y canaliza cada nodo hacia un servidor Acme Transmogrifier.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sure enough, C&lt;pp_pack&gt; is in F&lt;pp.c&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T001606Z">
        <seg>Como sospechábamos, C&lt;pp_pack&gt; está en F&lt;pp.c&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ten years ago it was a dead
camel carcass (according to this document).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T002057Z">
        <seg>Hace diez años era un camello muerto (según este documento).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests for basic control structures, C&lt;if/else&gt;, C&lt;while&gt;, subroutines,
etc.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204410Z">
        <seg>Pruebas de estructuras de control básicas, C&lt;if/else&gt;, C&lt;while&gt;,
subrutinas, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests for basic issues of how Perl parses and compiles itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T202029Z">
        <seg>Pruebas de problemas básicos relacionados con la manera en que Perl se analiza y compila.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests for built-in IO functions, including command line arguments.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T202033Z">
        <seg>Pruebas de funciones de E/S predefinidas, incluidos los argumentos de línea de comandos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests for core modules in the F&lt;lib/&gt; directory are right next to the
module itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204449Z">
        <seg>Las pruebas de los módulos del núcleo del directorio F&lt;lib/&gt; se encuentran junto al módulo correspondiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests for features of how perl actually runs, including exit codes and
handling of PERL* environment variables.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T202101Z">
        <seg>Pruebas de las características de funcionamiento de perl, incluidos los códigos de salida y el control de las variables de entorno PERL*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests for modules in F&lt;ext/&gt; and the dual-life modules are in F&lt;t/&gt;
subdirectories for each module, like a standard CPAN distribution.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T201933Z">
        <seg>Las pruebas de los módulos de F&lt;ext/&gt; y los módulos de evolución dual están en los subdirectorios F&lt;t/&gt; de cada módulo, como en una distribución de CPAN estándar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests for perl's built in functions that don't fit into any of the
other directories.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20121113T235657Z">
        <seg>Pruebas de funciones predefinidas de perl que no se corresponden con ninguno de los demás directorios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests for perl's built in functions which, like those in F&lt;t/op/&gt;, do
not fit into any of the other directories, but which, in addition,
cannot use F&lt;t/test.pl&gt;,as that program depends on functionality which
the test file itself is testing.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T120315Z" creationid="explorer" creationdate="20150513T120315Z">
        <seg>Pruebas de funciones predefinidas de perl que, al igual que las de F&lt;t/op/&gt;, no
se corresponden con ninguno de los demás directorios y que, además,
no pueden usar F&lt;t/test.pl&gt;, ya que ese programa depende de funcionalidad que
el mismo archivo de prueba está comprobando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests for perl's method resolution order implementations (see L&lt;mro&gt;).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T202040Z">
        <seg>Pruebas de las implementaciones de orden de resolución de métodos de perl (vea L&lt;mro&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests for regex related functions or behaviour.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T211116Z">
        <seg>Pruebas de funciones o comportamientos relacionados con expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests for the absolute basic functionality of Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T201939Z">
        <seg>Pruebas de funcionalidad básica de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests for the core support of Unicode.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T202105Z">
        <seg>Pruebas de compatibilidad básica con Unicode.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests the state of the source tree for various common errors.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T202114Z">
        <seg>Pruebas que detectan diversos errores comunes en el árbol de código fuente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thanks to Gerard Goossen from TTY.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T130641Z">
        <seg>Gerard Goossen de TTY.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thanks to Johan Vromans from Squirrel Consultancy.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T214547Z">
        <seg>Deseo expresar mi agradecimiento a las siguientes personas: Johan Vromans de Squirrel Consultancy.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thanks to the people who asked about this kind of stuff in several Perl IRC
channels, and have constantly reminded me that a simpler explanation was
needed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T130741Z">
        <seg>Todas las personas que han hecho preguntas sobre este tema en diversos canales IRC sobre Perl y que me han recordado constantemente lo necesaria que era una explicación más sencilla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thanks to the people who reviewed this document for me, before it went public.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T130804Z">
        <seg>Las personas que han revisado este documento antes de su publicación:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thanks!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T202139Z">
        <seg>Se lo agradeceremos...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That
might mean that Perl either saves them something (time, headaches, money)
or gives them something (flexibility, power, testability).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110402T103655Z">
        <seg>Esta ayuda puede implicar un ahorro (de tiempo, dinero o dolores de cabeza) o una aportación (en forma de flexibilidad, eficacia o facilidad para realizar pruebas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That explicit association is created by the built-in C&lt;bless&gt; function,
which is typically used within the I&lt;constructor&gt; subroutine of the
class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T125422Z">
        <seg>Esta asociación se crea mediante la función predefinida C&lt;bless&gt;,
que normalmente se usa dentro del I&lt;constructor&gt; de la clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That has stopped, as installing a
snapshot that becomes increasingly out of date isn't that useful to anyone.)</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160429T222501Z" creationid="explorer" creationdate="20160429T222147Z">
        <seg>Hemos dejado de incluirla, puesto que un listado del estado actual que queda obsoleto en poco tiempo no tiene mucha utilidad).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is the source of much
confusion.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T002702Z">
        <seg>Y crea muchas confusiones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is, C&lt;$::sail&gt; is equivalent to
C&lt;$main::sail&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120902T085202Z">
        <seg>Es decir, C&lt;$::vela&gt; equivale a C&lt;$main::vela&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That may sound
positive, but it's best to avoid it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T000600Z">
        <seg>Es posible que este nombre sugiera algo positivo, pero es mejor evitar que suceda.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That means it starts with the first parent in the C&lt;@ISA&gt; array, and
then searches all of its parents, grandparents, etc.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T215748Z">
        <seg>Esto significa que se comienza buscando en la primera clase primaria del array C&lt;@ISA&gt; y después se busca en todas las clases primarias de esta, y así sucesivamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That means that you very probably shouldn't
use C&lt;is_utf8&gt;, C&lt;_utf8_on&gt; or C&lt;_utf8_off&gt; at all.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T002503Z">
        <seg>Esto significa que es muy probable que nunca tenga que usar C&lt;is_utf8&gt;, C&lt;_utf8_on&gt; y C&lt;_utf8_off&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That means when we call C&lt;&lt;
Critter-&gt;new() &gt;&gt;, the C&lt;new()&gt; method receives the string C&lt;"Critter"&gt;
as its first argument.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T214053Z">
        <seg>Esto significa que la llamada C&lt;&lt; Bicho-&gt;new() &gt;&gt;, hace que el método C&lt;new()&gt; reciba la cadena C&lt;"Bicho"&gt; como primer argumento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That said, there will always be small, focused, special-purpose
languages dedicated to a specific problem domain that are simply more
convenient for certain kinds of problems.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110402T103123Z">
        <seg>Sin embargo, siempre habrá lenguajes reducidos de propósito específico orientados a un dominio de un problema concreto, más cómodos para afrontar determinados tipos de problemas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That sugar is just a set of exported functions that make declaring how
your class works simpler and more palatable.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T164928Z">
        <seg>Esta simplificación consiste en un conjunto de funciones exportadas que hacen que la declaración de las clases sea más sencilla y agradable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's a mouthful, so let's look at some code:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T002535Z">
        <seg>Suena complicado, así que veamos algunos ejemplos de código:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's all you need to do on Unix systems with dynamic linking.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T184505Z">
        <seg>Esto es todo lo que tiene que hacer en los sistemas Unix con vinculación dinámica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's it!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104835Z">
        <seg>¡Y ya está!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's probably because you forgot libraries, or library paths differ.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T090541Z">
        <seg>Probablemente se deba a que olvidó copiar las bibliotecas, o a que las rutas de acceso de las bibliotecas difieren.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's the C part done.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T153443Z">
        <seg>Ya hemos corregido el código C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's very useful if you use things like
C&lt;substr&gt;, or C&lt;length&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110403T233649Z">
        <seg>Esto resulta muy útil al utilizar funciones como C&lt;substr&gt; o C&lt;length&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's why the second call to C&lt;blessed( $bar )&gt; returns
false.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T205603Z">
        <seg>Esto es por lo que la segunda llamada a C&lt;blessed( $bar )&gt; devuelve falso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The
"lib/anydbm" and "pragma/warnings" tests will almost certainly fail.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T203650Z">
        <seg>Es muy probable que no se superen las pruebas "lib/anydbm" y "pragma/warnings".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The
L&lt;UNIVERSAL&gt; class is implemented by the Perl core, and provides
several default methods, such as C&lt;isa()&gt;, C&lt;can()&gt;, and C&lt;VERSION()&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T155510Z">
        <seg>La clase L&lt;UNIVERSAL&gt; está implementada en el núcleo de Perl y proporciona varios métodos predefinidos, como C&lt;isa()&gt;, C&lt;can()&gt; y C&lt;VERSION()&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The
core, the standard Perl library, the optional modules, and the
documentation you're reading now were all written by volunteers.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T210404Z">
        <seg>Los componentes del núcleo, la biblioteca Perl estándar, los módulos opcionales y esta documentación han sido desarrollados por voluntarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The
only difference is that in a class, the subroutines may expect a
reference to an object or the name of a class as the first argument.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083437Z">
        <seg>La única diferencia es que en una clase la subrutina recibirá como primer argumento un objeto o el nombre de una clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The
package you are looking at could have overridden the C&lt;VERSION&gt; method.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T162638Z">
        <seg>El paquete en que se comprueba podría haber sobrescrito el método C&lt;VERSION&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The B&lt;-X&gt; option looks for an entry
whose basename matches the name given on the command line in the file
C&lt;$Config{archlib}/pod.idx&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110819T103500Z">
        <seg>La opción B&lt;-X&gt; busca en el archivo C&lt;$Config{archlib}/pod.idx&gt; una entrada cuyo nombre base coincida con el nombre especificado en la línea de comandos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The B&lt;-a&gt; option followed by the name of a perl api function will
extract the documentation of this function from L&lt;perlapi&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T214907Z" creationid="explorer" creationdate="20150905T113105Z">
        <seg>La opción B&lt;-a&gt; seguida del nombre de una función de la API de perl extrae la documentación de esta función de L&lt;perlapi&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The B&lt;-f&gt; option followed by the name of a perl built-in function will
extract the documentation of this function from L&lt;perlfunc&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T200029Z">
        <seg>La opción B&lt;-f&gt; seguida del nombre de una función predefinida de perl extrae de L&lt;perlfunc&gt; la documentación de la función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The B&lt;-q&gt; option takes a regular expression as an argument.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110808T213223Z">
        <seg>La opción B&lt;-q&gt; consume una expresión regular como argumento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The B&lt;-v&gt; option followed by the name of a Perl predefined variable will
extract the documentation of this variable from L&lt;perlvar&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T200149Z">
        <seg>La opción B&lt;-v&gt; seguida del nombre de una variable predefinida de Perl extrae de L&lt;perlvar&gt; la documentación de la variable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The B&lt;begincheck&gt; program makes it all clear, eventually:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T114457Z">
        <seg>El programa B&lt;begincheck&gt; expone esto de forma clara (o eso esperamos):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The BUILD and INSTALL steps are identical to those for Unix.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010805Z">
        <seg>Los pasos COMPILAR e INSTALAR son idénticos a los de Unix.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C application
assumes that I&lt;all&gt; keys and values are NULL terminated.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111003T120421Z">
        <seg>La aplicación en C supone que I&lt;todas&gt; las claves y sus valores correspondientes terminan con un carácter NULL.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C source code and header files mostly live in the root of the
source tree.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204715Z">
        <seg>La mayor parte del código C y los archivos de encabezado se encuentran en el directorio raíz del árbol de código fuente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C style for loop is rarely needed in Perl since Perl provides
the more friendly list scanning C&lt;foreach&gt; loop.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T120245Z">
        <seg>El bucle for de C no se suele usar, ya que Perl proporciona una alternativa más sencilla para recorrer listas, el bucle C&lt;foreach&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C3 method resolution order added in 5.10.0 has been re-implemented as
a plugin, without changing its Perl-space interface.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T230315Z">
        <seg>El orden de resolución de métodos C3 agregado en 5.10.0 se ha reimplementado como un complemento sin cambiar su interfaz del espacio Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C3 order also lets you call methods in sibling classes with the
C&lt;next&gt; pseudo-class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T164226Z">
        <seg>El orden C3 también permite llamar a métodos en clases del mismo nivel mediante la seudoclase C&lt;next&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;*foo{THING}&gt; notation can also be used to obtain references to the
individual elements of *foo.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T181207Z">
        <seg>También se puede usar la notación C&lt;*foo{COSA}&gt; para obtener referencias a los elementos individuales de *foo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;*x = \$y&gt; mechanism may be used to pass and return cheap references
into or from subroutines if you don't want to copy the whole
thing.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T180728Z">
        <seg>El mecanismo C&lt;*x = \$y&gt; se puede usar para pasar y devolver referencias sencillas a (o desde) las subrutinas si no desea copiar el valor completo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;-A&gt; omits the Autoloader code, C&lt;-X&gt; omits XS elements,
C&lt;--skip-exporter&gt; omits the Exporter code, C&lt;--use-new-tests&gt; sets up a
modern testing environment, and C&lt;-n&gt; specifies the name of the module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T174358Z">
        <seg>El modificador C&lt;-A&gt; omite el código de Autoloader, C&lt;-X&gt; omite los elementos XS,
C&lt;--skip-exporter&gt; omite el código de Exporter, C&lt;--use-new-tests&gt; configura un entorno de pruebas moderno y C&lt;-n&gt; especifica el nombre del módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;//&gt; matching operator is documented in L&lt;perlop&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T234106Z">
        <seg>El operador de detección de coincidencias C&lt;//&gt; se describe en L&lt;perlop&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;&lt; -&gt; &gt;&gt; syntax is also used when dereferencing a reference.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T160228Z">
        <seg>La sintaxis C&lt;&lt; -&gt; &gt;&gt; también se usa para desreferenciar una referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;&lt; &lt;&gt; &gt;&gt; operator is most often seen in a C&lt;while&gt; loop:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T003055Z">
        <seg>El operador C&lt;&lt; &lt;&gt; &gt;&gt; se suele utilizar en un bucle C&lt;while&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;@ISA&gt; array
contains a list of that class's parent classes, if any.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T211722Z">
        <seg>El array C&lt;@ISA&gt; contiene la lista de clases primarias (si las hubiera).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;CHECK&gt; and C&lt;INIT&gt; blocks in code compiled by C&lt;require&gt;, string C&lt;do&gt;,
or string C&lt;eval&gt; will not be executed if they occur after the end of the
main compilation phase; that can be a problem in mod_perl and other persistent
environments which use those functions to load code at runtime.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T161539Z">
        <seg>Los bloques C&lt;CHECK&gt; e C&lt;INIT&gt; en código compilado por C&lt;require&gt; y en funciones C&lt;do&gt; o C&lt;eval&gt; de cadena no se ejecutarán si están después del final de la fase principal de compilación; esto puede suponer un problema en el entorno mod_perl y otros entornos permanentes que usan esas funciones para cargar código en tiempo de ejecución.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;Config&gt; module will also let you interrogate values
determined by the B&lt;Configure&gt; program when Perl was installed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T100943Z">
        <seg>El módulo C&lt;Config&gt; también permite consultar valores que el programa B&lt;Configure&gt; determinó durante la instalación de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;DOES&gt; method returns I&lt;true&gt; if its object claims to perform the
role C&lt;$role&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T224741Z">
        <seg>El método C&lt;DOES&gt; devuelve I&lt;verdadero&gt; si el objeto proclama realizar el rol indicado en C&lt;$rol&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;File&gt; class would
then be B&lt;composed&gt; of several other objects.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T174422Z">
        <seg>La clase C&lt;Archivo&gt; estaría B&lt;compuesta&gt; de varios objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;Moose&gt; authors hope that one day C&lt;Moo&gt; can be made obsolete by
improving C&lt;Moose&gt; enough, but for now it provides a worthwhile
alternative to C&lt;Moose&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T124942Z" creationid="explorer" creationdate="20150905T124942Z">
        <seg>Los autores de C&lt;Moose&gt; esperan que C&lt;Moo&gt; quede obsoleto
algún día, cuando C&lt;Moose&gt; haya mejorado lo suficiente, pero de momento es una buena
alternativa a C&lt;Moose&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;SUPER::&gt; bit tells Perl to look for the C&lt;print_info()&gt; in the
C&lt;File::MP3&gt; class's inheritance chain.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T085849Z">
        <seg>C&lt;SUPER::&gt; le indica a Perl que busque el método C&lt;imprimir_info()&gt; en la cadena de herencia de la clase C&lt;Archivo::MP3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;SUPER&gt; modifier can I&lt;only&gt; be used for method calls.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162216Z">
        <seg>El modificador C&lt;SUPER&gt; I&lt;solo&gt; se puede usar para llamar a métodos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;SUPER&gt; pseudo-class is resolved from the package where the call
is made.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T213150Z">
        <seg>La seudoclase C&lt;SUPER&gt; se resuelve a partir del paquete en que se hace la llamada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;UNIVERSAL&gt; class will I&lt;never&gt; appear in a package's C&lt;@ISA&gt;
variable.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T155524Z">
        <seg>La clase C&lt;UNIVERSAL&gt; I&lt;nunca&gt; aparecerá en la variable C&lt;@ISA&gt; de ningún paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;VERSION&gt; method returns the version number of the class
(package).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T162313Z">
        <seg>El método C&lt;VERSION&gt; devuelve el número de versión de la clase (paquete).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;antlers&gt; import flag tells C&lt;Class::Accessor&gt; that you want to
define your attributes using C&lt;Moose&gt;-like syntax.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104549Z">
        <seg>La marca de importación C&lt;antlers&gt; indica a la clase C&lt;Class::Accessor&gt; que desea definir los atributos con el estilo de sintaxis de C&lt;Moose&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;bless&gt; function
can take either one or two arguments:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T160313Z">
        <seg>La función C&lt;bless&gt; permite usar uno o dos argumentos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;bless&gt; function then takes that reference
and associates the hash with the class in C&lt;$class&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T153658Z">
        <seg>La función C&lt;bless&gt; recibe esa referencia y asocia el hash a la clase indicada por C&lt;$clase&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;can&gt; method checks to see if the class or object it was called on
has a method named C&lt;$method&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T162112Z">
        <seg>El método C&lt;can&gt; comprueba si la clase o el objeto usados disponen de un método llamado C&lt;$metodo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;foreach&gt; keyword is actually a synonym for the C&lt;for&gt;
keyword.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T151840Z">
        <seg>En realidad, la palabra clave C&lt;foreach&gt; es un sinónimo de la palabra clave C&lt;for&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;has()&gt; subroutine declares an attribute, and C&lt;Moose&gt;
automatically creates accessors for these attributes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T103131Z">
        <seg>Los atributos se declaran con la subrutina C&lt;has()&gt; y C&lt;Moose&gt; crea automáticamente los métodos de acceso para los atributos declarados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;isa&gt; method returns I&lt;true&gt; if the object is a member of the
class in C&lt;$class&gt;, or a member of a subclass of C&lt;$class&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T224727Z">
        <seg>El método C&lt;isa&gt; devuelve I&lt;verdadero&gt; si el objeto es un miembro de la clase especificada en C&lt;$clase&gt;, o bien de alguna de las subclases de C&lt;$clase&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;my&gt; is actually not required; you could just use:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T181535Z">
        <seg>En realidad no es obligatorio usar C&lt;my&gt;; se puede usar simplemente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;resolve&gt; function is called to generate a linearised ISA for the
given stash, using this MRO.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T223548Z">
        <seg>La función C&lt;resolve&gt; se llama para generar una relación ISA lineal para el hash de tabla de símbolos (o "stash", contracción de I&lt;symbol table hash&gt;) indicado, con este orden de resolución de métodos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;roffitall&gt; utility is not installed on your system but lives in
the F&lt;pod/&gt; directory of your Perl source kit; it converts all the
documentation from the distribution to F&lt;*roff&gt; format, and produces a
typeset PostScript or text file of the whole lot.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110716T161016Z">
        <seg>La utilidad C&lt;roffitall&gt; no se instala en el sistema, pero puede encontrarla en el directorio F&lt;pod/&gt; del kit de código fuente de Perl. Esta utilidad convierte toda la documentación de la distribución al formato F&lt;*roff&gt; y a partir de esto genera código fuente PostScript o un archivo de texto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;s///&gt; substitution operator is documented in L&lt;perlop&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233345Z">
        <seg>El operador de sustitución, C&lt;s///&gt;, se describe en L&lt;perlop&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;use
diagnostics&gt; pragma automatically turns Perl's normally terse warnings
and errors into these longer forms.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T173938Z">
        <seg>El pragma C&lt;use diagnostics&gt; convierte automáticamente las advertencias y errores de Perl, normalmente escuetos, en estos mensajes más desarrollados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;use constant&gt; pragma is a
convenient shorthand for these.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T181122Z">
        <seg>El pragma C&lt;use constant&gt; es una abreviatura adecuada para estos casos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;use sigtrap&gt; and even C&lt;use diagnostics&gt; pragmas
may also prove useful.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T104450Z">
        <seg>El pragma C&lt;use sigtrap&gt; y C&lt;use diagnostics&gt; pueden ser también muy útiles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;use warnings&gt; pragma produces some lovely diagnostics.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T145713Z" creationid="explorer" creationdate="20150905T145713Z">
        <seg>El pragma C&lt;use warnings&gt; produce diagnósticos muy informativos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C&lt;use&gt; operator
assumes this so you don't have to spell out "F&lt;Module.pm&gt;" in quotes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T083746Z">
        <seg>El operador C&lt;use&gt; lo tiene en cuenta, para que no tenga que escribir "F&lt;Modulo.pm&gt;" entre comillas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The CPAN is the
Comprehensive Perl Archive Network and can be accessed at
http://www.cpan.org/ , and searched at http://search.cpan.org/ .</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T200808Z">
        <seg>CPAN es la abreviatura de I&lt;Comprehensive Perl Archive Network&gt;, una red de almacenamiento de recursos de Perl a la que se tiene acceso a través de L&lt;http://www.cpan.org/&gt; y en la que se pueden realizar búsquedas desde L&lt;http://search.cpan.org/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Camel book was originally
written mostly over e-mail and today Perl's development is co-ordinated through
mailing lists.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T175222Z">
        <seg>El libro del Camello original se escribió en su mayor parte a través de correo electrónico. Actualmente, el desarrollo de Perl se coordina mediante listas de correo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The F&lt;Configure&gt; script is ultimately responsible for generating a
F&lt;Makefile&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T081043Z">
        <seg>El script F&lt;Configure&gt; se encarga de generar un archivo F&lt;Makefile&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The F&lt;Cross&gt; directory contains various files related to
cross-compiling Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204059Z">
        <seg>El directorio F&lt;Cross&gt; contiene varios archivos relacionados con la compilación multiplataforma de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The F&lt;MANIFEST&gt; file in the root of the source tree contains a list of
every file in the Perl core, as well as a brief description of each
file.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204140Z">
        <seg>El archivo F&lt;MANIFEST&gt; del directorio raíz del árbol de código fuente contiene una lista de todos los archivos incluidos en el núcleo de Perl, así como una breve descripción de cada archivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The F&lt;Porting&gt; directory contains a grab bag of code and documentation
intended to help porters work on Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T193222Z">
        <seg>El directorio F&lt;Porting&gt; contiene un conjunto de fragmentos de código y documentación que pueden servir de ayuda a los mantenedores de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The F&lt;module-starter&gt; utility is distributed as part of the
L&lt;Module::Starter|Module::Starter&gt; CPAN package.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T181452Z">
        <seg>La utilidad F&lt;module-starter&gt; se distribuye como parte del paquete de CPAN L&lt;Module::Starter|Module::Starter&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The F&lt;perldoc&gt; program gives you access to all the documentation that comes
with Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T222805Z">
        <seg>El programa F&lt;perldoc&gt; proporciona acceso a toda la documentación incluida en Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The F&lt;perlivp&gt; program is set up at Perl source code build time to test
the Perl version it was built under.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T154059Z">
        <seg>El programa F&lt;perlivp&gt; se configura en tiempo de compilación del código fuente de Perl para comprobar la versión de Perl con la que se generó.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The F&lt;pod.idx&gt; file should contain fully
qualified filenames, one per line.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T182316Z">
        <seg>El archivo F&lt;pod.idx&gt; debe contener nombres de archivo completos (uno por línea).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The I&lt;Perl-Zeitung&gt; is another
German-speaking magazine for Perl beginners (see
L&lt;http://perl-zeitung.at.tf&gt; ).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T190011Z">
        <seg>I&lt;Perl-Zeitung&gt; es otra revista en alemán para programadores Perl principiantes (visite L&lt;http://perl-zeitung.at.tf&gt; ).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The L&lt;Carp|Carp&gt; module allows you to present your error messages from
the caller's perspective; this gives you a way to signal a problem with
the caller and not your module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T190540Z">
        <seg>El módulo L&lt;Carp|Carp&gt; permite presentar los mensajes de error desde la perspectiva del código que llama; esto permite indicar que el problema está en el código que hace la llamada y no en su módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The L&lt;Object::InsideOut&gt; module on CPAN provides a
comprehensive implementation of this technique, and you may see it or
other inside-out modules in the wild.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T231533Z">
        <seg>El módulo L&lt;Object::InsideOut&gt; de CPAN proporciona una implementación completa de esta técnica y puede que encuentre esta implementación u otras en código de otros programadores.</seg>
      </tuv>
    </tu>
    <tu>
      <note>revisar</note>
      <tuv lang="EN-US">
        <seg>The L&lt;Task::Kensho&gt; module has a list of recommended modules which
you should review as a good starting point.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T191926Z">
        <seg>El módulo L&lt;Task::Kensho&gt; incluye una lista de módulos recomendados que debe revisar; es un buen punto de partida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The L&lt;mro&gt; pragma provides some functions for manipulating the method
cache directly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T164514Z">
        <seg>El pragma L&lt;mro&gt; proporciona algunas funciones para manipular directamente la memoria caché de métodos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The L&lt;parent&gt; module is one of several ways that Perl lets you define
inheritance relationships.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T085216Z">
        <seg>El módulo L&lt;parent&gt; es una de las muchas formas disponibles en Perl para definir relaciones de herencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl 5 to-do list is maintained in the git repository, and can
be viewed at L&lt;http://perl5.git.perl.org/perl.git/blob/HEAD:/Porting/todo.pod&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160429T221651Z" creationid="explorer" creationdate="20160429T221651Z">
        <seg>Puede ver la lista de tareas pendientes de Perl 5 en el repositorio git: L&lt;http://perl5.git.perl.org/perl.git/blob/HEAD:/Porting/todo.pod&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl Foundation is an advocacy organization for the Perl language
which maintains the web site L&lt;http://www.perl.org/&gt; as a general
advocacy site for the Perl language.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T183230Z">
        <seg>The Perl Foundation es una organización que respalda al lenguaje Perl y mantiene el sitio web L&lt;http://www.perl.org/&gt; como recurso general de apoyo a Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl Review, L&lt;http://www.theperlreview.com&gt; maintains a website
and Google calendar
(L&lt;http://www.theperlreview.com/community_calendar&gt;) for tracking
workshops, hackathons, Perl Mongers meetings, and other events.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T184137Z">
        <seg>The Perl Review (L&lt;http://www.theperlreview.com&gt;) mantiene un sitio web y un calendario de Google (L&lt;http://www.theperlreview.com/community_calendar&gt;) que permiten hacer un seguimiento de talleres, hackathons y reuniones de Perl Mongers, entre otros eventos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl build system starts with the F&lt;Configure&gt; script in the root
directory.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080851Z">
        <seg>El sistema de compilación de Perl empieza por el script F&lt;Configure&gt; del directorio raíz.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl community has a rather large IRC presence.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T183205Z">
        <seg>La comunidad Perl tiene una presencia bastante importante en IRC.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl community is as diverse as Perl, and there is a large amount of
evidence that the Perl users apply TMTOWTDI to all endeavors, not just
programming.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T211821Z">
        <seg>La comunidad Perl es tan diversa como el lenguaje Perl, y hay una gran cantidad de evidencia de que los usuarios de Perl aplican a todo lo que hacen la filosofía TMTOWTDI (I&lt;se puede hacer de varias maneras&gt;), no solo a la programación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl community is geared toward supporting the most recent releases,
so you'll have an easier time finding help for those.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110329T230128Z">
        <seg>La comunidad Perl tiende a ofrecer soporte para las versiones más recientes, por lo que le costará menos encontrar ayuda para estas versiones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl core has an extensive test suite.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T213213Z">
        <seg>Existe un completo conjunto de pruebas del núcleo de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl core uses a handful of keys in C&lt;%^H&gt; which do not follow this
convention, because they predate it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T143226Z">
        <seg>En el núcleo de Perl se usan unas cuantas claves de C&lt;%^H&gt; que no siguen esta convención, ya que se definieron antes de que esta se estableciera.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl development team are called Perl 5 Porters, and their
organization is described at L&lt;http://perldoc.perl.org/perlpolicy.html&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T110227Z" creationid="explorer" creationdate="20160505T110227Z">
        <seg>El equipo de desarrollo de Perl se llama Perl 5 Porters, y su organización se describe en L&lt;http://perldoc.perl.org/perlpolicy.html&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl development team occasionally make changes to the
internal core of the language, but all possible efforts are made toward
backward compatibility.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T175221Z">
        <seg>Ocasionalmente, el equipo de desarrollo de Perl realiza cambios en los componentes internos del lenguaje, pero siempre se hace lo posible por mantener la compatibilidad con las versiones anteriores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl motto is "There's more than one way to do it."  Divining
how many more is left as an exercise to the reader.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T233925Z">
        <seg>El lema de Perl es "Se puede hacer de varias maneras". Dejamos como ejercicio para el lector averiguar de cuántas maneras se puede hacer  :-).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl source tree is big.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080557Z">
        <seg>El árbol de código fuente de Perl es frondoso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl test suite may still report some errors on the Hurd.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T203645Z">
        <seg>El conjunto de pruebas de Perl podría detectar errores en Hurd.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Perl warning "Wide character in ..." is caused by such a character.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T102405Z" creationid="explorer" creationdate="20150905T102405Z">
        <seg>La advertencia de Perl "Wide character in ..." (Carácter ancho en...) se debe a la presencia de un carácter de este tipo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Ram is a cookbook with hundreds of examples of using Perl to
accomplish specific tasks:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110526T102616Z">
        <seg>El "Libro del Carnero" es un recetario que incluye cientos de ejemplos del uso de Perl para realizar tareas específicas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The UTF8 flag, also called SvUTF8, is an internal flag that indicates that the
current internal representation is UTF-8.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T171715Z">
        <seg>La marca UTF8, conocida también como SvUTF8, es una marca interna que indica que la representación interna actual es UTF-8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The arrow operator
(C&lt;&lt; -&gt; &gt;&gt;) tells Perl that we are calling a method.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200219Z">
        <seg>El operador flecha (C&lt;&lt; -&gt; &gt;&gt;) le indica a Perl que se está llamando a un método.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The attributes for a file object might include
its path, content, and last modification time.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195419Z">
        <seg>Los atributos de un objeto que representa un archivo podrían incluir su ruta, el contenido y la hora de la última modificación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The behavior implied by the B&lt;use warnings&gt; pragma is not mandatory.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T154540Z" creationid="explorer" creationdate="20150513T111109Z">
        <seg>El pragma B&lt;use warnings&gt; implica un comportamiento que no es obligatorio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The binary operators C&lt;+&gt; C&lt;-&gt; C&lt;*&gt; C&lt;/&gt; C&lt;%&gt; C&lt;==&gt; C&lt;!=&gt; C&lt;E&lt;gt&gt;&gt; C&lt;E&lt;lt&gt;&gt;
C&lt;E&lt;gt&gt;=&gt; C&lt;E&lt;lt&gt;=&gt; and the unary operators C&lt;-&gt; C&lt;abs&gt; and C&lt;--&gt; will
attempt to convert arguments to integers.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T195849Z">
        <seg>Los operadores binarios C&lt;+&gt; C&lt;-&gt; C&lt;*&gt; C&lt;/&gt; C&lt;%&gt; C&lt;==&gt; C&lt;!=&gt; C&lt;E&lt;gt&gt;&gt; C&lt;E&lt;lt&gt;&gt; C&lt;E&lt;gt&gt;=&gt; y C&lt;E&lt;lt&gt;=&gt;, y los operadores unarios C&lt;abs&gt; y C&lt;--&gt;, intentan convertir los argumentos en enteros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The build system that Perl uses is called metaconfig. This system is
maintained separately from the Perl core.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T213320Z">
        <seg>Perl usa un sistema de compilación denominado metaconfig. El mantenimiento de este sistema se realiza por separado del mantenimiento del núcleo de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The caching of conversions (as described above) means that the integer
conversion does not throw away fractional parts on floating point numbers.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T193143Z">
        <seg>El almacenamiento en caché de las conversiones descritas arriba significa que la conversión a enteros no desecha las partes fraccionarias en los números de punto flotante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The caller is responsible for incrementing the reference count of the array
returned if it wants to keep the structure.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T225022Z">
        <seg>El código que llama debe encargarse de incrementar el contador de referencias del array devuelto si se quiere mantener la estructura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The child can
explicitly B&lt;override&gt; a parent's method to provide its own
implementation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T225454Z">
        <seg>La clase derivada puede B&lt;sobrescribir&gt; un método de la clase primaria para ofrecer su propia implementación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The choice is yours, but you do want to get
a module out for that server protocol.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T215756Z">
        <seg>La elección es suya, pero lo que está claro es que debe publicar un módulo para ese protocolo de servidor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class must at least provide a C&lt;parse_from_file&gt; method.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110808T213450Z">
        <seg>La clase debe proporcionar al menos un método C&lt;parse_from_file&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code above uses DB_File, but again it will work with any of the
DBM modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T132000Z">
        <seg>El código anterior usa DB_File, pero funcionará con cualquiera de los módulos DBM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code above uses SDBM_File, but it will work with any of the DBM
modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T154043Z">
        <seg>El código anterior usa SDBM_File, pero funcionará igual con todos los módulos DBM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The complete Perl documentation is available with the Perl distribution.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T091054Z">
        <seg>La distribución de Perl incluye la documentación completa de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The conditions can be any Perl expression.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T181953Z">
        <seg>Una condición puede ser cualquier expresión Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The constructor can also accept additional parameters that define the
object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T183645Z">
        <seg>El constructor también puede aceptar parámetros adicionales que definen el objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The core always sets I&lt;level&gt; to 0 when it calls your
function - the parameter is provided to allow your implementation to track
depth if it needs to recurse.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T220953Z">
        <seg>El núcleo siempre establece I&lt;level&gt; en 0 cuando se llama a la función; el parámetro se proporciona para permitir que su implementación pueda realizar un seguimiento de la profundidad en caso de que tenga que funcionar de manera recursiva.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The core development team (known as the Perl Porters)
are a group of highly altruistic individuals committed to
producing better software for free than you could hope to purchase for
money.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T210420Z">
        <seg>El equipo de desarrollo principal (denominado Perl Porters) está integrado por un grupo de personas de gran altruismo, dedicadas a producir gratuitamente software de mejor calidad que el que se podría obtener pagando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The current
leading implementation of Perl 6 is Rakudo, and you can learn more about
it at L&lt;http://rakudo.org&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T154342Z">
        <seg>Actualmente la implementación más avanzada de Perl 6 es Rakudo. Puede obtener más información en L&lt;http://rakudo.org&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The current leading implementation of Perl 6, Rakudo, released a "useful,
usable, 'early adopter'" distribution of Perl 6 (called Rakudo Star) in July of
2010.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T185442Z">
        <seg>El equipo que trabaja en Rakudo, la implementación más avanzada actualmente de Perl 6, publicó en julio de 2010 una distribución de Perl 6 "útil y utilizable, para pioneros", denominada Rakudo Star.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The current major release of Perl is Perl 5, first released in
1994.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T174846Z">
        <seg>Actualmente, la versión principal de Perl es Perl 5, que se lanzó en 1994.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The data can be aggregated into obvious structures, especially if
there's a large amount of data in each aggregate.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T102249Z">
        <seg>Los datos se pueden agregar en estructuras obvias, especialmente si hay una gran cantidad de datos en cada agregado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The days of just flinging strings around are over.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T213552Z">
        <seg>Actualmente ya no es posible trabajar con cadenas de texto de manera irreflexiva.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default argument to the C&lt;shift&gt; function just happens to be C&lt;@_&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T233514Z">
        <seg>El argumento predeterminado de la función C&lt;shift&gt; es C&lt;@_&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The defaults
are there for lazy systems programmers writing one-shot programs.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T221330Z">
        <seg>Los valores predeterminados son para los programadores de sistemas perezosos que escriben programas pequeños.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The deletion of a hash key from C&lt;%^H&gt; is recorded, and as ever can be
distinguished from the existence of a key with value C&lt;undef&gt; with
C&lt;exists&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T233402Z">
        <seg>La eliminación de una clave de hash de C&lt;%^H&gt; se registra y se puede distinguir de la existencia de una clave con valor C&lt;undef&gt; mediante C&lt;exists&gt;, de la manera habitual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The difference between a package
which is a class and one which isn't is based on how the package is
used.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195704Z">
        <seg>La diferencia entre un paquete que es una clase y uno que no lo es radica únicamente en cómo se utiliza.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The elements we're getting from the array start with a C&lt;$&gt; because
we're getting just a single value out of the array; you ask for a scalar,
you get a scalar.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T115810Z">
        <seg>Los nombres de los elementos que obtenemos del array empiezan por C&lt;$&gt; porque reciben valores individuales del array; si se pide un escalar, se obtiene un escalar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The email you got when you received your CPAN ID will tell you how to
log in to PAUSE, the Perl Authors Upload SErver.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T183604Z">
        <seg>En el mensaje de correo electrónico que recibió con el identificador de CPAN se incluyen instrucciones sobre cómo iniciar sesión en PAUSE (Perl Authors Upload Server, el servidor de carga para autores de módulos Perl).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The exceptions, C&lt;abs&gt;, C&lt;++&gt; and C&lt;--&gt;, do not change their
behavior with C&lt;use integer;&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T194624Z">
        <seg>Las excepciones son C&lt;abs&gt;, C&lt;++&gt; y C&lt;--&gt;, que no cambian su comportamiento con C&lt;use integer;&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The experimental versions may include features that
don't make it into the stable versions, and have an odd number as the
minor release (i.e. perl5.19.x, where 19 is the minor release).</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T110634Z" creationid="explorer" creationdate="20160505T110634Z">
        <seg>Las versiones experimentales pueden incluir características que no se incluyen en las versiones estables; en este caso el número de versión secundaria es un número impar (p. ej., perl5.19.x, donde 19 es la versión secundaria).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The fact that you can store such "large" numbers
does not mean that the I&lt;operations&gt; over these numbers will use all
of the significant digits.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T174239Z">
        <seg>El hecho de poder almacenar números tan "grandes" no significa que en las I&lt;operaciones&gt; con estos números se usen todos los dígitos significativos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The flag is useless for this
purpose, because it's off when an 8 bit encoding (by default ISO-8859-1) is
used to store the string.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120424T151921Z">
        <seg>La marca no debe utilizarse para este fin, ya que se desactiva cuando se usa una codificación de 8 bits (de manera predeterminada, ISO-8859-1) para almacenar la cadena.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example shows a 2 level hash of hash
structure using anonymous hash references.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T120027Z">
        <seg>En el ejemplo siguiente se muestra una estructura de hash de hashes de 2 niveles en la que se usan referencias de hash anónimas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The former is a simple compression tool; the latter permits
creation of multi-file archives.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003157Z">
        <seg>La primera es una simple herramienta de compresión; la segunda permite crear archivos de almacenamiento de varios archivos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The four C&lt;filter_*&gt; methods shown above are available in all the DBM
modules that ship with Perl, namely DB_File, GDBM_File, NDBM_File,
ODBM_File and SDBM_File.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T144919Z">
        <seg>Los cuatro métodos C&lt;filter_*&gt; mostrados arriba están disponibles en todos los módulos DBM incluidos en Perl: DB_File, GDBM_File, NDBM_File,
ODBM_File y SDBM_File.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The full explanation is in
L&lt;Encode&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T093148Z">
        <seg>Encontrará información detallada en L&lt;Encode&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The fully qualified method name that was called is available in the
C&lt;$AUTOLOAD&gt; package global for your class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T173000Z">
        <seg>El nombre completo del método llamado está disponible para su clase en la variable global de paquete C&lt;AUTOLOAD&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The function should return a reference to an array containing the parent
classes in order.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T215114Z">
        <seg>La función debe devolver una referencia a un array con las clases primarias ordenadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The historical
release dates can be viewed at L&lt;http://www.cpan.org/src/README.html&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T105617Z" creationid="explorer" creationdate="20160505T105617Z">
        <seg>En L&lt;http://www.cpan.org/src/README.html&gt; se pueden ver las fechas de lanzamiento históricas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The immediate, previous releases (i.e. perl5.14.x ) are usually maintained
for a while, although not at the same level as the current releases.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T105210Z" creationid="explorer" creationdate="20160505T105210Z">
        <seg>Las versiones anteriores más recientes (en este caso, perl5.18.x) suelen mantenerse durante un tiempo, aunque en menor medida que las versiones actuales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The implementation of individual components of the system is likely to
change over time.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T102541Z">
        <seg>Es probable que la implementación de componentes individuales del sistema cambie con el tiempo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The implementation of the C3 MRO and switchable MROs within the perl core was
written by Brandon L Black.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T215934Z">
        <seg>La aplicación del orden de resolución de métodos C3 y los órdenes de resolución de métodos intercambiables del núcleo de Perl son obra de Brandon L. Black.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The implementation provides a cache, in
which you can store a single C&lt;SV *&gt;, or anything that can be cast to
C&lt;SV *&gt;, such as C&lt;AV *&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T215321Z">
        <seg>La implementación proporciona una caché en la que puede almacenar un único C&lt;SV *&gt;, o cualquier cosa que se pueda convertir en C&lt;SV *&gt;, como un C&lt;AV *&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The interaction with the Perl compilation happens inside package C&lt;myint&gt;:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T232608Z">
        <seg>La interacción con la compilación de Perl tiene lugar dentro del paquete C&lt;entero&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The internal implementation uses the L&lt;version&gt;
module to make sure that different types of version numbers are
compared correctly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T162736Z">
        <seg>La implementación interna usa el módulo L&lt;version&gt; para comprobar que los diferentes tipos de números de versión se comparan de forma correcta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The invocant can either be a class
name or an object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T182929Z">
        <seg>El autor de la llamada puede ser un nombre de clase o un objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The item you want to look up.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110808T213821Z">
        <seg>El elemento que desea buscar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The job is never done until the paperwork
is over, so let's describe the change we've just made.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T160815Z">
        <seg>Para acabar el trabajo no queda más remedio que ocuparse del papeleo, así que vamos a describir el cambio que acabamos de hacer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The language is intended to be practical (easy to use, efficient,
complete) rather than beautiful (tiny, elegant, minimal).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T185002Z">
        <seg>El lenguaje se diseñó para ser práctico (fácil de usar, eficaz, completo), más que estético (reducido, elegante, minimalista).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The largest repository of Perl mailing lists is located at
L&lt;http://lists.perl.org&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T161909Z">
        <seg>El repositorio principal de listas de correo sobre Perl se encuentra en L&lt;http://lists.perl.org&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The latest versions are probably the least deployed and widely tested, so
you may want to wait a few months after their release and see what
problems others have if you are risk averse.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T175632Z">
        <seg>Las versiones más recientes suelen estar menos implementadas y probadas. Si no le gusta arriesgar, es posible que prefiera esperar unos meses para ver qué problemas detectan los usuarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The latest versions of perl have more bug fixes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T201614Z">
        <seg>Las versiones más recientes de perl incorporan más correcciones de errores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The left hand side of the method invocation (or arrow) operator is the
object (or class name), and the right hand side is the method name.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T212526Z">
        <seg>La parte situada a la izquierda del operador de invocación de método (flecha) es el objeto (o nombre de clase) y la parte situada a la derecha es el nombre del método.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The level at which you pitch
it is up to you: you might want protocol-level modules analogous to
L&lt;Net::SMTP|Net::SMTP&gt; which then talk to higher level modules analogous
to L&lt;Mail::Send|Mail::Send&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T185744Z">
        <seg>El nivel al que desee afrontar la tarea es cosa suya: puede que desee crear módulos de nivel de protocolo análogos a L&lt;Net::SMTP|Net::SMTP&gt; para comunicarse con módulos de nivel superior análogos a L&lt;Mail::Send|Mail::Send&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main interface to Perl's documentation is C&lt;perldoc&gt;, although
if you're reading this, it's more than likely that you've already found
it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T151918Z">
        <seg>Como ya sabe, la interfaz principal de la documentación de Perl es C&lt;perldoc&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main problem with
multiple inheritance is that it greatly complicates method resolution.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T163538Z">
        <seg>El problema de la herencia múltiple es que complica enormemente la resolución de métodos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main program file and each module it loads are
compilation units, as are string C&lt;eval&gt;s, run-time code compiled using the
C&lt;(?{ })&gt; construct in a regex, calls to C&lt;do FILE&gt;, C&lt;require FILE&gt;,
and code after the C&lt;-e&gt; switch on the command line.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T140902Z" creationid="explorer" creationdate="20150905T140902Z">
        <seg>El archivo del programa principal y cada módulo que carga son
unidades de compilación, como lo son los resultados de aplicar C&lt;eval&gt; a cadenas, el código compilado en tiempo de ejecución con la
construcción C&lt;(?{ })&gt; en una expresión regular, las llamadas a C&lt;do FILE&gt;, C&lt;require FILE&gt;,
 o el código que hay a continuación del modificador C&lt;-e&gt; en la línea de comandos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main symbol table's name is thus
C&lt;%main::&gt;, or C&lt;%::&gt; for short.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T111901Z">
        <seg>Así, el nombre de la tabla de símbolos de C&lt;main&gt; es C&lt;%main::&gt;, y se puede abreviar como C&lt;%::&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main way they do this is by abstracting the solution into a Perl
module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T172219Z">
        <seg>La forma principal de compartir código es abstraer la solución en un módulo Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The maintenance versions are stable, and
have an even number as the minor release (i.e. perl5.18.x, where 18 is the
minor release).</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T110522Z" creationid="explorer" creationdate="20160505T110522Z">
        <seg>Las versiones de mantenimiento son estables; en estas versiones se utiliza un número par como número de versión secundaria (p. ej., perl5.18.x, donde 18 es el número de versión secundaria).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The major reference book on Perl, written by the creator of Perl, is
I&lt;Programming Perl&gt;:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110427T232022Z">
        <seg>El principal libro de referencia sobre Perl, escrito por el creador del lenguaje, es I&lt;Programming Perl&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The master web site for CPAN is L&lt;http://www.cpan.org/&gt;,
L&lt;http://www.cpan.org/SITES.html&gt; lists all mirrors.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T194016Z">
        <seg>El sitio web principal de CPAN está en L&lt;http://www.cpan.org/&gt;.
En L&lt;http://www.cpan.org/SITES.html&gt; encontrará una lista de todos los servidores reflejados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The metaconfig system has its own git repository.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080910Z">
        <seg>El sistema metaconfig tiene su propio repositorio git.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The methods associated with a file might include C&lt;rename()&gt; and
C&lt;write()&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T123816Z">
        <seg>Los métodos asociados a un archivo podrían incluir C&lt;renombrar()&gt; y
C&lt;escribir()&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The minimal implementation of the package C&lt;MyMaths&gt; would be something like
this:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110819T101429Z">
        <seg>Una implementación mínima del paquete C&lt;MisOperadores&gt; podría ser:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The modern convention for OO modules is to always use C&lt;new&gt; as the
name for the constructor, but there is no requirement to do so.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T153511Z">
        <seg>El convenio actual en los módulos orientados a objetos es usar siempre C&lt;new&gt; como nombre para el constructor, aunque esto no es obligatorio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most important thing is to run your programs under the B&lt;-w&gt;
flag at all times.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T132143Z">
        <seg>Lo más importante es ejecutar siempre los programas con la opción B&lt;-w&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most well known of these is C&lt;%ENV&gt; which contains environment
variables.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234547Z">
        <seg>El más conocido es C&lt;%ENV&gt;, que contiene variables de entorno.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name C&lt;new&gt; isn't special.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T125454Z">
        <seg>El nombre C&lt;new&gt; no es especial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the interpreter (the program which runs the Perl script)
is "perl" with a lowercase "p".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T205918Z">
        <seg>El nombre del intérprete (el programa que ejecuta el script Perl)
es "perl" (se escribe con "p" minúscula).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The names of the classes should be the result of calling
C&lt;HvENAME()&gt; on the stash.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T215132Z">
        <seg>Los nombres de las clases deben ser el resultado de llamar a C&lt;HvENAME()&gt; en el hash de tabla de símbolos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The number after Perl (i.e. the 5 after Perl 5) is the major release
of the perl interpreter as well as the version of the language.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T002445Z">
        <seg>El número que va detrás de Perl (el 5 de Perl 5) es la versión principal del intérprete de Perl (es decir, perl), así como la versión del lenguaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The number of
characters is no longer known, because characters only exist in text strings.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T223236Z">
        <seg>Ya no se podrá saber cuál es el número de caracteres, puesto que los caracteres solo existen en las cadenas de texto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The object systems that we recommend below all
automate the generation of accessor methods.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185147Z">
        <seg>Los sistemas de orientación a objetos que se recomiendan a continuación automatizan la generación de los métodos de acceso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The old "gnu-0.2"
binary distribution will most certainly have additional problems.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110731T222256Z">
        <seg>Con toda seguridad habrá más problemas en la distribución binaria anterior, "gnu-0.2".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The old home for the module tests, you shouldn't put anything new in
here.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T202125Z">
        <seg>Antiguo directorio de las pruebas de módulos. No debe colocar nada aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The old package delimiter was a single quote, but double colon is now the
preferred delimiter, in part because it's more readable to humans, and
in part because it's more readable to B&lt;emacs&gt; macros.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T174520Z">
        <seg>Anteriormente, el delimitador de paquete era una simple comilla, pero ahora se usa un doble signo de dos puntos, en parte porque es más legible para los humanos y también porque es más legible para las macros de B&lt;emacs&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The one that was stuffed away by C&lt;local()&gt; and which will be
restored when the block ends.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T112324Z">
        <seg>la que fue reemplazada por C&lt;local()&gt; y que será restaurada cuando finalice el bloque.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only difference between them is the
place that the filter is installed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T153217Z">
        <seg>La única diferencia entre ellos es el lugar en el que se instala el filtro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only difference is that you're now
using characters instead of bytes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T223353Z">
        <seg>La única diferencia es que ahora trabajamos con caracteres en lugar de bytes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only implication of the term "native" on integers is that the limits for
the maximal and the minimal supported true integral quantities are close to
powers of 2.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T195742Z">
        <seg>La única implicación del término "nativo" para los enteros es que los límites máximo y mínimo de las cantidades verdaderamente enteras admitidas son cercanos a potencias de 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only one you
need to know about for now is C&lt;$_&gt; which is the "default variable".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T231415Z">
        <seg>La única que tiene que conocer por ahora es C&lt;$_&gt;, la "variable predeterminada".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only parameter
that you can pass to C&lt;has&gt; is C&lt;is&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185620Z">
        <seg>El único parámetro que puede pasar a C&lt;has&gt; es C&lt;is&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The optree is shared between threads.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T234029Z">
        <seg>El árbol sintáctico de operaciones se comparte entre hilos de ejecución.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The order in which objects are destroyed during the global destruction
before the program exits is unpredictable.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T183106Z">
        <seg>El orden en que se destruyen los objetos durante la destrucción global antes de que finalice la ejecución del programa no se puede predecir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ordinal
value of a character is called a B&lt;code point&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110403T225501Z">
        <seg>El valor ordinal de un carácter se denomina B&lt;código de carácter&gt; (I&lt;code point&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The organizational rules really just boil down to one: Larry is always
right, even when he was wrong.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T110333Z" creationid="explorer" creationdate="20160505T110333Z">
        <seg>Sus normas de organización se resumen en una: Larry siempre tiene la razón, incluso cuando no la tenga.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The original culture of the pre-populist Internet and the deeply-held
beliefs of Perl's author, Larry Wall, gave rise to the free and open
distribution policy of Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T150422Z">
        <seg>La cultura de Internet existente antes de que "la red" se convirtiera en un fenómeno de masas, y las firmes convicciones de Larry Wall, el creador de Perl, dieron lugar a la política de distribución libre y abierta de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The other
difference is that seeing the first C&lt;require&gt; clues in the compiler
that uses of indirect object notation involving "SomeModule", as
in C&lt;$ob = purge SomeModule&gt;, are method calls, not function calls.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T084251Z">
        <seg>La otra diferencia consiste en que C&lt;require&gt; indica al compilador que se usa la sintaxis indirecta de objetos en relación a "MiModulo", de forma que las expresiones del estilo C&lt;$ob = purge MiModulo&gt; indican llamadas a métodos y no llamadas a funciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The package
statement declares the compilation unit as being in the given
namespace.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T173900Z">
        <seg>La instrucción C&lt;package&gt; declara que la unidad de compilación está en el espacio de nombres especificado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The package variable C&lt;@EXPORT&gt; will determine which symbols will get
exported when the caller simply says C&lt;use Net::Acme&gt; - you will hardly
ever want to put anything in there.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T214849Z">
        <seg>La variable de paquete C&lt;@EXPORT&gt; determina qué símbolos se exportan cuando en el código que llama solo se usa C&lt;use Net::Acme&gt;. Es muy probable que nunca tenga que colocar nada aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The principle of encapsulation tells us that we should
not rely on this.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T163834Z">
        <seg>El principio de encapsulación nos dice que no deberíamos basarnos en esta característica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The private data cache will take ownership of a reference to private_sv,
much the same way that C&lt;hv_store()&gt; takes ownership of a reference to the
value that you pass it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T215425Z">
        <seg>La caché de datos privada se apropiará de una referencia a private_sv, de la misma manera que C&lt;hv_store()&gt; asumirá la propiedad de una referencia al valor que le pase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The process of determining what method should be used is called
B&lt;method resolution&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184920Z">
        <seg>El proceso de determinar qué método debe usarse se denomina
B&lt;resolución de métodos&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The pseudo-hash feature was an experimental feature introduced in
earlier versions of Perl and removed in 5.10.0.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T004633Z">
        <seg>Los seudohashes se incluyeron de forma experimental en las primeras versiones de Perl y se eliminaron en la versión 5.10.0.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The rationale for requiring this is to not break older programs that
rely on the way things worked before Unicode came along.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T001521Z">
        <seg>Esto se hace así para evitar que dejen de funcionar programas antiguos, que se basan en el funcionamiento anterior a la creación de Unicode.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The regression tests for each operator live in F&lt;t/op/&gt;, and so we make
a copy of F&lt;t/op/pack.t&gt; to F&lt;t/op/pack.t~&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T153541Z">
        <seg>Las pruebas de regresión para cada operador se encuentran en F&lt;t/op/&gt;, así que hacemos una copia de F&lt;t/op/pack.t&gt; en F&lt;t/op/pack.t~&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The relevant
place is F&lt;pod/perlfunc.pod&gt;; again, we make a copy, and then we'll
insert this text in the description of C&lt;pack&gt;:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T160826Z">
        <seg>El lugar correspondiente es F&lt;pod/perlfunc.pod&gt;. Una vez más, hacemos antes una copia de seguridad y después insertamos el texto siguiente en la descripción de C&lt;pack&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The results end up in C&lt;$1&gt;, C&lt;$2&gt; and so on.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T232457Z">
        <seg>Los resultados se almacenan en C&lt;$1&gt;, C&lt;$2&gt;, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The results of creating new symbol table entries directly or modifying any
entries that are not already typeglobs are undefined and subject to change
between releases of perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T180202Z">
        <seg>El resultado de crear directamente nuevas entradas en la tabla de símbolos o de modificar cualquier entrada que no sea ya un I&lt;typeglob&gt; no está definido y puede estar sujeto a cambios entre versiones de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The return code from the filter is ignored.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110819T095628Z">
        <seg>Se omite el código de retorno del filtro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The scope of the package declaration is from the
declaration itself through the end of the enclosing block, C&lt;eval&gt;,
or file, whichever comes first (the same scope as the my() and
local() operators).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T110404Z">
        <seg>El ámbito de la declaración de paquete abarca desde la declaración misma hasta el final del bloque, de la función C&lt;eval&gt; o del archivo actuales, lo que aparezca antes (es el mismo ámbito que el de los operadores my() y local()).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second
case does not, and would have to be specified literally.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170337Z">
        <seg>En el segundo caso no es así, y debe especificarse de forma literal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second form is strongly discouraged, because it breaks the ability
of a subclass to reuse the parent's constructor, but you may still run
across it in existing code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T224505Z">
        <seg>La segunda forma se desaconseja rotundamente, ya que impide que la subclase reutilice el constructor de la clase primaria, pero aún se puede ver en código existente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The similarity to the title of the major
Perl book (which came later) is not completely accidental:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120611T195230Z">
        <seg>La similitud con el título del libro principal de Perl (que se publicó posteriormente) no es totalmente accidental:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The socket tests may fail if the network is not configured.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T203703Z">
        <seg>Si la red no está configurada, las pruebas de sockets pueden generar errores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The special symbol C&lt;__PACKAGE__&gt; contains the current package, but cannot
(easily) be used to construct variable names.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T135058Z">
        <seg>El símbolo especial C&lt;__PACKAGE__&gt; contiene el paquete actual, pero no puede usarse (fácilmente) para crear nombres de variables.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The special variable C&lt;$#array&gt; tells you the index of the last element
of an array:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234112Z">
        <seg>La variable especial C&lt;$#array&gt; indica el índice del último elemento de un array:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The standard but antiquated F&lt;dumpvar.pl&gt; library and
the CPAN module Devel::Symdump make use of this.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T150627Z">
        <seg>La biblioteca estándar (aunque anticuada) F&lt;dumpvar.pl&gt; y el módulo Devel::Symdump de CPAN lo usan.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The standard release of Perl (the one maintained by the Perl
development team) is distributed only in source code form.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T151004Z">
        <seg>La versión estándar de Perl (la mantenida por el equipo de desarrollo de perl) sólo se distribuye en forma de código fuente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The state information in C&lt;%^H&gt; is
stored in the optree, and can be retrieved read-only at runtime with C&lt;caller()&gt;,
at index 10 of the list of returned results.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T234015Z">
        <seg>La información de estado de C&lt;%^H&gt; se almacena en el árbol sintáctico de operaciones y se puede recuperar como información de solo lectura en tiempo de ejecución mediante C&lt;caller()&gt;, en el índice 10 de la lista de resultados devueltos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The symbol table for a package happens to be stored in the hash of that
name with two colons appended.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T175919Z">
        <seg>La tabla de símbolos de un paquete se almacena en el hash cuyo nombre es el nombre del paquete con un doble signo de dos puntos anexado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The syntax for encoding text strings to binary strings is as simple as decoding:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T200429Z">
        <seg>La sintaxis para codificar cadenas de texto en cadenas binarias es tan sencilla como la sintaxis de descodificación:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The system being designed is large, or is likely to become large.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T102237Z">
        <seg>El sistema que se está diseñando es grande o puede llegar a serlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The system design is already object-oriented.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T102550Z">
        <seg>El diseño del sistema ya es orientado a objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The term "native" does not mean quite as much when we talk about native
integers, as it does when native floating point numbers are involved.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T200145Z">
        <seg>En el caso de los enteros nativos, el término "nativo" no tiene las mismas implicaciones que para los números de punto flotante nativos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The thing that gives this away is the fact that you can
have B&lt;more than one&gt; of these code blocks in a program, and they will get
B&lt;all&gt; executed at the appropriate moment.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T113343Z">
        <seg>Esto es así porque se puede incluir B&lt;más de uno&gt; de estos bloques de código en un programa y B&lt;todos&gt; ellos se ejecutarán en el momento adecuado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The three principal virtues of a programmer are Laziness,
Impatience, and Hubris.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110214T002610Z">
        <seg>Las tres virtudes principales de un buen programador son la pereza, la impaciencia y la confianza en sí mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tutorial and FAQ assume the latest release.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T003916Z">
        <seg>En el tutorial y en las preguntas más frecuentes se supone que usa la versión más reciente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tutorial started in the Llama continues in the Alpaca, which
introduces the intermediate features of references, data structures,
object-oriented programming, and modules:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110604T225349Z">
        <seg>El tutorial iniciado en el Libro de la Llama continúa en el Libro de la Alpaca, que presenta material de nivel intermedio, como referencias, estructuras de datos, programación orientada a objetos y módulos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tutorial uses UTF-8
consistently, even where utf8 is actually used internally, because the
distinction can be hard to make, and is mostly irrelevant.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T003236Z">
        <seg>En este tutorial se usa siempre UTF-8, incluso para los casos en que se use utf8 internamente, ya que esta distinción puede resultar difícil de apreciar y además suele ser irrelevante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The two additional lines request from perl to catch various common
problems in your code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T001039Z">
        <seg>Estas dos líneas adicionales ordenan a perl que detecte diversos problemas comunes en el código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The two are complementary, not mutually exclusive.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T153528Z">
        <seg>Estos dos lenguajes no son mutuamente excluyentes, sino que se complementan.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The two statements:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170220Z">
        <seg>Las dos instrucciones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The typical input/output flow of a program is:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T200947Z">
        <seg>El flujo de entrada/salida típico de un programa es:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The typical interactions between pieces of data are best represented by
operators.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T164615Z">
        <seg>Las interacciones típicas entre elementos de datos se representan mejor mediante operadores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The upshot of all this is that Perl cannot store a number like
12345678901234567 as a floating point number on such architectures without
loss of information.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T200323Z">
        <seg>Como consecuencia, Perl no puede almacenar un número como 12345678901234567 en forma de número de punto flotante para estas arquitecturas sin pérdida de información.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The user simply calls
documented methods on the object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T082744Z">
        <seg>El usuario únicamente llama a los métodos documentados del objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value in each entry of the hash is what you are referring to when you
use the C&lt;*name&gt; typeglob notation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T180103Z">
        <seg>Usamos la notación C&lt;*nombre&gt; para hacer referencia al valor de cada entrada del hash.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value is passed
direct as the parameter I&lt;kflags&gt; to C&lt;hv_common()&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T224151Z">
        <seg>El valor se pasa directamente como el parámetro I&lt;kflags&gt; a C&lt;hv_common()&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value of a character (C&lt;ord&gt;, C&lt;chr&gt;) is the corresponding Unicode code
point.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T222703Z">
        <seg>El valor de un carácter (C&lt;ord&gt;, C&lt;chr&gt;) es el código de carácter Unicode correspondiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value of an attribute may itself be another object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184421Z">
        <seg>El valor de un atributo puede ser a su vez otro objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The variables are scoped to the block
(i.e. a bunch of statements surrounded by curly-braces) in which they
are defined.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T212717Z">
        <seg>El ámbito de las variables es el bloque (conjunto de instrucciones entre llaves) en el que se definen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The various types of data aggregate form a natural hierarchy that
facilitates the use of inheritance and polymorphism.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185241Z">
        <seg>Los distintos tipos de datos agregados forman una jerarquía natural que facilita el uso de la herencia y el polimorfismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The work isn't over until the paperwork is done, and you're going to
need to put in some time writing some documentation for your module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T190808Z">
        <seg>No habrá acabado el trabajo hasta que tenga listo el papeleo. Tiene que dedicar algo de tiempo a escribir la documentación del módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then for each possible format character, we swallow up
the other arguments in the pattern (a field width, an asterisk, and so
on) and convert the next chunk input into the specified format, adding
it onto the output SV C&lt;cat&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T153103Z">
        <seg>Luego, para cada carácter de formato posible, se consumen los demás argumentos del patrón (un ancho de campo, un asterisco, etc.) y se convierte el siguiente fragmento de entrada al formato especificado, agregándolo al SV de salida, C&lt;cat&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then go on to declare and use your variables in functions without
any qualifications.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T083602Z">
        <seg>A continuación, puede declarar y usar sus variables en funciones sin calificarlas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then it introduces several different OO systems from
L&lt;CPAN|http://search.cpan.org&gt; which build on top of what Perl
provides.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T171301Z">
        <seg>A continuación presenta varios sistemas diferentes de orientación a objetos, disponibles en
L&lt;CPAN|http://search.cpan.org&gt;, construidos sobre la base proporcionada por Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then move the files (probably just the F&lt;.pm&gt; files, though there
may be some additional ones, too; check the module documentation)
to their final destination: This will
most likely be in C&lt;$ENV{MACPERL}site_lib:&gt; (i.e.,
C&lt;HD:MacPerl folder:site_lib:&gt;).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T012349Z">
        <seg>A continuación, mueva los archivos (probablemente sólo los archivos F&lt;.pm&gt;, aunque puede que tenga que mover otros archivos; revise la documentación del módulo) hasta su destino final, que probablemente sea C&lt;$ENV{MACPERL}site_lib:&gt; (es decir, C&lt;HD:Carpeta MacPerl:site_lib:&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then run the following script (or something like it):</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T002656Z">
        <seg>A continuación, ejecute el siguiente script (o algo parecido):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then type this to create
the DESCRIP.MMS for the module:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003316Z">
        <seg>A continuación, ejecute el comando siguiente para crear el archivo DESCRIP.MMS del módulo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then use it like:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T235306Z">
        <seg>Puede asignar el valor devuelto así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then you can use the modules from your Perl
programs with C&lt;use lib "/my/perl_directory/lib/site_perl";&gt; or
sometimes just C&lt;use "/my/perl_directory";&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T005633Z">
        <seg>Para poder usar estos módulos en sus programas Perl, debe agregar C&lt;use lib "/mi/directorio_perl/lib/site_perl";&gt; al principio del programa o, en algunos casos, simplemente C&lt;use "/mi/directorio_perl";&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then you know
exactly how many bytes it will be in the destination string.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T221341Z">
        <seg>Así podrá saber exactamente cuántos bytes hay en la cadena generada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There
are other object orientation paradigms as well.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T123021Z">
        <seg>Hay otros paradigmas de orientación a objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a couple of special arrays too, such as C&lt;@ARGV&gt; (the command
line arguments to your script) and C&lt;@_&gt; (the arguments passed to a
subroutine).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T181330Z">
        <seg>También hay dos arrays especiales: C&lt;@ARGV&gt; (los argumentos de línea de comandos pasados al script) y C&lt;@_&gt; (los argumentos pasados a una subrutina).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a few basic principles which define object oriented Perl:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T124127Z">
        <seg>La orientación a objetos en Perl se define mediante unos pocos principios básicos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a few platform-specific directories which
contain C code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204705Z">
        <seg>Hay algunos directorios específicos de la plataforma que contienen código C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a lot of
modules on CPAN that can help you write safer and more concise code,
including the modules we recommend in L&lt;perlootut&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T210711Z">
        <seg>Hay muchos módulos de CPAN (como los módulos recomendados en el documento L&lt;perlootut&gt;) que pueden ayudarle a escribir código más conciso y seguro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a lot of modules on CPAN, and it's easy to miss one that's
similar to what you're planning on contributing.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T172947Z">
        <seg>En CPAN hay muchos módulos, por lo que es fácil pasar por alto alguno similar al que pretende publicar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a number of "magic" scalars with names that look like
punctuation or line noise.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T181040Z">
        <seg>Hay varios escalares "mágicos" con nombres que recuerdan conjuntos de signos de puntuación (o "ruido de señal").</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a set of utilities which help you in developing Perl programs, 
and in particular, extending Perl with C.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T154144Z">
        <seg>A continuación se describe un conjunto de utilidades que ayudan a desarrollar programas Perl y, en particular, a extender Perl con código C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are also many
other sub-domains for special topics like learning Perl and jobs in Perl,
such as:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T194329Z">
        <seg>Además, existen muchos subdominios dedicados a temas específicos, como el aprendizaje de Perl, o anuncios de puestos de trabajo para programadores Perl. Por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are also plenty of Perl related newsgroups located under
C&lt;comp.lang.perl.*&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T162328Z">
        <seg>También encontrará muchos grupos de noticias relacionados con Perl en C&lt;comp.lang.perl.*&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are also several utilities
which are used by the Perl distribution itself as part of the install
process.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110716T203930Z">
        <seg>algunas de ellas se usan durante el proceso de instalación de la distribución.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are basically three categories
of modules that will not work "out of the box" with all
platforms (with some possibility of overlap):</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003545Z">
        <seg>Hay básicamente tres tipos de módulos que no funcionan en todas las plataformas sin acciones adicionales (es posible que estos tipos se solapen):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are four steps you must now
take:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T005508Z">
        <seg>A continuación debe realizar cuatro pasos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are literally dozens of other OO-related modules on CPAN besides
those covered here, and you're likely to run across one or more of them
if you work with other people's code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T170051Z">
        <seg>En CPAN encontrará decenas de módulos relacionados con la orientación a objetos, además de los considerados aquí; es posible que se encuentre con varias de estas alternativas si trabaja con código de otras personas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many Perl L&lt;mailing lists|lists.perl.org&gt; for various
topics, specifically the L&lt;beginners list|http://lists.perl.org/list/beginners.html&gt;
may be of use.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T191555Z">
        <seg>Existen muchas L&lt;listas de correo|lists.perl.org&gt; sobre diversos temas relacionados con Perl. En concreto, la L&lt;lista para principiantes|http://lists.perl.org/list/beginners.html&gt; puede resultar útil cuando se empieza.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many Perl-related
websites, so only a few of the community's largest are mentioned here.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120407T140219Z">
        <seg>Hay muchos sitios web relacionados con Perl, por lo que aquí solo se mencionan algunos de los más importantes de la comunidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many books on Perl and Perl-related.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110427T232301Z">
        <seg>Hay muchos libros sobre Perl o relacionados con Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many good L&lt;books on Perl|http://www.perl.org/books/library.html&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T190649Z">
        <seg>Se han publicado muchos L&lt;libros sobre Perl|http://www.perl.org/books/library.html&gt; de gran calidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many, many code points, but computers work with bytes, and a byte has
room for only 256 values.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T213911Z">
        <seg>Hay muchísimos códigos de carácter, pero el hardware trabaja con bytes, y un byte sólo puede representar 256 valores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are more Unicode encodings, but much of
the world has standardized on UTF-8.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T215519Z">
        <seg>Hay otras codificaciones de Unicode, pero UTF-8 se está convirtiendo en la codificación estándar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are no relative packages: all symbols
are either local to the current package, or must be fully qualified
from the outer package name down.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T175005Z">
        <seg>No hay paquetes relativos: todos los símbolos deben ser locales con respecto al paquete actual o deben aparecer completamente calificados, comenzando por el paquete más externo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are other documents which might contain the information that you're
looking for:</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T140048Z" creationid="explorer" creationdate="20150905T140048Z">
        <seg>Hay otros documentos que pueden contener la información que está
buscando:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are probably very nice books published after this list
was included in your Perl release, and you can check the latest
released version at http://perldoc.perl.org/perlbook.html .</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110604T233409Z">
        <seg>Es probable que se hayan publicado libros muy interesantes desde que se incluyó la lista en esta versión de Perl. Si lo desea, puede consultar la versión más reciente de la lista en http://perldoc.perl.org/perlbook.html .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are quite a few systems out there that do worse!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T203739Z">
        <seg>En muchos sistemas los resultados obtenidos son peores...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are rare cases where this package-based resolution can be a
problem.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162726Z">
        <seg>Hay casos especiales en los que la resolución basada en paquetes puede ser problemática.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are really two tracks of perl development: a maintenance version
and an experimental version.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T165114Z">
        <seg>Hay dos líneas de desarrollo de perl: una versión de mantenimiento y una versión experimental.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several great resources for locating workshops: the
L&lt;websites|"Websites"&gt; mentioned above, the
L&lt;calendar|"Calendar of Perl Events"&gt; mentioned below, and the YAPC Europe
website, L&lt;http://www.yapceurope.org/&gt;, which is probably the best resource for
European Perl events.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T214236Z">
        <seg>Tiene a su disposición varios recursos muy útiles para encontrar talleres: los L&lt;Sitios web|"Sitios web"&gt; mencionados anteriormente, el L&lt;calendario|"Calendario de eventos Perl"&gt; que se menciona más adelante y el sitio web de YAPC Europe, L&lt;http://www.yapceurope.org/&gt;, que es probablemente el mejor recurso para los eventos Perl en Europa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are some shortcuts for oneliners;
see L&lt;-C|perlrun/-C [numberE&lt;sol&gt;list]&gt; in L&lt;perlrun&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T143659Z">
        <seg>Existen algunos métodos abreviados para scripts de una línea (I&lt;one-liners&gt;); vea la descripción del modificador L&lt;-C|perlrun/-C [numberE&lt;sol&gt;list]&gt; en L&lt;perlrun&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are still some bits and pieces hanging around in here that
need to be moved.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110816T111132Z">
        <seg>Aún quedan cosas que deben moverse a otra parte.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are too many modules, and too few Orwants, for me to be able to
answer or even acknowledge all your questions.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T011808Z">
        <seg>Hay demasiados módulos y muy pocos Orwants; no puede resolver, ni tan siquiera contestar, todas las dudas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two common types of accessors, read-only and read-write.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T205847Z">
        <seg>Hay dos tipos comunes de métodos de acceso: de solo lectura y de lectura y escritura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There have been
some complaints that it should restore the UTF8 flag when the data is read
again with C&lt;eval&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120424T092139Z">
        <seg>Algunas personas se han quejado de que no restaura la marca UTF8 cuando se vuelven a leer los datos con C&lt;eval&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is
overlap in the communities, and this overlap fosters the tradition of sharing
and borrowing that have been instrumental to Perl's success.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T195549Z">
        <seg>Las comunidades se solapan, y este solapamiento fomenta la tradición de compartir y tomar prestado que ha sido clave para el éxito de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a bug in FreeBSD's
C&lt;readdir_r&gt; function in versions 4.5 and earlier that can cause a SEGV when
reading large directories.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T221924Z">
        <seg>En las versiones 4.5 y anteriores de FreeBSD existe un error en la función  C&lt;readdir_r&gt; que provocará un SEGV si se leen directorios grandes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a central directory for the Perl community: L&lt;http://perl.org&gt;
maintained by the Perl Foundation (L&lt;http://www.perlfoundation.org/&gt;),
which tracks and provides services for a variety of other community sites.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T175006Z">
        <seg>Existe un directorio central para la comunidad Perl, L&lt;http://perl.org&gt;, mantenido por la Fundación Perl (The Perl Foundation, L&lt;http://www.perlfoundation.org/&gt;), que además de prestar servicios a diversos sitios web de la comunidad, realiza un seguimiento de los mismos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a list
of these books, some with extensive reviews, at http://books.perl.org/
.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150910T221659Z" creationid="explorer" creationdate="20150513T111855Z">
        <seg>En http://books.perl.org/
encontrará una lista de estos libros. De algunos de ellos se incluyen extensas reseñas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a rich ecosystem of C&lt;Moose&gt; extensions on CPAN under the
L&lt;MooseX|http://search.cpan.org/search?query=MooseX&amp;mode=dist&gt;
namespace.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T170933Z">
        <seg>Existe un variado ecosistema de extensiones de C&lt;Moose&gt; en CPAN, en el espacio de nombres L&lt;MooseX|http://search.cpan.org/search?query=MooseX&amp;mode=dist&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a very large
and supportive user community and an extensive literature.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211520Z">
        <seg>Tiene una gran comunidad de usuarios y existe mucha información sobre el lenguaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is an incompatibility in
OpenBSD's C&lt;getprotobyname_r&gt; and C&lt;getservbyname_r&gt; function in versions 3.7
and later that will cause a SEGV when called without doing a C&lt;bzero&gt; on
their return structs prior to calling these functions.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T160222Z">
        <seg>En las versiones 3.7 y posteriores de OpenBSD existe una incompatibilidad en las funciones C&lt;getprotobyname_r&gt; y C&lt;getservbyname_r&gt; que provocará un SEGV si se llama a estas funciones sin haber aplicado antes la función C&lt;bzero&gt; a sus estructuras de retorno.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is no expectation that a module under F&lt;ext/&gt;
will work with earlier versions of Perl 5.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T120628Z" creationid="explorer" creationdate="20150513T120628Z">
        <seg>No se espera que un módulo de F&lt;ext/&gt;
pueda trabajar con versiones anteriores de Perl 5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is no need
to pre-declare your variable types, but you have to declare them using
the C&lt;my&gt; keyword the first time you use them.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T001443Z">
        <seg>No es necesario predeclarar los tipos de las variables, pero éstas deben declararse con la palabra clave C&lt;my&gt; la primera vez que se usan.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is no need to have a C&lt;main()&gt; function or anything of
that kind.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T180800Z">
        <seg>Es decir, no es necesario utilizar una función C&lt;main()&gt; ni nada similar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is no special class syntax in Perl, but a package may act
as a class if it provides subroutines to act as methods.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T082809Z">
        <seg>No hay una sintaxis especial para clases en Perl, pero un paquete puede actuar como una clase si proporciona subrutinas que se comportan como métodos. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is no way to reliably detect the encoding automatically, so if people
keep sending you data without charset indication, you may have to educate them.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T004946Z">
        <seg>No existe una manera fiable de detectar automáticamente la codificación, por lo que es mejor enseñar a las personas que le suministran datos a indicar el juego de caracteres utilizado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is often a matter of opinion and taste, and there isn't any one
answer that fits everyone.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110329T230248Z">
        <seg>Esto suele ser una cuestión de opinión y gusto, y no hay una respuesta definitiva para todos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is one subtle difference between the following statements:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T180312Z">
        <seg>Existe una sutil diferencia entre las instrucciones siguientes:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is only a single C&lt;%^H&gt;, but arbitrarily many modules that want
to use its scoping semantics.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T142230Z">
        <seg>Solo hay un único hash C&lt;%^H&gt;, pero puede haber muchos módulos que deseen usar su semántica de definición de ámbito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There's
really no good reason to write your classes from scratch in Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T164721Z">
        <seg>No hay ninguna razón para empezar a escribir clases desde cero.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There's a lot to know about character sets, and text encodings.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110212T153216Z">
        <seg>Hay mucho que aprender sobre juegos de caracteres y codificaciones de texto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There's also I&lt;$foo Magazin&gt;, a German magazine dedicated to Perl, at
( L&lt;http://www.foo-magazin.de&gt; ).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211836Z">
        <seg>I&lt;$foo Magazin&gt; ( http://www.foo-magazin.de ) es una revista dedicada a Perl, escrita en alemán.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There's also a negated version of it:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T002702Z">
        <seg>También existe la versión negada:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There's also a negated version, for the same reason we have C&lt;unless&gt;:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T224632Z">
        <seg>Existe también una versión negada, por la misma razón que existe C&lt;unless&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, if a module's name is, say,
C&lt;Text::Soundex&gt;, then its definition is actually found in the library
file F&lt;Text/Soundex.pm&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T120926Z">
        <seg>Así, si el nombre del módulo es, por ejemplo, C&lt;Text::Soundex&gt;, su definición se ubicará en el archivo de biblioteca F&lt;Text/Soundex.pm&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These
differences can be either positive (e.g. extensions for the features
of the particular platform that are not supported in the source
release of perl) or negative (e.g. might be based upon a less current
source release of perl).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T191537Z">
        <seg>Estas diferencias pueden ser positivas (p. ej., extensiones para las características de una plataforma específica que no se ofrecen en la distribución de código fuente de perl) o negativas (p. ej., la distribución binaria puede estar basada en una distribución de código fuente de perl menos reciente).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These
statements are simply written in the script in a straightforward
fashion.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T180755Z">
        <seg>Estas instrucciones se escriben directamente en el script.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are alternate syntaxes for C&lt;decode('utf8', ...)&gt; and C&lt;encode('utf8',
...)&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T233630Z">
        <seg>Ofrecen una sintaxis alternativa a C&lt;decode('utf8', ...)&gt; y C&lt;encode('utf8',
...)&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are documented at great length in L&lt;perlre&gt;, but for
the meantime, here's a quick cheat sheet:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T003837Z">
        <seg>Estas se describen de forma detallada en L&lt;perlre&gt;. A continuación se incluye una guía rápida:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are documented in L&lt;perlvar&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T205451Z">
        <seg>Se describen en L&lt;perlvar&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are methods that can get or set the value of each attribute.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T183722Z">
        <seg>Estos son métodos que permiten obtener o establecer el valor de cada atributo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are not the very basics, though.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T213705Z">
        <seg>Aunque estos conceptos no son tan básicos...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are run
first in the test suite and if any of them fail, something is I&lt;really&gt;
broken.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204421Z">
        <seg>Son las primeras que se ejecutan del conjunto de pruebas; si no se supera alguna de estas pruebas, significa que hay un problema grave.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are scripts which will check the source things like ANSI C
violations, POD encoding issues, etc.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204259Z">
        <seg>Scripts que detectarán en el código fuente cosas como infracciones de ANSI C, problemas de codificación de POD, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are the C&lt;BEGIN&gt;,
C&lt;UNITCHECK&gt;, C&lt;CHECK&gt;, C&lt;INIT&gt;, and C&lt;END&gt; blocks.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011133Z">
        <seg>Son los bloques C&lt;BEGIN&gt;,
C&lt;UNITCHECK&gt;, C&lt;CHECK&gt;, C&lt;INIT&gt; y C&lt;END&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are two
types of accessors.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184138Z">
        <seg>Son dos tipos de métodos de acceso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These code blocks can be prefixed with C&lt;sub&gt; to give the appearance of a
subroutine (although this is not considered good style).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T181803Z">
        <seg>Estos bloques de código pueden usarse con el prefijo C&lt;sub&gt; para dar la apariencia de ser subrutinas (aunque esto no se recomienda).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These conversions are governed by the following general rules:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T174732Z">
        <seg>Estas conversiones obedecen las siguientes normas generales:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These examples often reflect the style and preference of the author of
that piece of the documentation, and may be briefer than a corresponding
line of code in a real program.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110529T142454Z">
        <seg>Los ejemplos de las distintas partes de la documentación reflejan el estilo y las preferencias de sus autores, y pueden ser más escuetos que una línea de código equivalente en un programa real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These files contain information on who maintains which modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T152900Z">
        <seg>En estos archivos se indica quién mantiene cada módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These should give you an overall feel for how modules are laid out and
written.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T172922Z">
        <seg>Estos módulos le proporcionarán una idea general de cómo se estructura y desarrolla un módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These special variables are used for all
kinds of purposes, and are documented in L&lt;perlvar&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T231354Z">
        <seg>Estas variables especiales se usan para diversos fines y se describen en L&lt;perlvar&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These strengths make it especially popular with web developers
and system administrators.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T210110Z">
        <seg>Por estas cualidades es muy popular entre los desarrolladores de sitios web y los administradores de sistemas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These threads can be used by using the C&lt;threads&gt;
module or by doing fork() on win32 (fake fork() support).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T085552Z">
        <seg>Estos hilos de ejecución pueden usarse con el módulo C&lt;threads&gt; o bien ejecutando fork() en win32 (en realidad, una simulación de fork()).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These threads can be used explicitly and implicitly.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160429T234147Z" creationid="explorer" creationdate="20150905T141115Z">
        <seg>Estos hilos de ejecución se pueden usar de forma explícita o implícita.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These utilities help manage extra Perl modules that don't come with the perl
distribution.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T145204Z">
        <seg>Estas utilidades ayudan a administrar módulos Perl adicionales que no se incluyen en la distribución de perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These will often point out exactly
where the trouble is.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T144952Z" creationid="explorer" creationdate="20150905T144952Z">
        <seg>Normalmente le indicarán dónde está el problema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are only required
occasionally to clarify issues of precedence.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T001933Z">
        <seg>Solo son necesarios en algunos casos para aclarar la precedencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are: Benjamin Smith, Jan-Pieter Cornet, Johan Vromans, Lukas Mai, Nathan
Gray.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110212T170610Z">
        <seg>Benjamin Smith, Jan-Pieter Cornet, Johan Vromans, Lukas Mai, Nathan
Gray.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They can also have C&lt;Content-Length&gt; to indicate the
number of I&lt;bytes&gt;, which is always a good idea to supply if the number is
known.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110212T162358Z">
        <seg>También se puede utilizar C&lt;Content-Length&gt; para indicar el número de I&lt;bytes&gt;, un dato que siempre viene bien conocer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They can be
used to capture the results of parts of the regexp match for later use.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T120842Z">
        <seg>se pueden usar para capturar los resultados de partes de una expresión regular a fin de usarlos posteriormente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They can be created and executed during any phase.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T162749Z">
        <seg>Se pueden crear y ejecutar en cualquier fase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They check different things so you need both.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T001117Z">
        <seg>Comprueban cosas distintas, por lo que ambas deben ser incluidas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They don't check that
a C&lt;$path&gt; is defined, nor do they check that a C&lt;$path&gt; is a valid
filesystem path.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T222332Z">
        <seg>No comprueban si la C&lt;$ruta&gt; está definida, ni si se trata de una ruta del sistema de archivos válida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They produce the standard C&lt;Makefile.PL&gt; you see when you download and
install modules, and this produces a Makefile with a C&lt;dist&gt; target.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T215812Z">
        <seg>Crea el archivo C&lt;Makefile.PL&gt; estándar que se usa para instalar los módulos descargados, y que produce un archivo Makefile con un destino C&lt;dist&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They take
only one byte per character.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T201610Z">
        <seg>Ocupan un solo byte por carácter.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They're also supported as operators in their own
right.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T182510Z">
        <seg>Son también operadores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They're discussed in Part 3 of this FAQ, along with L&lt;CPAN|http://www.cpan.org/&gt;, which is
discussed in Part 2.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T154217Z">
        <seg>Se describen en la parte 3 de este conjunto de documentos sobre preguntas más frecuentes. L&lt;CPAN|http://www.cpan.org/&gt; se describe en la parte 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They're more readable than the C-style operators, but have
different precedence to C&lt;&amp;&amp;&gt; and friends.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T221852Z">
        <seg>Ofrecen más legibilidad que los operadores tipo C correspondientes, como C&lt;&amp;&amp;&gt;, pero su precedencia es distinta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Things that make Perl easier to learn: Unix experience, almost any kind
of programming experience, an understanding of regular expressions, and
the ability to understand other people's code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T181719Z">
        <seg>Si tiene experiencia en el uso de Unix, cualquier tipo de experiencia en programación, conocimientos de expresiones regulares y la capacidad de leer y entender el código de otros programadores, le costará menos aprender Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Think about reusability.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T172608Z">
        <seg>Piense en la reutilización.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This
is a somewhat tricky way of passing around references cheaply
when you don't want to have to remember to dereference variables
explicitly.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T181026Z">
        <seg>Esta es una forma poco habitual de pasar referencias de forma sencilla, cuando no se desea tener que recordar cómo desreferenciar variables de forma explícita.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This
method is called automatically by the C&lt;VERSION&gt; form of C&lt;use&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T162508Z">
        <seg>La forma C&lt;VERSION&gt; de C&lt;use&gt; llama a este método automáticamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This
method might produce different output for each class, but they share a
common interface.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T134206Z">
        <seg>Este método puede producir salidas diferentes para cada clase, pero la interfaz es común.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This
might be more (or less) convenient, depending on what shell you use.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T200948Z">
        <seg>Esto puede resultar más (o menos) cómodo según la shell que se use.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This
parent is really a rather ridiculous creation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T164325Z">
        <seg>De hecho, esta clase primaria es más bien ridícula.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This allows one to specify the I&lt;language code&gt; for the desired language
translation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T184507Z">
        <seg>Este modificador permite especificar el I&lt;código de idioma&gt; para obtener la traducción del documento en el idioma deseado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This also has implications for the use of the SUPER:: qualifier
(see L&lt;perlobj&gt;).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T161311Z">
        <seg>Esto también tiene implicaciones para el uso del calificador SUPER:: (vea L&lt;perlobj&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This also helps to differentiate new modules from old F&lt;.pl&gt; and
F&lt;.ph&gt; files.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T083847Z">
        <seg>Esto también ayuda a distinguir los módulos nuevos de los antiguos, que usaban la extensión F&lt;.pl&gt; o F&lt;.ph&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This array is
examined when Perl does method resolution, which we will cover later.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T211818Z">
        <seg>Perl examina este array cuando realiza la resolución de métodos, como se verá a continuación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can
be done in a variety of ways, including using L&lt;"Inside-Out objects"&gt;
or modules from CPAN.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160104Z" creationid="explorer" creationdate="20150905T160104Z">
        <seg>Esto puede hacerse de diversas formas; por ejemplo, mediante el uso de L&lt;"Objetos I&lt;Inside-Out&gt;"&gt; o con algunos módulos específicos de CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be used
safely on any string, as it checks and does not change strings that have
already been upgraded.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T001918Z">
        <seg>Esto se puede aplicar de manera segura a cualquier cadena, puesto que comprueba si una cadena ya se ha promovido y, en caso afirmativo, no la modifica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be very
useful for writing dynamic code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211013Z">
        <seg>Esto puede ser muy útil para escribir código dinámico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This checks for the method in the class
and all of its parents.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T162125Z">
        <seg>Comprueba la existencia del método en la clase y en todas sus clases primarias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This class provides a number of methods, all
of which can be called on either a class or an object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161405Z">
        <seg>Esta clase proporciona un conjunto de métodos que se pueden llamar desde una clase o un objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This code generation means that your runtime code is as fast as
it can be, but you pay for this when your modules are first loaded.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T225140Z">
        <seg>Esto hace que el código en tiempo de ejecución sea lo más eficiente posible, pero tendrá un coste cuando todo este código se cargue por primera vez.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This constructor knows
about the attributes you declared, so you can set them when creating a
new C&lt;File&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T103246Z">
        <seg>Este constructor sabe cuáles son los atributos declarados, por lo que puede establecerlos al crear una nueva instancia de C&lt;Archivo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This constructor lets its parent class do the actual object
construction.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T204357Z">
        <seg>Este constructor permite que sea la clase primaria la que se encargue de crear el objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This demonstrates how C&lt;SUPER&gt; is resolved.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T213232Z">
        <seg>Este ejemplo ilustra la forma de resolución de C&lt;SUPER&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This directory contains I&lt;all&gt; of the modules and
their tests, unlike other core modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204618Z">
        <seg>A diferencia de otros módulos del núcleo, este directorio contiene I&lt;todos&gt; los módulos y sus pruebas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This directory contains dual-life modules where the CPAN module is
canonical.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T194246Z">
        <seg>Este directorio contiene módulos de evolución dual en los que el módulo de CPAN es la versión canónica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This directory contains pure-Perl modules which are only released as
part of the core.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204625Z">
        <seg>Este directorio contiene módulos programados en Perl puro que solo se publican como parte del núcleo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This directory is for dual-life modules where the blead source is
canonical.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T201814Z">
        <seg>Este directorio contiene módulos de evolución dual en los que la versión canónica es la del código fuente de la rama B&lt;blead&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document aims to provide an overview of the vast perl community, which is
far too large and diverse to provide a detailed listing.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T211702Z">
        <seg>Este documento tiene como objetivo proporcionar una visión general de la extensa comunidad Perl, demasiado grande y diversa como para poder ofrecer una descripción detallada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document assumes that you already understand the basics of Perl
syntax, variable types, operators, and subroutine calls.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T171416Z">
        <seg>Suponemos que ya conoce y comprende la sintaxis de Perl, los tipos de variables y las llamadas a subrutinas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document describes all of Perl's object-oriented (OO) features
from the ground up.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T202816Z">
        <seg>Sobre esta base, este documento describe todas las características de la orientación a objetos en Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document describes how Perl internally handles numeric values.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T172922Z">
        <seg>En este documento se describe el procesamiento interno de valores numéricos en Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document describes the layout of the Perl source tree.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110817T171454Z">
        <seg>En este documento se describe el contenido del árbol de código fuente de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document describes various features of FreeBSD that will affect how Perl
version 5 (hereafter just Perl) is compiled and/or runs.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T221641Z">
        <seg>En este documento se describen varias características de FreeBSD que afectan a la compilación y ejecución de Perl versión 5 (en lo sucesivo, Perl).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document describes various features of OpenBSD that will affect how Perl
version 5 (hereafter just Perl) is compiled and/or runs.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T202205Z">
        <seg>En este documento se describen varias características de OpenBSD que afectan a la compilación y ejecución de Perl versión 5 (en lo sucesivo, Perl).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document exists to list all of these utilities, explain
what they are for and provide pointers to each module's documentation,
if appropriate.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110716T204033Z">
        <seg>Este documento contiene una descripción de las utilidades y referencias a la documentación de cada módulo (si existe).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document gives you some suggestions about how to go about writing
Perl modules, preparing them for distribution, and making them available
via CPAN.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T143608Z">
        <seg>Este documento ofrece algunas sugerencias para escribir módulos Perl, preparar su distribución y publicarlos en CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document is intended to give you a quick overview of the Perl
programming language, along with pointers to further documentation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T000002Z">
        <seg>Este documento proporciona una introducción rápida al lenguaje de programación Perl e incluye referencias a documentación adicional.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document may be distributed under the same terms as Perl itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T151832Z">
        <seg>Puede distribuir este documento en los mismos términos que Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document provides a reference for Perl's object orientation
features.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T202412Z">
        <seg>Este documento es una referencia de las características de programación orientada a objetos que ofrece Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document provides an introduction to object-oriented programming
in Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194534Z">
        <seg>Este documento proporciona una introducción a la programación orientada a objetos en Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document takes you through a simple patch example.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T150416Z">
        <seg>Este documento describe la creación de un parche sencillo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document was created in February, 2011, and the last major
revision was in February, 2013.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T121150Z" creationid="explorer" creationdate="20150905T121150Z">
        <seg>Este documento se creó en febrero de 2011 y la última revisión
fue en febrero de 2013.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document was originally written by Nathan Torkington, and is
maintained by the perl5-porters mailing list.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T155901Z">
        <seg>Actualmente la lista de correo perl5-porters se encarga de actualizar este documento redactado originalmente por Nathan Torkington.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This documentation is for people who want to download CPAN modules
and install them on their own computer.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T005022Z">
        <seg>Este documento explica lo que hay que hacer para descargar e instalar módulos de CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This documentation is free; you can redistribute it and/or modify it
under the same terms as Perl itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T160931Z">
        <seg>Esta documentación es libre; puede redistribuirla o modificarla en los mismos términos que Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This doesn't do anything to your input, or to your output.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T005801Z">
        <seg>Esto no afecta ni a la entrada ni a la salida de datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This ease of experimentation flattens
the learning curve even more.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110402T103007Z">
        <seg>Esta facilidad para realizar experimentos también allana la curva de aprendizaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This file lists everyone who's contributed to Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204114Z">
        <seg>En este archivo figuran todas las personas que han contribuido a Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This has
the advantage of enforcing the encapsulation of object attributes,
since their data is not stored in the object itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T200902Z">
        <seg>Esto presenta la ventaja de forzar la encapsulación de los atributos del objeto, ya que sus datos no se almacenan en el propio objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This has several advantages.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T204737Z">
        <seg>Esto ofrece varias ventajas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This implies nothing about the order of
name lookups, however.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120902T085246Z">
        <seg>Sin embargo, esto no implica nada sobre el orden de búsqueda de los nombres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes
C&lt;if&gt;, basic file reads and writes, simple regexes, etc.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204435Z">
        <seg>Incluyen pruebas de C&lt;if&gt;, operaciones básicas de lectura y escritura, expresiones regulares sencillas, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes the object itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T161113Z">
        <seg>Esto incluye al propio objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This introductory document does not aim to be complete.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T170449Z">
        <seg>Es un documento introductorio, no una guía completa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is
&lt;not&gt; a substitute for reading the README and INSTALL files that
might have come with your module!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T005553Z">
        <seg>Leer esta información B&lt;no&gt; le exime de la lectura de los archivos README e INSTALL incluidos en un módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is
important, because it lets methods at different levels within a deep
inheritance hierarchy each correctly call their respective parent
methods.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162509Z">
        <seg>Esto es importante, ya que permite que métodos de distintos niveles de una jerarquía de herencia de muchos niveles llamen correctamente a sus respectivos métodos en la clase primaria correspondiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is
widely accepted as good behavior when you're writing, but it can be dangerous
when reading, because it causes internal inconsistency when you have invalid
byte sequences.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T234436Z">
        <seg>Esto está aceptado universalmente como una práctica fiable al escribir, pero puede ser peligroso al leer, ya que crea una incoherencia interna cuando hay secuencias de bytes no válidas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a list of questions and answers about Unicode in Perl, intended to be
read after L&lt;perlunitut&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T235743Z">
        <seg>Esta lista de preguntas y respuestas sobre Unicode en Perl debe leerse después de leer L&lt;perlunitut&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a perfect example
of composition.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185155Z">
        <seg>Este es un ejemplo perfecto de composición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a possible, but quite
pathological.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161146Z">
        <seg>Esto es posible, pero realmente patológico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a term used for characters occupying more than one byte.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T102253Z" creationid="explorer" creationdate="20150905T102253Z">
        <seg>Término utilizado para designar caracteres que ocupan más de un byte.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is actually just a wrapper around the C&lt;-M&gt; switch;
using C&lt;-oI&lt;formatname&gt;&gt; just looks for a loadable class by adding
that format name (with different capitalizations) to the end of
different classname prefixes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T200559Z">
        <seg>En realidad es un encapsulador del modificador C&lt;-M&gt;; si se usa C&lt;-oI&lt;nombre_formato&gt;&gt;, solo busca una clase que se pueda cargar agregando ese nombre de formato (con distintas combinaciones de mayúsculas y minúsculas) al final de distintos prefijos de nombre de clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is anti-obfuscated code.\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T082629Z">
        <seg>Esto es lo contrario de código ofuscado.\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is applicable
to the third and fourth arguments of C&lt;sysread&gt;, for example.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120611T201528Z">
        <seg>Esto es aplicable, por ejemplo, a los argumentos tercero y cuarto de C&lt;sysread&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is best
demonstrated with this code:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T205447Z">
        <seg>Esto se ilustra mejor con el código siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is both common and safe.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194331Z">
        <seg>Esto es habitual y seguro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is called
B&lt;encapsulation&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T205006Z">
        <seg>Esto se denomina B&lt;encapsulación&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is called B&lt;composition&gt;, or a B&lt;has-a&gt;
relationship.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T174300Z">
        <seg>Esto se denomina B&lt;composición&gt;, o relación "tiene-un" (B&lt;has-a&gt; en inglés).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is called an "array slice".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T001749Z">
        <seg>Esto se denomina una "porción de array".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is called just like any other method, with the object as the first
argument.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T182049Z">
        <seg>Se llama de la misma manera que cualquier otro método, con el objeto como primer argumento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is deprecated in favour of F&lt;h2xs&gt; these days.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T154452Z">
        <seg>Han quedado obsoletos desde que surgió F&lt;h2xs&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is exactly equivalent to</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T083655Z">
        <seg>Eso equivale exactamente a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is exactly equivalent to writing C&lt;&lt; $sub-&gt;($file) &gt;&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211545Z">
        <seg>Esto equivale exactamente a escribir C&lt;&lt; $sub-&gt;($archivo) &gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is how it is able
to function as a pragma mechanism, and also how modules are able to
declare subroutines that are then visible as list or unary operators for
the rest of the current file.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T084443Z">
        <seg>Esto es lo que permite a un módulo funcionar como un mecanismo pragma y declarar subrutinas que están visibles incluso como operadores de lista o unarios para el resto del archivo actual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is just a shorthand for a typeglob assignment at compile time:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T181405Z">
        <seg>Esto no es más que una forma abreviada de asignación de I&lt;typeglob&gt; en tiempo de compilación:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is presumably useful in cases of on/off
features like: C&lt;-w page_numbering&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T203204Z">
        <seg>Esto puede ser útil para características que se activan o desactivan, como por ejemplo C&lt;-w page_numbering&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is provided as a more readable version of C&lt;if (!I&lt;condition&gt;)&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T002947Z">
        <seg>Esto se proporciona como una versión más legible de C&lt;if (!I&lt;condición&gt;)&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is purely a matter of convention, so a class may contain both
methods and subroutines which I&lt;don't&gt; operate on an object or class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083450Z">
        <seg>Esto es solo un convenio, por lo que una clase puede contener en realidad tanto métodos como subrutinas que I&lt;no&gt; operen sobre objetos o clases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is really helpful if you're working
inside of a build directory and want to read through the docs even if you
have a version of a module previously installed.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T215243Z" creationid="explorer" creationdate="20160506T214329Z">
        <seg>Esto es muy útil cuando se trabaja en un directorio de compilación y se desea leer la documentación actual aunque esté instalada una versión anterior del módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is simply a list of scalars, each
of which is a string that corresponds to a package name.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T155431Z">
        <seg>Se trata de una simple lista de escalares, cada uno de los cuales es una cadena que se corresponde con un nombre de paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is simply done using a hash and Scalar::Util::weaken().</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T172607Z">
        <seg>Esto se hace de forma sencilla mediante un hash y Scalar::Util::weaken().</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is something you, the programmer, has to keep track of; sorry.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120424T151859Z">
        <seg>De esto debe encargarse el programador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the most important
part of this tutorial.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T213735Z">
        <seg>Ésta es la parte más importante del tutorial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is useful if you want to put object
initialization in its own separate method:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120726T094700Z">
        <seg>Esto es útil si desea inicializar el objeto en un método independiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is where roles come in.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185221Z">
        <seg>Aquí es donde entran en juego los roles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This isn't the same as a constant subroutine, which is subject to
optimization at compile-time.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T181102Z">
        <seg>Esto no es lo mismo que una subrutina constante, que está sujeta a optimización en tiempo de compilación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lets you ask questions like "what methods does the File
class implement?" It also lets you modify your classes
programmatically.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T103548Z">
        <seg>Esto permite contestar a preguntas como "¿qué métodos implementa la clase Archivo?". También permite modificar las clases mediante programación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lets you describe
I&lt;what&gt; your class is, rather than having to tell Perl I&lt;how&gt; to
implement your class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185340Z">
        <seg>Esto permite describir I&lt;qué&gt; es la clase, en lugar de tener que decir a Perl I&lt;cómo&gt; implementar la clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This load time hit can be a problem when startup speed is important,
such as with a command-line script or a "plain vanilla" CGI script that
must be loaded each time it is executed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120630T221937Z">
        <seg>Este incremento en el tiempo de carga puede ser problemático cuando la velocidad de inicio es importante, como en scripts de línea de comandos o en el típico script CGI que debe cargarse cada vez que se ejecuta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This makes it easier to incorporate C&lt;Moo&gt;-using code
into a C&lt;Moose&gt; code base and vice versa.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T133622Z" creationid="explorer" creationdate="20150905T123418Z">
        <seg>Esto facilita incorporar código basado en C&lt;Moo&gt;
en una base de código que utiliza C&lt;Moose&gt;, y viceversa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may be a problem because now we're
looking in C&lt;SharedGreatGrandParent&gt; I&lt;before&gt; we've checked all its
derived classes (i.e. before we tried C&lt;Mother&gt; and
C&lt;MaternalGrandparent&gt;).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T164050Z">
        <seg>Esto puede ser problemático porque ahora se busca en C&lt;BisabueloComún&gt; I&lt;antes&gt; de buscar en todas sus clases derivadas (es decir, antes de intentar la búsqueda en C&lt;Madre&gt; y C&lt;AbueloMaterno&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may be faster,
but it probably won't look as nice.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T195833Z">
        <seg>Puede que sea más rápido, pero es probable que el aspecto del resultado sea peor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may be useful
in a subroutine that gets passed typeglobs as arguments:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T181138Z">
        <seg>Esto puede ser útil en una subrutina que recibe I&lt;typeglobs&gt; como argumentos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may be useful if the docs don't explain a function in the detail
you need, and you'd like to inspect the code directly; perldoc will find
the file for you and simply hand it off for display.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T203815Z">
        <seg>Esto puede resultar útil si en la documentación no se explica una función con el nivel de detalle necesario y desea inspeccionar el código directamente; perldoc buscará el archivo y se lo mostrará.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that a class must implement its own constructor.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T164535Z">
        <seg>Esto significa que una clase debe implementar su propio constructor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that any objects
contained by your object may already have been destroyed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T183257Z">
        <seg>Esto significa que es posible que se destruyan antes los objetos contenidos en su objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that programmers need new habits.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T201709Z">
        <seg>Esto significa que los programadores deben adquirir nuevas costumbres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that the following code:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T112217Z">
        <seg>Esto se puede ver en el siguiente ejemplo de código:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that we can
try to call the C&lt;print_content()&gt; method on an object of either class,
and B&lt;we don't have to know what class the object belongs to!&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T084902Z">
        <seg>Esto significa que podemos intentar llamar al método C&lt;imprimir_contenido()&gt; desde un objeto de cualquiera de estas clases B&lt;sin saber a qué clase pertenece el objeto&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means there is a possibility that
the optree will outlive the particular thread (and therefore the interpreter
instance) that created it, so true Perl scalars cannot be stored in the
optree.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T234035Z">
        <seg>Esto significa que existe la posibilidad de que el árbol sintáctico de operaciones sobreviva al hilo de ejecución (y, por tanto, a la instancia del intérprete) que lo creó, por lo que no se pueden almacenar escalares auténticos de Perl en dicho árbol.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means you
can change that implementation without breaking the API.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T163722Z">
        <seg>Esto significa que se puede cambiar la implementación sin cambiar la API.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method is
provided for use by object system extensions that implement roles, like
C&lt;Moose&gt; and C&lt;Role::Tiny&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161730Z">
        <seg>Este método se proporciona para su uso con extensiones del sistema de objetos que implementan roles, como C&lt;Moose&gt; y C&lt;Role::Tiny&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method will always be
called by Perl at the appropriate time, unless the method is empty.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T182036Z">
        <seg>Perl siempre llamará a este método cuando sea necesario, a menos que esté vacío.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This minimalism made a lot of sense in 1994, but
in the years since Perl 5.0 we've seen a number of common patterns
emerge in Perl OO.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194737Z">
        <seg>Este minimalismo tenía sentido en 1994, pero en los años que han transcurrido desde que se lanzó Perl 5.0 han surgido diversos patrones comunes en la orientación a objetos de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This module truly lives up to its
name.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185632Z">
        <seg>Este módulo se ajusta realmente a su nombre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This module was added to the core
to support inside-out object implementations.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T231550Z">
        <seg>Este módulo se agregó al núcleo para permitir implementaciones de objetos I&lt;inside-out&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This poses a problem for content such as book
lists.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110604T233323Z">
        <seg>Esto supone un problema para mantener una lista de libros actualizada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This pragma lets you switch to the "C3" resolution order.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T163910Z">
        <seg>Este pragma permite cambiar al orden de resolución "C3".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This pragma will take care of setting C&lt;@ISA&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T212023Z">
        <seg>Este pragma se ocupará de establecer C&lt;@ISA&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This prints</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T160115Z">
        <seg>Esto imprime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This program provides an easy way to send a thank-you message back to the
authors and maintainers of perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T141515Z">
        <seg>Este programa proporciona una manera sencilla de enviar un mensaje de agradecimiento a las personas que se encargan de desarrollar y mantener perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This provides a simple mechanism for making a module threadsafe; just add
C&lt;sub CLONE_SKIP { 1 }&gt; at the top of the class, and C&lt;DESTROY()&gt; will
now only be called once per object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T172928Z">
        <seg>Esto proporciona un mecanismo sencillo para hacer que los hilos de ejecución de los módulos sean seguros; basta con agregar C&lt;sub CLONE_SKIP { 1 }&gt; al comienzo de la clase y se llamará a C&lt;DESTROY()&gt; una sola vez por cada objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This role would
define a known API like providing C&lt;turn_on()&gt; and C&lt;turn_off()&gt;
methods.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T102046Z">
        <seg>Este rol podría definir una interfaz conocida con los métodos C&lt;encender()&gt; y C&lt;apagar()&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This script was primarily a
technology demonstrator for Perl v5.8.0, but you can use piconv in the
place of iconv for virtually any case.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T114446Z" creationid="explorer" creationdate="20150513T114206Z">
        <seg>Este script era principalmente una demostración
de tecnología en Perl v5.8.0, pero puede usar piconv en lugar
de iconv prácticamente en todos los casos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section of the FAQ answers questions about where to find
source and documentation for Perl, support, and
related matters.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T193406Z">
        <seg>En esta sección de preguntas más frecuentes se indica dónde se puede obtener el código fuente y la documentación de Perl, cómo obtener soporte técnico, y se incluye información sobre otros temas relacionados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section of the FAQ answers very general, high-level questions
about Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T163826Z">
        <seg>En esta sección de las preguntas más frecuentes se proporcionan respuestas a preguntas muy generales sobre Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This silent implicit decoding is known as "upgrading".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120511T210440Z">
        <seg>Se produce una descodificación implícita sin aviso, denominada "promoción".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This specifies an option to call the formatter B&lt;w&gt;ith.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T203039Z">
        <seg>Permite especificar una opción con ("w" viene de la palabra inglesa B&lt;w&gt;ith) la que desea llamar al formateador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This specifies that the output is not to be sent to a pager, but is to
be sent directly to STDOUT.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T213418Z" creationid="explorer" creationdate="20160506T213418Z">
        <seg>Especifica que la salida no se enviará a un paginador; se enviará directamente a STDOUT.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This specifies that the output is to be sent neither to a pager nor
to STDOUT, but is to be saved to the specified filename.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T200355Z">
        <seg>Especifica que la salida no se enviará a un paginador ni a STDOUT; se guardará en un archivo con el nombre especificado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This specifies that you want Perldoc to try using a Pod-formatting
class for the output format that you specify.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T202459Z">
        <seg>Especifica que perldoc debe intentar usar una clase de formato pod para el formato de salida indicado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This specifies the module that you want to try using for formatting the
pod.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T200711Z">
        <seg>Permite especificar el módulo que se desea usar para aplicar formato al código pod.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This subroutine
returns an object's class when passed an object, and false otherwise.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T211553Z">
        <seg>Esta subrutina devuelve la clase del objeto cuando se le pasa un objeto como argumento, y falso en cualquier otro caso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This syntax can be used with any class or object method:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T151544Z">
        <seg>Se puede usar con cualquier clase o método:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This syntax is called "indirect" because the method comes
before the object it is being invoked on.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T151531Z">
        <seg>Esta sintaxis se denomina "indirecta" porque el método aparece antes que el objeto en el que se hace la llamada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This technique was popular for a while (and was recommended in Damian
Conway's I&lt;Perl Best Practices&gt;), but never achieved universal
adoption.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T200914Z">
        <seg>Esta técnica se popularizó durante un tiempo (y se recomendó en el libro I&lt;Perl Best Practices&gt; de Damian Conway), aunque no se llegó a adoptar de forma universal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tells C&lt;Moose&gt;
that this attribute must be a boolean value.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185411Z">
        <seg>Esto le dice a C&lt;Moose&gt; que este atributo debe ser un valor booleano.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This time only two filters have been used; we only need to manipulate
the contents of the key, so it wasn't necessary to install any value
filters.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111003T121709Z">
        <seg>En este caso no se han utilizado más que dos filtros; solo hay que manipular el contenido de la clave, por lo que no es necesario instalar ningún filtro de valores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tutorial speaks in rather absolute terms, and provides only a limited view
of the wealth of character string related features that Perl has to offer.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T213452Z">
        <seg>En este tutorial hablamos en términos absolutos, y solo proporcionamos una visión limitada de las muchas características relacionadas con el procesamiento de cadenas de caracteres que Perl ofrece.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This uses C&lt;caller()&gt; to determine the value of
C&lt;$^H{"myint/in_effect"}&gt; when each line of the user's script was called, and
therefore provide the correct semantics in the subroutine implementing the
overloaded addition.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T214124Z">
        <seg>La rutina usa C&lt;caller()&gt; para determinar el valor que tenía C&lt;$^H{"entero/in_effect"}&gt; cuando se llamó a cada línea del script del usuario y, por tanto, proporcionar la semántica correcta en la subrutina que implementa la suma sobrecargada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This utility, that comes with the C&lt;Digest::SHA&gt; module, is used to print
or verify SHA checksums.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T145129Z">
        <seg>Esta utilidad, que se incluye con el módulo C&lt;Digest::SHA&gt;, se usa para imprimir o comprobar sumas de control SHA.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This view may conflict with other information that you
may have found on the web, but that's mostly because many sources are wrong.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T215250Z">
        <seg>Nuestro enfoque puede chocar con otros que haya encontrado en Internet, pero esto se debe a que la información proporcionada por muchas fuentes no es correcta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will either look
like this:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T155639Z">
        <seg>Será algo así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will make creating a
proper patch much simpler.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T152802Z">
        <seg>Esto facilitará la creación de parches.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will not work if you use C&lt;require&gt;
instead of C&lt;use&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T084451Z">
        <seg>Pero no funcionará si usa C&lt;require&gt; en lugar de C&lt;use&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This works exactly like calling C&lt;&lt; $file-&gt;save() &gt;&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211002Z">
        <seg>Funciona exactamente igual que la llamada C&lt;&lt; $archivo-&gt;guardar() &gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This works if the dereference produces a string I&lt;or&gt; a subroutine
reference.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211707Z">
        <seg>Esto funciona si la desreferencia produce una cadena I&lt;o&gt; una referencia a una subrutina.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those functions all
have return values, so use them.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111012T223554Z">
        <seg>Estas funciones devuelven valores, por lo que debe usarlos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those libraries, collected in the CPAN,
provide ready-made solutions to an astounding array of problems.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T153103Z" creationid="explorer" creationdate="20150905T153103Z">
        <seg>Estas bibliotecas, recopiladas en CPAN,
proporcionan soluciones listas para usar para una inmensa cantidad de problemas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those older
programs knew only about the ASCII character set, and so may not work
properly for additional characters.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T001604Z">
        <seg>Esos programas antiguos solo usaban el juego de caracteres ASCII, por lo que es posible que no funcionen con otros caracteres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Though forcing an argument into a particular form does not change the
stored number, Perl remembers the result of such conversions.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T194352Z">
        <seg>Aunque forzar la conversión de un argumento a un formato específico no cambia el número almacenado, Perl recuerda el resultado de las conversiones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Throughout Perl's documentation, you'll find numerous examples intended
to help explain the discussed features.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T115715Z">
        <seg>En la documentación de Perl se incluyen muchos ejemplos que ilustran las características descritas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Throughout the previous section all the examples have used the syntax:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T231620Z">
        <seg>En todos los ejemplos de la sección anterior se utilizó esta sintaxis:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Throughout this document you'll see references to other parts of the
Perl documentation.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T230101Z">
        <seg>En este documento se incluyen referencias a otras partes de la documentación de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus the limits
for Perl numbers stored as native integers would typically be -2**31..2**32-1,
with appropriate modifications in the case of 64-bit integers.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T174336Z">
        <seg>Así, los límites para números Perl almacenados como enteros nativos serán normalmente -2**31..2**32-1, con las modificaciones correspondientes en el caso de los enteros de 64 bits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tidies a pod file.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110720T094503Z">
        <seg>Ordena un archivo pod.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To avoid stepping on each other's toes,
they need to be sure to use different keys in the hash.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T214256Z">
        <seg>Para evitar conflictos, deben asegurarse de usar claves distintas en el hash.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To avoid this warning and to avoid having different output encodings in a single
stream, always specify an encoding explicitly, for example with a PerlIO layer:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T233933Z">
        <seg>Para evitar esta advertencia y evitar la mezcla de distintas codificaciones de salida en una sola secuencia, especifique siempre una codificación explícitamente (por ejemplo, con una capa de entrada/salida):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To declare multiple parents, you simply need to pass multiple class
names to C&lt;use parent&gt;:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162848Z">
        <seg>Para declarar varias clases primarias basta con pasar varios nombres de clase a C&lt;use parent&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To decode, you have to
know what encoding was used during the encoding phase.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T222858Z">
        <seg>Para descodificar necesita saber la codificación que se utilizó al codificar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To delete a filter pass C&lt;undef&gt; to it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111003T120849Z">
        <seg>Para eliminar un filtro debe pasarle C&lt;undef&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To determine if a module came with your version of Perl, you can
install and use the L&lt;Module::CoreList&gt; module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211603Z">
        <seg>Para determinar si un módulo está incluido en su versión de Perl, puede usar L&lt;Module::CoreList&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To display and change the libnet configuration run the libnetcfg command.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T140241Z">
        <seg>Para mostrar y modificar la configuración de libnet, ejecute el comando libnetcfg.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To email a bug report, send it to
bug-E&lt;lt&gt;distribution-nameE&lt;gt&gt;@rt.cpan.org .</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160430T233739Z" creationid="explorer" creationdate="20150514T162106Z">
        <seg>Para notificar un informe de error, envíe un mensaje de correo electrónico a
bug-E&lt;lt&gt;nombre-distribuciónE&lt;gt&gt;@rt.cpan.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To encode,
you have to supply the target encoding, for example C&lt;iso-8859-1&gt; or C&lt;UTF-8&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T222132Z">
        <seg>Al codificar debe especificar la codificación de destino (por ejemplo, C&lt;iso-8859-1&gt; o C&lt;UTF-8&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To find out which character encodings your Perl supports, run:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110221T214814Z">
        <seg>Para averiguar cuáles son las codificaciones de caracteres admitidas por Perl, ejecute:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To find your local Perl Mongers (or PM as they're commonly abbreviated) group
check the international Perl Mongers directory at L&lt;http://www.pm.org/&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T183448Z">
        <seg>Para localizar el grupo de Perl Mongers (o PM, como se acostumbra a abreviar) local o más cercano, consulte el directorio internacional de Perl Mongers en L&lt;http://www.pm.org/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To get at hash elements:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234422Z">
        <seg>Para obtener los elementos de un hash:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To get multiple values from an array:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T223516Z">
        <seg>Para obtener varios elementos de un array:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To have your event or group listed,
contact brian d foy (brian@theperlreview.com).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T184155Z">
        <seg>Si desea incluir un evento o grupo en la lista, póngase en contacto con brian d foy (brian@theperlreview.com).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To help you convert legacy programs to more modern Perl, the
L&lt;pl2pm|pl2pm&gt; utility will help you convert old-style Perl 4 libraries
to new-style Perl5 modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T101245Z" creationid="explorer" creationdate="20150905T101058Z">
        <seg>Para convertir programas antiguos a Perl más moderno puede utilizar la
utilidad L&lt;pl2pm|pl2pm&gt;, que le ayudará a convertir bibliotecas antiguas de Perl 4
a módulos de Perl 5 modernos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn how to install modules you download from CPAN, read
L&lt;perlmodinstall&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T232758Z">
        <seg>Para aprender a instalar los módulos que descargue de CPAN, lea
L&lt;perlmodinstall&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn how to use a particular module, use C&lt;perldoc I&lt;Module::Name&gt;&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T183904Z">
        <seg>Para aprender a usar un módulo específico, ejecute C&lt;perldoc I&lt;Nombre::Módulo&gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To parse this code, Perl uses a heuristic based on what package names
it has seen, what subroutines exist in the current package, what
barewords it has previously seen, and other input.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T154621Z">
        <seg>Para analizar este código, Perl usa una heurística basada en los nombres de paquete vistos, en las subrutinas existentes en el paquete actual, en las palabras sueltas usadas y en otros datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To read more about them check their respective manual pages at L&lt;strict&gt;
and L&lt;warnings&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T170731Z">
        <seg>Para obtener más información, consulte las páginas de manual correspondientes a L&lt;strict&gt; y L&lt;warnings&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To read your private value, use the macro
C&lt;MRO_GET_PRIVATE_DATA()&gt;, passing it the C&lt;mro_meta&gt; structure from the
stash, and a pointer to your C&lt;mro_alg&gt; structure:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T215344Z">
        <seg>Para leer el valor privado, use la macro C&lt;MRO_GET_PRIVATE_DATA()&gt;, pasándole la estructura C&lt;mro_meta&gt; del hash de tabla de símbolos, y un puntero a la estructura C&lt;mro_alg&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To run a Perl program from the Unix command line:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T180447Z">
        <seg>Para ejecutar un programa Perl desde la línea de comandos de Unix, use el siguiente comando:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To set your private value, call C&lt;Perl_mro_set_private_data()&gt;:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T131557Z">
        <seg>Para establecer el valor privado, llame a C&lt;Perl_mro_set_private_data()&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To summarise:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T153257Z">
        <seg>Su funcionamiento se puede resumir de la siguiente manera:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tricky, eh?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T180301Z">
        <seg>Es un poco lioso, ¿no?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Try
C&lt;perl -MFoo -e 1&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T005108Z">
        <seg>Ejecute C&lt;perl -MFoo -e 1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Try "/hurd/pfinet --help" for more
information.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T211412Z">
        <seg>Pruebe "/hurd/pfinet --help" para obtener más información.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Try to document your code and use Pod formatting in a consistent way.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T172710Z">
        <seg>Procure documentar el código y usar el formato Pod de una manera coherente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Turning a
plain data structure into an object is done by B&lt;blessing&gt; that data
structure using Perl's C&lt;bless&gt; function.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T172537Z">
        <seg>La conversión de una estructura de datos normal en un objeto se realiza mediante la B&lt;bendición&gt; de la misma con la función C&lt;bless&gt; de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tutorial on making a new module.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T141423Z" creationid="explorer" creationdate="20150905T140150Z">
        <seg>Tutorial sobre cómo crear un módulo nuevo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Two of these directories contain modules that live in the core, and two
contain modules that can also be released separately on CPAN.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204644Z">
        <seg>Dos de estos directorios contienen módulos integrados en el núcleo y los otros dos contienen módulos que además se publican en CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Typically it would be the first declaration in a file
included by the C&lt;do&gt;, C&lt;require&gt;, or C&lt;use&gt; operators.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T174208Z">
        <seg>Normalmente será la primera declaración en un archivo, incluida por medio de los operadores C&lt;do&gt;, C&lt;require&gt; o C&lt;use&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Typically you will want to C&lt;use I&lt;Module::Name&gt;&gt;, which will then give
you access to exported functions or an OO interface to the module.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110204T165848Z">
        <seg>Normalmente agregará a su programa la línea C&lt;use I&lt;Nombre::Módulo&gt;&gt;, que le proporcionará acceso a las funciones exportadas o a una interfaz orientada a objetos del módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Typically, code inside the class
can treat the hash as an accessible data structure, while code outside
the class should always treat the object as opaque.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T082700Z">
        <seg>Usualmente, el código de la clase puede tratar el hash como una estructura de datos accesible, mientras que el código externo a la clase siempre debe tratar al objeto como algo opaco.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>U16 kflags;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193559Z">
        <seg>U16 kflags;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>U16 length;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193558Z">
        <seg>U16 length;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>U32 hash;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193608Z">
        <seg>U32 hash;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>UNITCHECK blocks run LIFO after each file is compiled.\n"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T114651Z">
        <seg>Los bloques UNITCHECK se ejecutan en orden LIFO tras compilar cada archivo.\n"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>UNITCHECK {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231454Z">
        <seg>UNITCHECK {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>UNPACK</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T005937Z">
        <seg>DESEMPAQUETAR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>UTF-8 treats the first 128 codepoints, 0..127, the same as ASCII.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T222531Z">
        <seg>En UTF-8 los primeros 128 códigos de carácter (0 a 127) son equivalentes a ASCII.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uncuddled elses.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T112355Z">
        <seg>Instrucción C&lt;else&gt; en nueva línea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Under the hood, Perl filehandles are instances of the C&lt;IO::Handle&gt; or
C&lt;IO::File&gt; class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211727Z">
        <seg>Internamente, los identificadores de archivos de Perl son instancias de las clases C&lt;IO::Handle&gt; o C&lt;IO::File&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Under the hood, attributes
are often stored as keys in the object's underlying hash, but don't
worry about this.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T084328Z">
        <seg>Internamente, los atributos se suelen almacenar como claves del hash subyacente del objeto, pero no debe preocuparse de estos detalles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Understanding the concepts will make it much easier to read and write
object-oriented code.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195155Z">
        <seg>La comprensión de estos conceptos hará más fácil la lectura y escritura de código orientado a objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unfortunately
when Perl writes to DBM databases it doesn't use NULL termination, so
your Perl application will have to manage NULL termination itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T155908Z">
        <seg>Sin embargo, Perl no usa el carácter de terminación NULL al escribir en bases de datos DBM, por lo que la aplicación Perl deberá encargarse de agregar la terminación NULL.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unfortunately, Perl can't
keep a secret, so everyone knows about this.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T002656Z">
        <seg>Como Perl no se calla nada, esto es de dominio público.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unfortunately, it assumes that the programmer's environment and
that of the user will use the same encoding.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T002925Z">
        <seg>Por desgracia, este pragma supone que la codificación utilizada en el entorno del programador es la misma que la utilizada en el entorno del usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unicode characters.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T233933Z">
        <seg>caracteres Unicode.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unicode has many more characters than that,
so you need a method to make these accessible.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T160337Z">
        <seg>En Unicode hay muchos más caracteres, por lo que necesitamos una forma de hacerlos accesibles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unicode is encoded using several competing encodings, of which UTF-8 is the
most used.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T215441Z">
        <seg>Existen varias codificaciones de Unicode en competencia, de las cuales la más utilizada es UTF-8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unless
you want to try out an experimental feature, you probably never want to install
a development version of Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T110156Z" creationid="explorer" creationdate="20160505T110156Z">
        <seg>Es probable que nunca tenga que instalar una versión de desarrollo de Perl, a menos que desee probar una funcionalidad experimental.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike F&lt;lib/&gt;, however, a module under F&lt;ext/&gt;
generally has a CPAN-style directory- and file-layout and its own
F&lt;Makefile.PL&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T120604Z" creationid="explorer" creationdate="20150513T120604Z">
        <seg>Sin embargo, a diferencia de F&lt;lib/&gt;, un módulo de F&lt;ext/&gt;
suele tener una estructura de directorios y archivos estilo CPAN, así como su propio archivo
F&lt;Makefile.PL&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike many other languages which support object orientation, Perl does
not provide any special syntax for constructing an object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T125318Z">
        <seg>A diferencia de otros lenguajes de programación que ofrecen orientación a objetos, Perl no dispone de una sintaxis especial para construir objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike most object-oriented languages, Perl provides no special syntax
or support for declaring and manipulating attributes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T221404Z">
        <seg>A diferencia de la mayor parte de los lenguajes orientados a objetos, en Perl no hay una sintaxis especial ni soporte para declarar y manipular atributos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unpack the result with</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010815Z">
        <seg>Desempaquete el resultado con</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unpack the result with C&lt;tar -xof yourmodule.tar&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000135Z">
        <seg>Desempaquete el resultado con C&lt;tar -xof mimodulo.tar&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unqualified dynamic identifiers will be in
this namespace, except for those few identifiers that if unqualified,
default to the main package instead of the current one as described
below.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T122029Z">
        <seg>Los identificadores dinámicos sin calificar estarán en este espacio de nombres, excepto los pocos identificadores que, de no estar calificados, corresponderán de manera predeterminada al paquete C&lt;main&gt; en lugar de al actual, como se indica a continuación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Until that is done, those
modules should be in F&lt;cpan/&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T204507Z">
        <seg>Mientras no se determine, estos módulos deben estar en F&lt;cpan/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Up to 3.14_05, the switch B&lt;-v&gt; was used to produce verbose
messages of B&lt;perldoc&gt; operation, which is now enabled by B&lt;-D&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T165816Z">
        <seg>Hasta la versión 3.14_05 se usaba el modificador B&lt;-v&gt; para producir mensajes detallados del funcionamiento de B&lt;perldoc&gt;; ahora esta opción se habilita mediante B&lt;-D&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Updated by Kirrily "Skud" Robert, C&lt;skud@cpan.org&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T184437Z">
        <seg>Actualizado por Kirrily "Skud" Robert, C&lt;skud@cpan.org&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Updates for 5.8.0 by Nicholas Clark &lt;nick@ccl4.org&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T191437Z">
        <seg>Actualizaciones para 5.8.0 de Nicholas Clark &lt;nick@ccl4.org&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use 
C&lt;perldoc E&lt;lt&gt;nameE&lt;gt&gt;&gt; to get information on any of the utilities
described in this document.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T161750Z">
        <seg>Para obtener información sobre cualquiera de las utilidades descritas en este documento, use C&lt;perldoc E&lt;lt&gt;nombreE&lt;gt&gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use C&lt;Role::Tiny&gt; with C&lt;Class::Accessor&gt; or C&lt;Class::Tiny&gt; if you
find yourself considering multiple inheritance.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T132602Z" creationid="explorer" creationdate="20150905T132602Z">
        <seg>Use C&lt;Role::Tiny&gt; con C&lt;Class::Accessor&gt; o C&lt;Class::Tiny&gt; si quiere
utilizar herencia múltiple.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use Perl comments for developer notes
and POD for end-user notes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T220941Z">
        <seg>Use los comentarios del código Perl como notas de desarrollo y la documentación POD como notas para los usuarios finales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use a search
engine to find out how to do this for your operating system.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120606T190108Z">
        <seg>Use un motor de búsqueda para averiguar la manera de hacer esto para su sistema operativo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use an index if it is present.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T165243Z">
        <seg>Usa un índice si existe.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use braces to disambiguate, as in C&lt;"This is ${owner}'s house"&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T174908Z">
        <seg>Use llaves para eliminar ambigüedades: C&lt;"Vamos a cenar en ${Gino}'s"&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use here documents instead of repeated C&lt;print()&gt; statements.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T105652Z">
        <seg>Use documentos incrustados (I&lt;here documents&gt;) en vez de repetir instrucciones C&lt;print()&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use the new C&lt;and&gt; and C&lt;or&gt; operators to avoid having to parenthesize
list operators so much, and to reduce the incidence of punctuation
operators like C&lt;&amp;&amp;&gt; and C&lt;||&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T102111Z">
        <seg>Use los nuevos operadores C&lt;and&gt; y C&lt;or&gt; para evitar poner demasiados paréntesis en listas de operadores, y para reducir la incidencia de operadores puntuación como C&lt;&amp;&amp;&gt; y C&lt;||&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Useful values for C&lt;PERLDOC&gt; include C&lt;-oterm&gt;, C&lt;-otext&gt;, C&lt;-ortf&gt;,
C&lt;-oxml&gt;, and so on, depending on what modules you have on hand; or
the formatter class may be specified exactly with C&lt;-MPod::Perldoc::ToTerm&gt;
or the like.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T213834Z" creationid="explorer" creationdate="20160506T213834Z">
        <seg>Algunos valores útiles para C&lt;PERLDOC&gt; son C&lt;-oterm&gt;, C&lt;-otext&gt;, C&lt;-ortf&gt;, C&lt;-oxml&gt;, etc., en función de los módulos disponibles; o bien, se puede especificar exactamente la clase de formateador con C&lt;-MPod::Perldoc::ToTerm&gt; o similar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>User pragmata store their state by writing to the magical hash C&lt;%^H&gt;,
hence these two routines manipulate it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T233148Z">
        <seg>Los pragmas de usuario almacenan su estado en el hash mágico C&lt;%^H&gt;, por lo que se pueden usar estas dos rutinas para manipularlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using C&lt;:utf8&gt; for input can sometimes result in security
breaches, so please use C&lt;:encoding(UTF-8)&gt; instead.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T234551Z">
        <seg>El uso de C&lt;:utf8&gt; para la entrada puede permitir infracciones de seguridad en algunos casos, por lo que se recomienda usar C&lt;:encoding(UTF-8)&gt; en su lugar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using C&lt;my&gt; in combination with a C&lt;use strict;&gt; at the top of
your Perl scripts means that the interpreter will pick up certain common
programming errors.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T171634Z">
        <seg>Si escribe C&lt;use strict;&gt; al principio de los scripts de Perl y usa C&lt;my&gt;, el intérprete detectará determinados errores frecuentes de programación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using C&lt;strict&gt; is highly recommended.</seg>
      </tuv>
      <tuv lang="ES">
        <seg>Es muy recomendable usar C&lt;strict&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the C&lt;use strict&gt; pragma ensures that all variables are properly
declared and prevents other misuses of legacy Perl features.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T145646Z" creationid="explorer" creationdate="20150905T145646Z">
        <seg>El uso del pragma C&lt;use strict&gt; garantiza que se declaren todas las variables de forma adecuada
e impide que se usen incorrectamente las características heredadas de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>VMStar xf Your-Module.tar</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003206Z">
        <seg>VMStar xf Mi-Modulo.tar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Variables beginning with underscore used to be forced into package
main, but we decided it was more useful for package writers to be able
to use leading underscore to indicate private variables and method names.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T175539Z">
        <seg>Las variables cuyo nombre comienza con un guión bajo se solían asignar al paquete C&lt;main&gt;, pero en su día decidimos que para los desarrolladores de paquetes era más útil poder usar guiones bajos iniciales para indicar nombres de variables y métodos privados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Versions prior to perl5.004 had serious security problems with buffer
overflows, and in some cases have CERT advisories (for instance,
L&lt;http://www.cert.org/advisories/CA-1997-17.html&gt; ).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T205454Z">
        <seg>En las versiones anteriores a perl5.004 había problemas de seguridad graves con desbordamiento del búfer y, en algunos casos, notificaciones del CERT (por ejemplo,
http://www.cert.org/advisories/CA-1997-17.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Views
of this calendar are at L&lt;http://www.perl.org/events.html&gt; and
L&lt;http://www.yapc.org&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120414T182714Z">
        <seg>Este calendario se puede ver en L&lt;http://www.perl.org/events.html&gt; y en L&lt;http://www.yapc.org&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Virtually
all known and current Unix derivatives are supported (perl's native
platform), as are other systems like VMS, DOS, OS/2, Windows,
QNX, BeOS, OS X, MPE/iX and the Amiga.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T180947Z">
        <seg>Es compatible con prácticamente todos los sistemas operativos derivados de Unix (la plataforma nativa de perl) conocidos y actuales, así como con otros sistemas como VMS, DOS, OS/2, Windows, QNX, BeOS, OS X, MPE/iX y Amiga.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Visit
C&lt;http://pause.perl.org/&gt;, select "Request PAUSE Account", and wait for
your request to be approved by the PAUSE administrators.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T183310Z">
        <seg>Visite C&lt;http://pause.perl.org/&gt;, seleccione "Request PAUSE Account" (Solicitar cuenta de PAUSE) y espere a que los administradores de PAUSE aprueben su solicitud.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We
saw this earlier in the C&lt;print_info()&gt; example, which calls C&lt;&lt;
$self-&gt;path &gt;&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T084411Z">
        <seg>Ya vimos esto antes en el ejemplo C&lt;imprimir_info()&gt;, que llama a C&lt;&lt; $self-&gt;ruta &gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We already talked about the special C&lt;@ISA&gt; array and the L&lt;parent&gt;
pragma.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T212916Z">
        <seg>Ya hemos hablado sobre el array especial C&lt;@ISA&gt; y el pragma L&lt;parent&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We also covered L&lt;Moo&gt; briefly.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T130743Z" creationid="explorer" creationdate="20150905T130743Z">
        <seg>También hemos descrito L&lt;Moo&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We also recommend using this method to check whether a module has a
sufficient version.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T162704Z">
        <seg>También le recomendamos que use este método para comprobar si un módulo tiene la versión necesaria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We are not
blessing the reference itself, nor the variable that contains that
reference.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083258Z">
        <seg>No se bendicen ni la referencia en sí ni tampoco la variable que contiene la referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can also pass additional arguments to the method:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T182940Z">
        <seg>También pueden pasarse argumentos adicionales al método:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can also use a variable to store a reference to the data structure
that is being blessed as our object:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T153726Z">
        <seg>También podemos usar una variable para almacenar una referencia a la estructura de datos que se bendice como objeto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can manipulate C&lt;@_&gt; in other ways too:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233225Z">
        <seg>También podemos manipular C&lt;@_&gt; de otras maneras:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can override a parent's method in a child class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162033Z">
        <seg>En una clase derivada se puede sobrescribir un método de la clase primaria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We could create
a parent class called C&lt;HasOnOffSwitch&gt;, but that is very artificial.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T101931Z">
        <seg>Podríamos crear una clase primaria llamada C&lt;TieneInterruptor&gt;, pero sería algo muy artificial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We could go even further, and make the C&lt;path&gt; and
C&lt;content&gt; accessors return objects as well.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T174332Z">
        <seg>Incluso se puede hacer que los métodos de acceso a C&lt;ruta&gt; y C&lt;contenido&gt; devuelvan también objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We could have both classes inherit from a common parent, like
C&lt;Machine&gt;, but not all machines have on/off switches.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T224806Z">
        <seg>Podríamos hacer que ambas clases heredasen de una clase primaria común, como C&lt;Máquina&gt;, aunque no todas las máquinas disponen de estos interruptores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We could name our constructor something
else:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T125458Z">
        <seg>Podríamos haber llamado al constructor de cualquier otra forma:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We encourage you
to try C&lt;Moose&gt; out first before worrying about startup speed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T225236Z">
        <seg>Le animamos a probar C&lt;Moose&gt; antes de preocuparse por la velocidad de inicio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We encourage you to learn more by reading the C&lt;Moose&gt;
documentation, starting with
L&lt;Moose::Manual|http://search.cpan.org/perldoc?Moose::Manual&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185440Z">
        <seg>Le animamos a aprender más mediante la lectura de la documentación de C&lt;Moose&gt;, comenzando con L&lt;Moose::Manual|http://search.cpan.org/perldoc?Moose::Manual&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We encourage you to play with and evaluate L&lt;Moose&gt;,
L&lt;Class::Accessor&gt;, and L&lt;Class::Tiny&gt; to see which OO system is right
for you.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T133012Z" creationid="explorer" creationdate="20150905T133012Z">
        <seg>Le recomendamos que pruebe L&lt;Moose&gt;,
L&lt;Class::Accessor&gt;, y L&lt;Class::Tiny&gt; para decidir qué sistema de objetos es adecuado
para usted.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We list some of the books here, and while listing a book implies our
endorsement, don't think that not including a book means anything.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T112240Z" creationid="explorer" creationdate="20150513T112240Z">
        <seg>En este documento se hace referencia a algunos de estos libros. Los que figuran en la lista son libros que recomendamos; no obstante, el que un libro no figure en la lista no quiere decir que sea malo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We mentioned earlier that most Perl objects are implemented as hashes
under the hood.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T093459Z">
        <seg>Ya se ha mencionado previamente que la mayoría de los objetos Perl se implementan internamente como hashes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We mentioned multiple inheritance earlier.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T163531Z">
        <seg>Antes mencionamos la herencia múltiple.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We must also provide some more regression
tests to make sure our patch works and doesn't create a bug somewhere
else along the line.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T160557Z">
        <seg>También tenemos que proporcionar pruebas de regresión adicionales para asegurarnos de que nuestro parche funciona y no crea ningún error en otro lugar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We now compile up Perl, and run it through the test suite.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T233757Z">
        <seg>Ahora compilamos Perl y ejecutamos la serie de pruebas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We often refer to inheritance relationships as B&lt;parent-child&gt; or
C&lt;superclass/subclass&gt; relationships.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T225341Z">
        <seg>A menudo se alude a las relaciones de herencia como relaciones B&lt;primario-derivado&gt; o
C&lt;superclase/subclase&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We recommend that you
don't do this unless you know exactly what you're doing.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T161206Z">
        <seg>Recomendamos no hacer esto, a no ser que sepa exactamente qué está haciendo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We recommend that you avoid this syntax, for several reasons.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T151553Z">
        <seg>Se recomienda evitar el uso de esta sintaxis por varias razones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We recommend that you only access attributes via B&lt;accessor&gt; methods.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T125146Z">
        <seg>Le recomendamos que solo acceda a los atributos a través de los métodos de B&lt;acceso&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We recommend that you use this
Moose-like syntax if you choose C&lt;Class::Accessor&gt; since it means you
will have a smoother upgrade path if you later decide to move to
C&lt;Moose&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T104612Z">
        <seg>Le recomendamos el uso del estilo de sintaxis de Moose si elige C&lt;Class::Accessor&gt;, ya que así le resultará más sencillo el trabajo de migración si posteriormente decide usar C&lt;Moose&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We recommend that you use this method to access another package's
version, rather than looking directly at C&lt;$Package::VERSION&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T214548Z">
        <seg>Le recomendamos que use este método para acceder a la versión de otro paquete, en lugar de mirar directamente en C&lt;$Paquete::VERSION&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We recommend you start by reading the perlootut
document in the latest stable release of Perl, rather than this
version.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T121303Z" creationid="explorer" creationdate="20150905T121303Z">
        <seg>Para empezar le recomendamos que lea el documento perlootut
de la versión estable más reciente de Perl, en lugar de esta
versión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We sometimes say that an object has been
"blessed into a class".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T200516Z">
        <seg>A veces se dice que un objeto ha sido "bendecido en una clase".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We strongly recommend that you use one of these systems.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T164702Z">
        <seg>Le recomendamos que use alguno de los sistemas siguientes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We want to model that in our class
definitions.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185211Z">
        <seg>Queremos expresar esto en las definiciones de las clases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will cover this in more detail later.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T212429Z">
        <seg>Se describirá en detalle más adelante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We'll have another string pointer in there:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T001333Z">
        <seg>Tendremos ahí otro puntero de cadena:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We're going to primarily concentrate on Perl-only modules here, rather
than XS modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T172337Z">
        <seg>Vamos a centrarnos principalmente en módulos de Perl puro, no en módulos XS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We've already seen how to print to standard output using C&lt;print()&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T235431Z">
        <seg>Ya hemos visto la manera de imprimir en la salida estándar mediante C&lt;print()&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Welcome to the joys of
maintaining a software project...</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T141342Z">
        <seg>Así probará las mieles del mantenimiento de un proyecto de software...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Well, apart from a bare C&lt;binmode $fh&gt;, you shouldn't treat them specially.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T004005Z">
        <seg>Bueno, aparte de usar C&lt;binmode $fh&gt;, no debe darles ningún tratamiento especial</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Well, if
we have a pointer to the start of C&lt;pat&gt; then, if we see a C&lt;U&gt; we can
test whether we're still at the start of the string.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T153146Z">
        <seg>Si tenemos un puntero al comienzo de C&lt;pat&gt; y vemos una C&lt;U&gt;, podemos comprobar si aún estamos en el principio de la cadena.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Well, if you can, upgrade to the most recent, but certainly C&lt;5.8.1&gt; or newer.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T084906Z">
        <seg>Si puede, actualice a la versión más reciente; debe usar como mínimo la versión C&lt;5.8.1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Well, the arguments to a subroutine are available
to us as a special array called C&lt;@_&gt; (see L&lt;perlvar&gt; for more on that).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T233500Z">
        <seg>Los argumentos pasados a una subrutina están disponibles en un array especial denominado C&lt;@_&gt; (consulte L&lt;perlvar&gt; para obtener más información).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What Perl does is look at the object's class
first (C&lt;File::MP3&gt; in this case).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185104Z">
        <seg>Perl busca en primer lugar en la clase del objeto (C&lt;Archivo::MP3&gt; en este caso).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is CPAN?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T090810Z">
        <seg>¿Qué es CPAN?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is CPAN?"&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150514T161942Z" creationid="explorer" creationdate="20150514T161942Z">
        <seg>¿Qué es CPAN?"&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What makes a method special is I&lt;how it's called&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200216Z">
        <seg>Lo que hace especiales a los métodos es I&lt;la forma de llamarlos&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What makes a method special is that it expects to receive either an
object or a class name as its first argument.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T155909Z">
        <seg>Lo que hace que un método sea especial es que espera recibir o un objeto o un nombre de clase como primer argumento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What makes all of this important is that the Exporter module uses glob
aliasing as the import/export mechanism.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T180535Z">
        <seg>Lo que hace que todo esto sea importante es que el módulo Exporter usa alias de expansión como mecanismo de importación/exportación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What's that C&lt;shift&gt;?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T233431Z">
        <seg>¿Qué hace C&lt;shift&gt;?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whatever value your C&lt;AUTOLOAD&gt; method returns is
returned to the caller.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T172924Z">
        <seg>Sea cual sea el valor devuelto por el método C&lt;AUTOLOAD&gt;, se devuelve al código que hace la llamada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When
a numeric value is passed as an argument to such an operator, it will be
converted to the format understood by the operator.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T191929Z">
        <seg>Cuando se pasa un valor numérico como argumento a un operador así, se convierte a un formato comprensible para el operador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When
they haven't set the standard themselves, they steal from the best
-- just like Perl itself.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T154258Z" creationid="explorer" creationdate="20150905T153311Z">
        <seg>Al igual que Perl, las bibliotecas que no han establecido
la norma, han copiado
de las mejores bibliotecas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When
you write to the database you will have to use something like this:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T145123Z">
        <seg>Para escribir en la base de datos debe usar una instrucción similar a la siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When Perl is configured to use ithreads, it will use re-entrant library calls
in preference to non-re-entrant versions.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T231001Z">
        <seg>Si Perl está configurado para usar ithreads, las llamadas a biblioteca reentrantes tendrán preferencia sobre las versiones no reentrantes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When Perl searches for a method, it caches the lookup so that future
calls to the method do not need to search for it again.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T164431Z">
        <seg>Cuando Perl busca un método, almacena en caché la búsqueda, a fin de que llamadas posteriores a ese método no tengan que repetir la búsqueda.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a
thread is cloned all Perl data is cloned, however non-Perl data cannot
be cloned automatically.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T172148Z">
        <seg>Cuando se clona un hilo de ejecución, se clonan también todos los datos de Perl. Sin embargo, los datos que no pertenecen a Perl no se pueden clonar automáticamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a class has multiple parents, the method lookup order becomes more
complicated.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T215544Z">
        <seg>Cuando una clase tiene múltiples clases primarias, el orden de búsqueda de métodos se complica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a class inherits from another class, any methods defined in the
parent class are available to the child class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T161627Z">
        <seg>Cuando una clase hereda de otra, cualquier método definido en la clase primaria también estará disponible en la clase derivada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a program is copied to another
machine, the source code does not change, but the STDIO environment might.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110222T085332Z">
        <seg>Cuando se copia un programa a otro equipo, el código fuente no cambia, pero podría cambiar el entorno STDIO.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a string is encoded in UTF-8,
Perl assumes that the program is prepared to deal with Unicode, but when
the string isn't, Perl assumes that only ASCII
is wanted, and so those characters that are not ASCII
characters aren't recognized as to what they would be in Unicode.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T115028Z" creationid="explorer" creationdate="20150513T115028Z">
        <seg>Si una cadena está codificada en UTF-8,
Perl supone que el programa está preparado para trabajar con Unicode, pero si
la codificación es otra, Perl supone que solo se desea usar ASCII
por lo que los caracteres que no sean ASCII
no se reconocerán como lo que serían en Unicode.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When another
developer uses your class, they don't need to know I&lt;how&gt; it is
implemented, they just need to know I&lt;what&gt; it does.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T163658Z">
        <seg>Cuando otros desarrolladores usen su clase no necesitarán saber I&lt;cómo&gt; se ha implementado; solo tienen que saber I&lt;qué&gt; es lo que hace.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When choosing a language you should also be influenced by the
L&lt;resources|http://www.cpan.org/&gt;, L&lt;testing culture|http://www.cpantesters.org/&gt;
and L&lt;community|http://www.perl.org/community.html&gt; which surrounds it.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T113916Z">
        <seg>Al elegir un lenguaje también debe tener en cuenta los L&lt;recursos|http://www.cpan.org/&gt;, la L&lt;cultura de ejecución de pruebas (I&lt;testing&gt;)|http://www.cpantesters.org/&gt;
y la L&lt;comunidad|http://www.perl.org/community.html&gt; del lenguaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When downloading from CPAN, save your file with a C&lt;.tgz&gt;
extension instead of C&lt;.tar.gz&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T002928Z">
        <seg>Al descargar el módulo desde CPAN, guarde el archivo con la extensión C&lt;.tgz&gt; en lugar de C&lt;.tar.gz&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When each filter is called by Perl, a local copy of C&lt;$_&gt; will contain
the key or value to be filtered.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T153446Z">
        <seg>Cuando Perl llama a uno de estos filtros, una copia local de C&lt;$_&gt; contendrá la clave o el valor que se va a filtrar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When in doubt, parenthesize.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T172507Z">
        <seg>En caso de duda, coloque paréntesis.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When it can't, it
emits this warning (if warnings are enabled), and uses UTF-8 encoded data
instead.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T102743Z" creationid="explorer" creationdate="20150905T102743Z">
        <seg>Si no lo consigue,
emite esta advertencia (si las advertencias están habilitadas), y utiliza datos codificados como UTF-8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When it finds the parent class
that implements this method, the method is called.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T085906Z">
        <seg>Cuando encuentra la clase primaria que implementa este método, llama al método.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When perl is configured to use ithreads, it will use re-entrant library calls
in preference to non-re-entrant versions.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T230000Z">
        <seg>Si Perl está configurado para usar ithreads, las llamadas a biblioteca reentrantes tendrán preferencia sobre las versiones no reentrantes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When someone tries to use C&lt;Moose&gt;'s introspection API on a
C&lt;Moo&gt; class or role, it is transparently inflated into a C&lt;Moose&gt;
class or role.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T133611Z" creationid="explorer" creationdate="20150905T123313Z">
        <seg>Cuando alguien intenta utilizar la API de introspección de C&lt;Moose&gt; en una
clase o un rol de C&lt;Moo&gt;, se convierte de forma transparente en una clase
o un rol de C&lt;Moose&gt;
.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the last reference to an object goes away, the object is
destroyed.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T181808Z">
        <seg>Cuando se descarta la última referencia a un objeto, se destruye el objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When used with class methods, the problem is even worse.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T153737Z">
        <seg>Cuando se usa con métodos de clase el problema es incluso peor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using perldoc in it's C&lt;-m&gt; mode (display module source code),
C&lt;perldoc&gt; will attempt to use the pager set in C&lt;PERLDOC_SRC_PAGER&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T215353Z" creationid="explorer" creationdate="20160506T214429Z">
        <seg>Al ejecutar C&lt;perldoc&gt; en modo C&lt;-m&gt; (muestra el código fuente del módulo), intentará utilizar el paginador establecido en C&lt;PERLDOC_SRC_PAGER&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we bless something, we are not blessing the variable which
contains a reference to that thing, nor are we blessing the reference
that the variable stores; we are blessing the thing that the variable
refers to (sometimes known as the I&lt;referent&gt;).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T205434Z">
        <seg>La bendición no afecta a la variable que contiene la referencia al objeto bendecido, ni a la referencia almacenada por la variable; lo que se bendice es aquello a lo que hace referencia la variable (lo que algunas veces se denomina I&lt;referente&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we call C&lt;&lt; $fred-&gt;speak() &gt;&gt;, the C&lt;$fred&gt;
variable is passed as the first argument to C&lt;speak()&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T235854Z">
        <seg>En la llamada C&lt;&lt; $alfredo-&gt;decir() &gt;&gt;, la variable C&lt;$alfredo&gt; se pasa a C&lt;decir()&gt; como primer argumento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we call C&lt;bless&gt; on a variable, we are actually blessing the
underlying data structure that the variable refers to.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T205524Z">
        <seg>Cuando se produce la llamada a C&lt;bless&gt; con una variable, se bendice la estructura de datos subyacente a la que la variable hace referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we do so, we
can still call the parent class's method with the C&lt;SUPER&gt;
pseudo-class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T213102Z">
        <seg>En ese caso, aún es posible llamar al método de la clase primaria mediante la seudoclase C&lt;SUPER&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we instantiate an object,
we assign values to those attributes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T125114Z">
        <seg>Cuando se crea una instancia de un objeto, se asignan valores a sus atributos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we make a method call, Perl arranges for the method's B&lt;invocant&gt;
to be passed as the first argument.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T182824Z">
        <seg>Cuando se hace la llamada a un método, Perl pasa el B&lt;autor de la llamada&gt; como primer argumento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we want to
create a specific object, we start with its class, and B&lt;construct&gt; or
B&lt;instantiate&gt; an object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T124058Z">
        <seg>Para construir un objeto específico, se comienza con la clase asociada y se B&lt;construye&gt; (o se B&lt;crea una instancia de&gt;) un objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you call a method, the thing on the left side of the arrow is
passed as the first argument to the method.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T160247Z">
        <seg>Cuando se llama a un método, lo que hay a la izquierda de la flecha se pasa como primer argumento al método.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you use the B&lt;-n&gt; and B&lt;-p&gt; switches to Perl, C&lt;BEGIN&gt; and
C&lt;END&gt; work just as they do in B&lt;awk&gt;, as a degenerate case.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T082033Z">
        <seg>Cuando se usan los modificadores B&lt;-n&gt; y B&lt;-p&gt; en Perl, C&lt;BEGIN&gt; y C&lt;END&gt; funcionan como lo harían en B&lt;awk&gt;, es decir, como un caso degenerado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you're done with your filehandles, you should C&lt;close()&gt; them
(though to be honest, Perl will clean up after you if you forget):</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T171826Z">
        <seg>Cuando termine de trabajar con los identificadores de archivo, debe cerrarlos con C&lt;close()&gt; (de todos modos, Perl se encargará de ello si se le olvida):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you've found that there isn't a module available for what you're
trying to do, and you've had to write the code yourself, consider
packaging up the solution into a module and uploading it to CPAN so that
others can benefit.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T221803Z">
        <seg>Si no existe ningún módulo para lo que usted necesita, y ya se ha encargado de escribir el código, sería un detalle que empaquetara la solución en un módulo y lo subiera a CPAN para que otros programadores puedan usarlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you've got your name sorted out and you're sure that your module is
wanted and not currently available, it's time to start coding.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T174244Z">
        <seg>Cuando se haya decidido por un nombre y esté seguro de que su módulo es necesario y que actualmente no hay nada parecido disponible, puede empezar a programar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whenever anyone creates a chunk of
Perl code that they think will be useful to the world, they register
as a Perl developer at http://www.cpan.org/modules/04pause.html
so that they can then upload their code to the CPAN.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T200816Z">
        <seg>Si desarrolla código Perl que considera que puede ser útil para otros programadores, debería registrarse como desarrollador Perl en L&lt;http://www.cpan.org/modules/04pause.html&gt; y subir el código a CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whenever you're communicating text with anything that is external to your perl
process, like a database, a text file, a socket, or another program.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T000152Z">
        <seg>Siempre que haya intercambio de texto con alguna entidad externa al proceso de perl, como una base de datos, un archivo de texto, un socket u otro programa</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whenever your encoded, binary string is used together with a text string, Perl
will assume that your binary string was encoded with ISO-8859-1, also known as
latin-1.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T171214Z">
        <seg>Siempre que la cadena binaria codificada se use junto con una cadena de texto, Perl
supondrá que la cadena binaria se codificó con ISO-8859-1 (también llamada latin-1).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Where do I get it?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T150958Z">
        <seg>¿Dónde puedo obtener Perl?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whether or not you can properly
localize a variable that has been exported from a module depends on how
it was exported:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T180616Z">
        <seg>Una variable exportada de un módulo se podrá localizar adecuadamente o no en función de cómo se haya exportado:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Which makes $richard and $dick the same variable, but leaves
@richard and @dick as separate arrays.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T112102Z">
        <seg>Esto hace que $beatriz y $bea sean la misma variable; en cambio, @beatriz y @bea son arrays independientes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While it's possible to refer directly to these hash keys outside of the
class, it's considered a best practice to wrap all access to the
attribute with accessor methods.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T221436Z">
        <seg>Aunque es posible hacer referencia directamente a estas claves del hash fuera de la clase, es recomendable limitar el acceso a los atributos mediante métodos de acceso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While none of the built-in data types have any arbitrary size limits
(apart from memory size), there are still a few arbitrary limits:  a
given variable name may not be longer than 251 characters.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T123039Z">
        <seg>Aunque ninguno de los tipos de datos predefinidos tiene un límite de tamaño (aparte del tamaño de la memoria disponible), hay algunos límites arbitrarios. Por ejemplo, un nombre de variable no puede tener más de 251 caracteres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While short identifiers like C&lt;$gotit&gt; are probably ok, use underscores to
separate words in longer identifiers.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T101504Z">
        <seg>Aunque es aceptable usar identificadores cortos como por ejemplo C&lt;$sinargs&gt; ("sin argumentos"), en los identificadores más largos debe usar guiones bajos para separar palabras.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While still in that directory, type:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T002814Z">
        <seg>Sin salir de ese directorio, escriba:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While the GNU project includes Perl in its distributions, there's no
such thing as "GNU Perl".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110227T183752Z">
        <seg>Aunque el proyecto GNU incluye Perl en sus distribuciones, no existe "GNU Perl".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While the two classes may differ in many ways, when it comes to the
C&lt;print_content()&gt; method, they are the same.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184559Z">
        <seg>Las dos clases pueden ser distintas por diferentes razones, pero en lo que se refiere el método
C&lt;imprimir_contenido()&gt; se comportan de la misma forma.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While this is possible, we strongly recommend
against it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184746Z">
        <seg>Aunque esto es posible, se recomienda rotundamente no hacerlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While we strongly suggest you don't build your objects from scratch,
you should know the term B&lt;bless&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T124214Z">
        <seg>Aunque recomendamos no construir objetos partiendo de cero, debe conocer el concepto de B&lt;bendición&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While you can still drop down to the bare metal and
write your classes by hand, there's really no reason to do that with
modern Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T105942Z">
        <seg>Aunque puede prescindir de estos sistemas modernos y escribir sus propias clases a mano, no es necesario hacerlo con las versiones modernas de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While you're doing that, make really sure you haven't missed a module
similar to the one you're about to write.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T182752Z">
        <seg>Y al hacerlo asegúrese de que no ha pasado por alto ningún módulo similar al que va a escribir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whitespace is irrelevant:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T001249Z">
        <seg>El espacio en blanco no es significativo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Who develops it?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110227T183707Z">
        <seg>¿Quién lo desarrolla?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why is it free?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110227T183719Z">
        <seg>¿Por qué es gratis?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why waste brainpower on a one-shot when you
might want to do something like it again?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111014T125006Z">
        <seg>¿Por qué gastar energía cerebral en algo que va a usar una sola vez?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wide character in print at example.pl line 2.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T010730Z">
        <seg>Wide character in print at ejemplo.pl line 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Windows-specific tests.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110821T202109Z">
        <seg>Pruebas específicas de Windows.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With C&lt;Class::Tiny&gt;, all accessors are read-write.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T125712Z" creationid="explorer" creationdate="20150905T125712Z">
        <seg>En C&lt;Class::Tiny&gt; todos los métodos de acceso son de lectura-escritura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With C&lt;require&gt; you can get into this problem:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170643Z">
        <seg>Con C&lt;require&gt; puede producirse el siguiente problema:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With Perl 5.10 you
are no longer limited to the built in pragmata; you can now create user
pragmata that modify the behaviour of user functions within a lexical scope.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111030T001048Z">
        <seg>Antes de Perl 5.10 solo podíamos usar los pragmas predefinidos; ahora podemos crear pragmas de usuario personalizados para modificar el comportamiento de funciones de usuario en un ámbito léxico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With no specified encoding layer, Perl tries to
fit things into a single byte.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T102647Z" creationid="explorer" creationdate="20150905T102620Z">
        <seg>Si no se especifica una capa de codificación, Perl intenta que cada
carácter ocupe un solo byte.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Within its lexical scope you shouldn't have this problem.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120423T140637Z">
        <seg>En su ámbito léxico, este problema no debería producirse.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Without the C&lt;our $AUTOLOAD&gt; declaration, this code will not compile
under the L&lt;strict&gt; pragma.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T003812Z">
        <seg>Si se usa el pragma L&lt;strict&gt; sin la declaración C&lt;our $AUTOLOAD&gt;, este código no se compilará.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Without the flag, it is assumed to be
ISO-8859-1.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T171733Z">
        <seg>Sin esta marca, se supone que dicha representación es ISO-8859-1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Would print '1', because C&lt;$foo&gt; holds a reference to the I&lt;original&gt;
C&lt;$bar&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T112319Z">
        <seg>Se imprime '1', ya que C&lt;$foo&gt; contiene una referencia a la variable C&lt;$bar&gt; I&lt;original&gt;,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing a bunch
of accessors by hand is also incredibly tedious.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T210502Z">
        <seg>También es muy aburrido escribir a mano un conjunto de métodos de acceso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing subroutines is easy:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233231Z">
        <seg>Es fácil escribir subrutinas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>X&lt;$?&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231403Z">
        <seg>X&lt;$?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>X&lt;::&gt; X&lt;'&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T232950Z">
        <seg>X&lt;::&gt; X&lt;'&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>X&lt;constant&gt; X&lt;scalar, constant&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T155442Z">
        <seg>X&lt;constant&gt; X&lt;constante&gt; X&lt;scalar, constant&gt; X&lt;escalar, constante&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>X&lt;variable, punctuation&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T175354Z">
        <seg>X&lt;variable, punctuation&gt; X&lt;variable, puntuación&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>XS modules serve a rather different purpose, and
you should consider different things before distributing them - the
popularity of the library you are gluing, the portability to other
operating systems, and so on.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T215601Z">
        <seg>Los módulos XS se usan para otros fines y hay que tener en cuenta varias cosas antes de distribuirlos, como la popularidad de la biblioteca para la que se está creando un enlace, la portabilidad a otros sistemas operativos, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Yes, you can!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T005709Z">
        <seg>Por supuesto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You
can find the latest releases at L&lt;http://www.cpan.org/src/&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T193537Z">
        <seg>Encontrará las versiones más recientes en L&lt;http://www.cpan.org/src/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You
know there's a tasty module inside.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T184807Z">
        <seg>Y sabe que dentro hay un módulo interesantísimo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You
may run in to some code in the wild which uses it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120801T004711Z">
        <seg>Podría ver código de otros programadores con esta característica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You
should also read the L&lt;perlsyn&gt;, L&lt;perlop&gt;, and L&lt;perlsub&gt; documents.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194456Z">
        <seg>También debería leer los documentos L&lt;perlsyn&gt;, L&lt;perlop&gt; y L&lt;perlsub&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You already learned that a B&lt;method&gt; is a subroutine that operates on
an object.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200113Z">
        <seg>Ya se ha indicado que un B&lt;método&gt; es una subrutina que opera sobre un objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You are
I&lt;strongly&gt; advised to follow this introduction with more information
from the full Perl manual, the table of contents to which can be found
in L&lt;perltoc&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T000225Z">
        <seg>Es I&lt;muy&gt; recomendable complementar esta introducción con información del manual de Perl completo, cuya tabla de contenido se encuentra en L&lt;perltoc&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You are permitted and encouraged to use this code and any
derivatives thereof in your own programs for fun or for profit as you
see fit.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T172312Z">
        <seg>Le permitimos y animamos a utilizar este código y los derivados que surjan en sus propios programas, ya sea con fines de diversión o beneficio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can
switch into a package in more than one place; it merely influences
which symbol table is used by the compiler for the rest of that
block.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T110912Z">
        <seg>Puede cambiar a un paquete en más de un lugar; esto solo influye en la tabla de símbolos que el compilador usará para el resto del bloque.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add new paths to
the default C&lt;@INC&gt; in the Preferences menu item in the
MacPerl application (C&lt;$ENV{MACPERL}site_lib:&gt; is added
automagically).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T002619Z">
        <seg>Puede agregar nuevas rutas a los valores predeterminados de C&lt;@INC&gt; a través del elemento de menú Preferencias de la aplicación MacPerl (C&lt;$ENV{MACPERL}site_lib:&gt; se agrega automágicamente).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also
choose to override some of these methods in your class.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161509Z">
        <seg>También puede sobrescribir algunos de estos métodos en sus clases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also check the value of C&lt;$AUTOLOAD&gt; and return without doing
anything when called to handle C&lt;DESTROY&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T183034Z">
        <seg>También puede comprobar el valor de C&lt;$AUTOLOAD&gt; y volver sin hacer nada cuando se realice la llamada para controlar C&lt;DESTROY&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also go the other direction, and write your
main program in C or C++, and then link in some Perl code on the fly,
to create a powerful application.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T170748Z">
        <seg>También puede optar por trabajar en sentido contrario: desarrollar el programa principal en C o C++, y después vincular código Perl sobre la marcha para crear una aplicación eficaz.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also override C&lt;DOES&gt; directly in your own classes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T161739Z">
        <seg>También puede sobrescribir C&lt;DOES&gt; directamente en sus clases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also put
directly the path to your perl executable, like in C&lt;#!/usr/bin/perl&gt;).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T180539Z">
        <seg>También puede especificar directamente la ruta de acceso a su ejecutable perl: C&lt;#!/usr/bin/perl&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use C&lt;while&gt; in a post-condition:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T224606Z">
        <seg>También puede usar C&lt;while&gt; en una condición posterior:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use L&lt;Class::Tiny::Antlers&gt; for C&lt;Moose&gt;-like syntax.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T125754Z" creationid="explorer" creationdate="20150905T125743Z">
        <seg>También puede utilizar L&lt;Class::Tiny::Antlers&gt; si prefiere una sintaxis parecida a la de C&lt;Moose&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use a subroutine reference as a method:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211539Z">
        <seg>También es posible usar una referencia a una subrutina como un método:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can define a subroutine outside its package by
explicitly qualifying the name of the subroutine:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T181319Z">
        <seg>Es posible definir una subrutina fuera del paquete calificando explícitamente el nombre de la subrutina:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can do various useful things to lists:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T002003Z">
        <seg>Puede hacer varias cosas útiles con las listas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can force Perl to interpret the bareword as a class name by
appending "::" to it, like we saw earlier:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T160217Z">
        <seg>Puede obligar a Perl a interpretar las palabras sueltas como nombres de clase agregándoles "::", como se vio previamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can force Perl to use the first interpretation (i.e. as a method
call on the class named "Class") in two ways.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T212708Z">
        <seg>Puede forzar a Perl a usar la primera interpretación (es decir, como una llamada a un método de la clase llamada "Clase") de dos formas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can force UTF-8 encoding on in a string</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T154013Z">
        <seg>Puede forzar la aplicación de una codificación UTF-8 en una cadena</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can get an overview of all the files with this command:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T081028Z">
        <seg>Puede ver una descripción general de todos los archivos con el siguiente comando:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can get at lists of keys and values with C&lt;keys()&gt; and
C&lt;values()&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110404T171555Z">
        <seg>Puede obtener una lista de las claves y los valores con C&lt;keys()&gt; y  C&lt;values()&gt; respectivamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can get commercial support of Perl if you wish, although for most
users the informal support will more than suffice.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T175416Z">
        <seg>Si lo desea, puede obtener soporte comercial para Perl, pero a la mayoría de los usuarios les bastará con el soporte informal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can get gzip from
http://www.s390.ibm.com/products/oe/bpxqp1.html</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010841Z">
        <seg>Puede obtener gzip en http://www.s390.ibm.com/products/oe/bpxqp1.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can get gzip from ftp://prep.ai.mit.edu/pub/gnu/</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T184512Z">
        <seg>Puede obtener gzip desde ftp://prep.ai.mit.edu/pub/gnu/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can get more documentation, tutorials and community support
online at L&lt;http://www.perl.org/&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110306T212901Z">
        <seg>Puede obtener más documentación, tutoriales y soporte de la comunidad en línea en L&lt;http://www.perl.org/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can modify C&lt;$?&gt; to change the exit
value of the program.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T162504Z">
        <seg>Puede modificar C&lt;$?&gt; para cambiar el valor de salida del programa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can open a file for input or output using the C&lt;open()&gt; function.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T182736Z">
        <seg>La función C&lt;open()&gt; abre un archivo para entrada o salida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can prevent this by
defining an empty C&lt;DESTROY&gt;, like we did in the autoloading example.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T182934Z">
        <seg>Puede evitar este comportamiento definiendo un método C&lt;DESTROY&gt; vacío, como hicimos en el ejemplo de carga automática.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can provide this layer when C&lt;open&gt;ing the file:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T000905Z">
        <seg>Puede aplicar esta capa al abrir el archivo con C&lt;open&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can read from an open filehandle using the C&lt;&lt; &lt;&gt; &gt;&gt; operator.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T225428Z">
        <seg>Puede utilizar el operador C&lt;&lt; &lt;&gt; &gt;&gt; para leer de un identificador de archivo abierto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can read that documentation using the C&lt;perldoc&gt;
command or whatever method you're using to read this document.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T180155Z">
        <seg>Puede consultar la documentación mediante el comando C&lt;perldoc&gt;
o cualquier otro método que use para leer este documento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can refer to variables and filehandles in other packages
by prefixing the identifier with the package name and a double
colon: C&lt;$Package::Variable&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T110958Z">
        <seg>Puede hacer referencia a variables e identificadores de archivo en otros paquetes usando como prefijo del identificador el nombre del paquete y un doble signo de dos puntos: C&lt;$Paquete::Variable&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can say C&lt;*foo{PACKAGE}&gt; and C&lt;*foo{NAME}&gt; to find out what name and
package the *foo symbol table entry comes from.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T160034Z">
        <seg>Puede usar C&lt;*foo{PACKAGE}&gt; y C&lt;*foo{NAME}&gt; para averiguar de qué nombre y paquete proviene la entrada *foo de la tabla de símbolos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can search CPAN on L&lt;http://metacpan.org&gt; or
L&lt;http://search.cpan.org/&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211409Z">
        <seg>Puede hacer búsquedas en CPAN a través de L&lt;http://metacpan.org&gt; o
L&lt;http://search.cpan.org/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify several classes to try by joining them with commas
or semicolons, as in C&lt;-MTk::SuperPod;Tk::Pod&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T182009Z">
        <seg>Puede especificar varias clases separándolas con comas o signos de punto y coma (por ejemplo, C&lt;-MTk::SuperPod;Tk::Pod&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can submit bugs to RT either through its web interface or by
email.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T211701Z">
        <seg>Puede enviar informes de error a RT a través de su interfaz web o por correo electrónico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can think of a method as the things that an object can
I&lt;do&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T124852Z">
        <seg>Se puede considerar que los métodos de un objeto son las operaciones que un objeto puede
I&lt;hacer&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can think of a module as the fundamental unit of reusable Perl
code; see L&lt;perlmod&gt; for details.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T234050Z">
        <seg>Un módulo se puede definir como la unidad fundamental de código Perl reutilizable; encontrará más información en L&lt;perlmod&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use Andreas Koenig's CPAN module
( http://www.cpan.org/modules/by-module/CPAN )
to automate the following steps, from DECOMPRESS through INSTALL.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000037Z">
        <seg>Puede usar el módulo CPAN de Andreas Koenig ( http://www.cpan.org/modules/by-module/CPAN ) para automatizar los siguientes pasos, desde la descompresión hasta la instalación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use C&lt;-w optionname&gt; (without a value) as shorthand for
C&lt;-w optionname:I&lt;TRUE&gt;&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T170330Z">
        <seg>Puede usar C&lt;-w nombre_opción&gt; (sin un valor) como una forma abreviada de C&lt;-w nombre_opción:I&lt;TRUE&gt;&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use Unicode in string literals, in
identifiers (but they still have to be "word characters" according to C&lt;\w&gt;),
and even in custom delimiters.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T085717Z">
        <seg>Puede usar Unicode en literales de cadena, en identificadores (aunque deben ser "caracteres de palabra" compatibles con C&lt;\w&gt;) e incluso en delimitadores personalizados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use a leading underscore to indicate that a variable or
function should not be used outside the package that defined it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T105517Z">
        <seg>Puede agregar un guión bajo inicial al principio del nombre de una variable o función para indicar no se debe usar fuera del paquete en el que se definió.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use an "=" instead of the ":", as in: C&lt;-w textsize=15&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T182204Z">
        <seg>Puede usar un signo "=" en lugar del signo ":"; por ejemplo, C&lt;-w textsize=15&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use any combination of the methods from none to all four.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T153342Z">
        <seg>Puede usar cualquier combinación de estos métodos (desde ninguno hasta los cuatro).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use parentheses for functions' arguments or omit them
according to your personal taste.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233838Z">
        <seg>Puede escribir los argumentos de las funciones entre paréntesis u omitir los paréntesis, si lo prefiere.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the C&lt;${^GLOBAL_PHASE}&gt; variable to detect if you are
currently in the global destruction phase:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T183452Z">
        <seg>Puede usar la variable C&lt;${^GLOBAL_PHASE}&gt; para comprobar si está actualmente en la fase de destrucción global:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the shareware Winzip ( http://www.winzip.com ) to
decompress and unpack modules.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T012329Z">
        <seg>Puede usar el software shareware WinZip (http://www.winzip.com) para descomprimir y desempaquetar el módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use this to print out all the variables in a package, for
instance.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T150535Z">
        <seg>Puede usar esto para imprimir todas las variables del paquete, por ejemplo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use whitespace and the C&lt;&lt; =&gt; &gt;&gt; operator to lay them out more
nicely:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234350Z">
        <seg>Puede usar espacio en blanco y el operador C&lt;&lt; =&gt; &gt;&gt; para expresarlos de manera más clara:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can work around the first case by using the fully qualified name
(C&lt;$Package::FOO&gt;) where you need a local value, or by overriding it
by saying C&lt;*FOO = *Package::FOO&gt; in your script.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T180709Z">
        <seg>Puede evitar el primer caso usando el nombre completo (C&lt;$Package::FOO&gt;) donde necesite un valor local, o bien reemplazarlo mediante C&lt;*FOO = *Package::FOO&gt; en el script.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can't
use it for regular subroutine calls or class methods:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162308Z">
        <seg>No se puede usar para llamadas normales a subrutinas ni para métodos de clase:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can't.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T005938Z">
        <seg>No se puede.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could
consider adopting a kind of "Hungarian notation" to help with this.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T005456Z">
        <seg>Podría usar una notación "húngara" como ayuda.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could open the document in a web browser, and change the character set or
character encoding until you can visually confirm that all characters look the
way they should.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120504T004913Z">
        <seg>Puede abrir el documento en un navegador web y probar varios juegos o codificaciones de caracteres hasta confirmar visualmente que se ven bien todos los caracteres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You do this by using L&lt;Carp|Carp&gt; and replacing your C&lt;warn&gt;s with
C&lt;carp&gt;s.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T181811Z">
        <seg>Para ello debe usar L&lt;Carp|Carp&gt; y reemplazar C&lt;warn&gt; por C&lt;carp&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You don't have to worry about finding or paying for Perl; it's freely
available and several popular operating systems come with Perl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110329T231144Z">
        <seg>No tiene que preocuparse de buscar o pagar por usar Perl; está disponible gratuitamente y varios sistemas operativos populares lo incluyen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You don't just have to match on fixed strings.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T234751Z">
        <seg>No tiene que limitarse a detectar coincidencias en cadenas fijas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You gave me bar::baz</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T160150Z">
        <seg>Recibí bar::baz</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You gave me main::foo</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T160132Z">
        <seg>Recibí main::foo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have
to make "/hurd/pfinet" the translator for "/servers/socket/2", giving
it the right arguments.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T134732Z">
        <seg>Debe establecer "/hurd/pfinet" como traductor de "/servers/socket/2", suministrándole los argumentos correctos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have a DBM database
that you need to share with a third-party C application.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T153607Z">
        <seg>Tiene una base de datos DBM que desea compartir con una aplicación en C de terceros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have a piece of data on which many different operations are
applied.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T174708Z">
        <seg>Tiene datos a los que hay que aplicar muchas operaciones diferentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may also
give a descriptive name of a page, such as C&lt;perlfunc&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T184818Z">
        <seg>También puede especificar un nombre descriptivo de una página, como C&lt;perlfunc&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may find it helpful to use letter case to indicate the scope
or nature of a variable.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111013T002115Z">
        <seg>Puede encontrar útil usar el tamaño de caja de las letras para indicar el ámbito o la naturaleza de una variable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may have multiple C&lt;BEGIN&gt; blocks within a file (or
eval'ed string); they will execute in order of definition.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T161903Z">
        <seg>Es posible disponer de varios bloques C&lt;BEGIN&gt; en el mismo archivo (o cadena evaluada); se ejecutarán por orden de definición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may have to re-read this entire section a few times...</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T221711Z">
        <seg>Es posible que tenga que leer esta sección varias veces...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may mail your bug reports (be sure to include full configuration
information as output by the myconfig program in the perl source
tree, or by C&lt;perl -V&gt;) to perlbug@perl.org .</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T130333Z">
        <seg>Puede notificar sus informes de error a través de la dirección perlbug@perl.org (no olvide incluir toda la información de configuración emitida por el programa myconfig en el árbol de código fuente de perl, o por C&lt;perl -V&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may or may not choose to follow this usage.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120613T190333Z">
        <seg>Puede elegir seguir esta convención o no,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may see
this idiom in the wild combined with a call to C&lt;can&gt;:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T222847Z">
        <seg>Puede observar este modismo en la siguiente llamada a C&lt;can&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may see this sort of
thing when looking at code in the wild.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T200320Z">
        <seg>Puede encontrarse con este tipo de cosas al examinar código Perl ajeno.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may snoop on pending developments via the
L&lt;archives|http://www.nntp.perl.org/group/perl.perl5.porters/&gt;
or read the L&lt;faq|http://dev.perl.org/perl5/docs/p5p-faq.html&gt;,
or you can subscribe to the mailing list by sending
perl5-porters-subscribe@perl.org a subscription request
(an empty message with no subject is fine).</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T112859Z">
        <seg>Si desea curiosear los desarrollos que se están realizando, puede consultar el L&lt;archivo de mensajes de la lista de correo|http://www.nntp.perl.org/group/perl.perl5.porters/&gt; o leer las L&lt;preguntas más frecuentes|http://dev.perl.org/perl5/docs/p5p-faq.html&gt;. También puede suscribirse a la lista de correo enviando una solicitud de suscripción a perl5-porters-subscribe@perl.org (solo tiene que enviar un mensaje vacío sin asunto).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may still see C&lt;require 'syscall.ph'&gt; or similar
around - the F&lt;.ph&gt; file should be created by running F&lt;h2ph&gt; on the
corresponding F&lt;.h&gt; file.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T154337Z">
        <seg>Es posible que se encuentre código en el que se usa C&lt;require 'syscall.ph'&gt; o algo similar; para crear el archivo F&lt;.ph&gt; se debe ejecutar F&lt;h2ph&gt; en el archivo F&lt;.h&gt; correspondiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may turn it off explicitly for particular
portions of code via the C&lt;no warnings&gt; pragma or the C&lt;$^W&gt; variable
if you must.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111016T172116Z">
        <seg>Puede desactivarla explícitamente en partes del código con el pragma C&lt;no warnings&gt; o con la variable C&lt;$^W&gt;, si así lo desea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might
be able to use the CPAN instructions from the "Unix or Linux" section
above as well; give it a try.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000448Z">
        <seg>Es posible que las instrucciones de CPAN especificadas en la sección sobre "Unix o Linux" anterior también funcionen; haga la prueba.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might also
want to read through L&lt;perlsource&gt; too.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T084121Z">
        <seg>También debería leer L&lt;perlsource&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might also see the terms B&lt;getter&gt; and B&lt;setter&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T184152Z">
        <seg>También puede ver los términos B&lt;getter&gt; y B&lt;setter&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might also want to check out
L&lt;perlfaq8/"How do I keep my own module/library directory?"&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T180548Z">
        <seg>Es posible que también le interese consultar "¿Qué tengo que hacer para mantener mi propio directorio de módulos/bibliotecas?" en L&lt;perlfaq8&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might be tempted to use C&lt;$#array + 1&gt; to tell you how many items there
are in an array.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T234438Z">
        <seg>Podría sentirse tentado de usar C&lt;$#array + 1&gt; para determinar el número de elementos de un array.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might feel that everyone else needs it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T144330Z">
        <seg>crea que a todo el mundo le vendría bien,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might find these links useful:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110329T225721Z">
        <seg>Es posible que estos vínculos le resulten de utilidad:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might love it.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T190132Z">
        <seg>Es posible que su módulo le encante y que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might notice several familiar Perl concepts in this collection of
ACM columns from Jon Bentley.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110604T233207Z">
        <seg>Es posible que encuentre varios conceptos de Perl familiares en esta colección de artículos de la ACM escritos por Jon Bentley.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might want to keep these desktop references close by your keyboard:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110526T104011Z">
        <seg>Es probable que desee tener estas referencias a mano:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You need to perform the same general operations on related types of
data, but with slight variations depending on the specific type of data
the operations are applied to.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T102433Z">
        <seg>Es necesario llevar a cabo las mismas operaciones generales sobre tipos de datos relacionados, pero con ligeras variaciones en función del tipo de datos específico al que se aplican estas operaciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You really should build the whole distribution on the machine it will
eventually live on, and then type C&lt;make install&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T191937Z">
        <seg>Es muy recomendable compilar toda la distribución en el equipo en el que se va a instalar y después ejecutar el comando C&lt;make install&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should
check that a contained object is defined before calling a method on it:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T183420Z">
        <seg>Antes de llamar a un método en el objeto, debe comprobar si se han definido objetos contenidos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should also always run under C&lt;use strict&gt; or know the
reason why not.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T132256Z">
        <seg>También debe ejecutar siempre los programas con C&lt;use strict&gt;; si no lo hace, debe saber por qué no necesita hacerlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should also check out L&lt;perlmodlib&gt; for
some style guides on constructing both modules and classes.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T231810Z">
        <seg>También debería consultar L&lt;perlmodlib&gt;, que le proporcionará unas directrices para la construcción de módulos y clases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should also check your modules, and upgrade them if necessary.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195406Z">
        <seg>También debe comprobar los módulos y actualizarlos si es necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should also take a look at L&lt;perlmodstyle&gt; for best practices in
making a module.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T121805Z" creationid="explorer" creationdate="20150513T121805Z">
        <seg>También puede consultar L&lt;perlmodstyle&gt;, donde se describe procedimientos
recomendados para desarrollar módulos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should make a module out of any code that you think is going to be
useful to others.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T172423Z">
        <seg>En un módulo debe incluir código que crea que puede ser de utilidad para otros programadores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You shouldn't worry about what this format is, because conversion is
automatically done when you decode or encode.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T220641Z">
        <seg>No tiene que preocuparse por los detalles, ya que la conversión se realiza automáticamente al descodificar y codificar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will need the packages mentioned in F&lt;README.dos&gt;
in the Perl distribution.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T002810Z">
        <seg>Necesitará los paquetes indicados en el archivo F&lt;README.dos&gt; incluido en la distribución de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will need the packages mentioned in F&lt;README.dos&gt; in the Perl distribution.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T002829Z">
        <seg>Necesitará los paquetes indicados en el archivo F&lt;README.dos&gt; incluido en la distribución de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will sometimes see older books or documentation mention "blessing a
reference" or describe an object as a "blessed reference", but this is
incorrect.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T234553Z">
        <seg>A veces verá en documentación o en libros antiguos que se habla de "bendecir una referencia" o se describe un objeto como una "referencia bendecida", pero esto no es correcto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll have to check their
respective release notes to see just what the differences are.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110406T145506Z">
        <seg>Para averiguar cuáles son las diferencias, consulte las notas de la versión correspondiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll need a compiler such as
Visual C++.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T010144Z">
        <seg>Necesitará un compilador (por ejemplo, Visual C++).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll need the C&lt;nmake&gt; utility, available at
http://download.microsoft.com/download/vc15/Patch/1.52/W95/EN-US/nmake15.exe
or dmake, available on CPAN.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T010025Z">
        <seg>Necesitará la utilidad C&lt;nmake&gt;, disponible en http://download.microsoft.com/download/vc15/Patch/1.52/W95/EN-US/nmake15.exe, o dmake, disponible en CPAN:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll see the difference right away.\n" }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T164126Z">
        <seg>Verá la diferencia inmediatamente.\n" }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You're a much better advocate if your claims are reasonable and
grounded in reality.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110401T172211Z">
        <seg>Si sus afirmaciones son razonables y están basadas en la realidad, sus esfuerzos de evangelización tendrán más éxito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You're also missing out on
an awful lot of useful code; consider having a look at L&lt;perlmod&gt;,
L&lt;perlmodlib&gt; and L&lt;perlmodinstall&gt; before coming back here.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T215355Z">
        <seg>Además, eso significa que aún no se está beneficiando de una enorme cantidad de código que puede resultarle muy útil; antes de leer este documento debería leer L&lt;perlmod&gt;, L&lt;perlmodlib&gt; y L&lt;perlmodinstall&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You're encouraged to create self-tests for your module to ensure it's
working as intended on the myriad platforms Perl supports; if you upload
your module to CPAN, a host of testers will build your module and send
you the results of the tests.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T221052Z">
        <seg>Le animamos a crear pruebas automáticas del módulo para asegurarse de que funciona de la manera prevista en las distintas plataformas compatibles con Perl; si sube el módulo a CPAN, una legión de comprobadores dedicará tiempo a compilar su módulo y enviarle los resultados de las pruebas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You've probably
heard terms like "class", "object, "method", and "attribute" before.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195146Z">
        <seg>Probablemente ya conoce términos como "clase", "objeto", "método" y "atributo".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your overridden C&lt;can&gt;
method should return a subroutine reference for any method that your
C&lt;AUTOLOAD&gt; responds to.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T181657Z">
        <seg>Su versión sobrescrita de C&lt;can&gt; debe devolver una referencia a la subrutina para cualquier método al que responda C&lt;AUTOLOAD&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your system may also have man pages installed for those modules, in
which case you can probably just use the man(1) command.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110808T205348Z">
        <seg>Es posible que también estén instaladas en el sistema páginas de manual para esos módulos, en cuyo caso es probable que desee usar simplemente el comando man(1).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your text string will be sent using the bytes in Perl's internal format.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195508Z">
        <seg>La cadena de texto se enviará con los bytes del formato interno de Perl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[-L language_code]</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T113005Z" creationid="explorer" creationdate="20150905T113005Z">
        <seg>[-L código_idioma]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[-M FormatterClassName]</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T112949Z" creationid="explorer" creationdate="20150905T112949Z">
        <seg>[-M NombreClaseFormateador]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[-X]</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T112959Z" creationid="explorer" creationdate="20150905T112959Z">
        <seg>[-X]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[-d destination_file]</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T112933Z" creationid="explorer" creationdate="20150905T112933Z">
        <seg>[-d archivo_destino]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[-i] [-V] [-T] [-r]</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T112919Z" creationid="explorer" creationdate="20150905T112919Z">
        <seg>[-i] [-V] [-T] [-r]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[-n nroff-replacement]</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T212850Z" creationid="explorer" creationdate="20160506T212850Z">
        <seg>[-n sustituto-nroff]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[-o formatname]</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T112938Z" creationid="explorer" creationdate="20150905T112938Z">
        <seg>[-o nombreformato]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[-w formatteroption:value]</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T212818Z" creationid="explorer" creationdate="20160506T212818Z">
        <seg>[-w opciónformateador:valor]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[Well, it was in F&lt;pp.c&gt; when this tutorial was written.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T001239Z">
        <seg>[Bueno, estaba en F&lt;pp.c&gt; en el momento de redactar este tutorial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[^aeiou]            matches a single character outside the given</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T120143Z" creationid="explorer" creationdate="20150905T120143Z">
        <seg>[^aeiou]            un solo carácter no perteneciente al conjunto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[aeiou]             matches a single character in the given set</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T121720Z">
        <seg>[aeiou]             un solo carácter del conjunto especificado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[xyz];</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172732Z">
        <seg>[xyz];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\                    /</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160303Z" creationid="explorer" creationdate="20150905T160303Z">
        <seg>\                    /</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\      /</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160314Z" creationid="explorer" creationdate="20150905T160314Z">
        <seg>\      /</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\D                  a non-digit</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230245Z">
        <seg>\D                  un carácter que no sea un dígito</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\S                  non-whitespace character</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230229Z">
        <seg>\S                  un carácter que no sea un espacio en blanco</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\W                  a non-word character</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230259Z">
        <seg>\W                  un carácter que no sea de palabra</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\d                  a digit (0-9)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230233Z">
        <seg>\d                  un dígito (0-9)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\s                  a whitespace character (space, tab, newline,</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T120548Z" creationid="explorer" creationdate="20150905T115628Z">
        <seg>\s                  un espacio en blanco (espacio, tabulación, nueva línea,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\w                  a word character (a-z, A-Z, 0-9, _)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230250Z">
        <seg>\w                  un carácter de palabra (a-z, A-Z, 0-9, _)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>^                   start of string</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T235515Z">
        <seg>^                   principio de una cadena</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>__END__</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231022Z">
        <seg>__END__</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a single character</seg>
      </tuv>
      <tuv lang="ES">
        <seg>un solo carácter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>adjacent)</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T120230Z" creationid="explorer" creationdate="20150905T120230Z">
        <seg>contiguos)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>and C&lt;no myint;&gt; is</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T232700Z">
        <seg>y C&lt;no entero;&gt; se convierte en:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>and calling C&lt;Perl_mro_register&gt;:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T223511Z">
        <seg>y llamar a C&lt;Perl_mro_register&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>and is I&lt;not&gt; the same as writing:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T112955Z">
        <seg>y I&lt;no&gt; es lo mismo que escribir:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>and their source code:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T151628Z">
        <seg>y su código fuente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apple  =&gt; "red",</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T161758Z">
        <seg>manzana =&gt; "rojo",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>array   =&gt;  {</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T114625Z" creationid="explorer" creationdate="20150905T114625Z">
        <seg>array   =&gt;  {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>as UTF-8-encoded Unicode.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T153957Z">
        <seg>como caracteres Unicode codificados en UTF-8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>autosplit("$dir:Some:Module.pm", "$dir:auto", 0, 1, 1);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T002703Z">
        <seg>autosplit("$dir:Mi:Modulo.pm", "$dir:auto", 0, 1, 1);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>aux c2ph h2ph h2xs perlbug pl2pm pod2html pod2man splain xsubpp</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T143331Z" creationid="explorer" creationdate="20150905T143331Z">
        <seg>aux c2ph h2ph h2xs perlbug pl2pm pod2html pod2man splain xsubpp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>banana =&gt; "yellow",</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234410Z">
        <seg>plátano =&gt; "amarillo",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>because the main point isn't whether the user typed B&lt;-v&gt; or not.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T104748Z">
        <seg>porque el objetivo principal no es saber si el usuario ejecutó el programa con el modificador B&lt;-v&gt; (de I&lt;verbose&gt;, que se podría traducir como "locuaz" y en este contexto quiere decir "detallado").</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>because the second way hides the main point of the statement in a
modifier.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T132913Z">
        <seg>porque la segunda forma esconde el objetivo principal de la instrucción dentro de un modificador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>binary0.1110011001100...</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T195814Z">
        <seg>binary0.1110011001100...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>binmode $fh, ':encoding(UTF-8)';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T122418Z">
        <seg>binmode $fh, ':encoding(UTF-8)';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>binmode STDOUT, ":encoding(UTF-8)";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172331Z">
        <seg>binmode STDOUT, ":encoding(UTF-8)";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bless $foo, 'Class';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083127Z">
        <seg>bless $foo, 'Clase';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bless $self, $class;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T153745Z">
        <seg>bless $self, $clase;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bless \$value, $class;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T144423Z">
        <seg>bless \$valor, $clase;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>by Tom Christiansen, brian d foy, Larry Wall with Jon Orwant
	ISBN 978-0-596-00492-7 [4th edition February 2012]
	ISBN 978-1-4493-9890-3 [ebook]
	http://oreilly.com/catalog/9780596004927</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160420T224741Z" creationid="explorer" creationdate="20160420T224741Z">
        <seg>por Tom Christiansen, brian d foy y Larry Wall, con Jon Orwant
	ISBN 978-0-596-00492-7 [4ª edición - Febrero de 2012]
	ISBN 978-1-4493-9890-3 [libro electrónico]
	http://oreilly.com/catalog/9780596004927</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>causes variables, subroutines, formats, and file and directory handles
accessible via the identifier C&lt;richard&gt; also to be accessible via the
identifier C&lt;dick&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T151251Z">
        <seg>hace que las variables, subrutinas, formatos e identificadores de archivos y directorios a los que se accede mediante el identificador C&lt;beatriz&gt; también sean accesibles mediante C&lt;bea&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char *pat = SvPVx(*++MARK, fromlen);</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T122352Z" creationid="explorer" creationdate="20150513T122352Z">
        <seg>char *pat = SvPVx(*++MARK, fromlen);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>char *patend = pat + fromlen;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T122354Z" creationid="explorer" creationdate="20150513T122354Z">
        <seg>char *patend = pat + fromlen;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>character (eg "3 4 5 ")</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110204T165438Z">
        <seg>(p. ej., "3 4 5 ")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>chdir($tmpdir)      or die "can't chdir $tmpdir: $!";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T172815Z">
        <seg>chdir($tmpdir)      or die "no se puede ejecutar chdir $tmpdir: $!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>close $fh                       or die $!;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T160014Z">
        <seg>close $archivo                       or die $!;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>close $in or die "$in: $!";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T225729Z">
        <seg>close $entrada or die "$entrada: $!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>const char *name;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193558Z">
        <seg>const char *name;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>content       =&gt; "foo\n",</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T172411Z">
        <seg>contenido    =&gt; "foo\n",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>content       =&gt; $mp3_data,</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T232416Z">
        <seg>contenido     =&gt; $datos_mp3,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>continue;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231237Z">
        <seg>continue;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cpan.org?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T102336Z">
        <seg>¿Y cpan.org?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>data =&gt; $data,</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160350Z" creationid="explorer" creationdate="20150905T160350Z">
        <seg>datos =&gt; $datos,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>decimal string        --&gt; native floating point	(*)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T222522Z">
        <seg>cadena decimal        --&gt; punto flotante nativo (*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>decimal string        --&gt; native integer</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T191818Z">
        <seg>cadena decimal        --&gt; entero nativo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description =&gt; "key/value pairs",</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T212614Z">
        <seg>descripcion =&gt; "pares clave-valor",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description =&gt; "ordered list of items",</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T212600Z">
        <seg>descripcion =&gt; "lista ordenada de elementos",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description =&gt; "single item",</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T212546Z">
        <seg>descripcion =&gt; "elemento individual",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>die "Can't open $foo: $!" unless open(FOO,$foo);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T173144Z">
        <seg>die "No se puede abrir $foo: $!" unless open(FOO,$foo);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>die "No such attribute: $called"</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160651Z" creationid="explorer" creationdate="20150905T160651Z">
        <seg>die "No existe el atributo $llamado"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>die "You cannot create a File::MP3 without an mp3 extension\n"</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160405Z" creationid="explorer" creationdate="20150905T160405Z">
        <seg>die "No puede crear un objeto Archivo::MP3 sin la extensión mp3\n"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>differ from each other in two ways.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170239Z">
        <seg>difieren en dos aspectos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dist/ExtUtils-ParseXS/lib/
path perldoc                 cpan/Pod-Perldoc/</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T143325Z" creationid="explorer" creationdate="20150905T143325Z">
        <seg>dist/ExtUtils-ParseXS/lib/
path perldoc                 cpan/Pod-Perldoc/lib/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>djtarx ( ftp://ftp.delorie.com/pub/djgpp/current/v2/ )
will both uncompress and unpack.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T151553Z">
        <seg>djtarx ( ftp://ftp.delorie.com/pub/djgpp/current/v2/ ) descomprimirá y desempaquetará.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>encode your string, and then follow this with a C&lt;U*&gt; somewhere in your</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T154146Z">
        <seg>de la cadena, y luego continuar con C&lt;U*&gt; en algún lugar del</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eq  equality</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T120435Z">
        <seg>eq  igual que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fieldhash my %time_for;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T201332Z">
        <seg>fieldhash my %hora_para;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>flag =g  perluniprops perlmodlib perlapi perlintern
flag =go perltoc
flag =ro perlcn perljp perlko perltw
flag =   perlvms</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T131116Z">
        <seg>flag =g  perluniprops perlmodlib perlapi perlintern
flag =go perltoc
flag =ro perlcn perljp perlko perltw
flag =   perlvms</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for ($i = 0; $i &lt;= $max; $i++) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180425Z">
        <seg>for ($i = 0; $i &lt;= $max; $i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>force the argument into the integer format.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T194453Z">
        <seg>Fuerzan la conversión del argumento al formato de entero.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>force the argument into the string format.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T194308Z">
        <seg>Fuerzan la conversión del argumento al formato de cadena.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>forces arguments to integer format.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T200148Z">
        <seg>Fuerzan la conversión de los argumentos al formato de entero.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>foreach (@array) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180429Z">
        <seg>foreach (@array) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>foreach my $key (keys %hash) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234932Z">
        <seg>foreach my $clave (keys %hash) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from_to($string, 'FOO', 'BAR');  # changes contents of $string</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T233348Z">
        <seg>from_to($cadena, 'A', 'B');  # cambia el contenido de $cadena</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ge  greater than or equal</seg>
      </tuv>
      <tuv lang="ES">
        <seg>ge  mayor o igual que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gt  greater than</seg>
      </tuv>
      <tuv lang="ES">
        <seg>gt  mayor que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gzip -d Your-Module.tgz</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T011211Z">
        <seg>gzip -d Mi-Modulo.tgz</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gzip -dc yourmodule.tar.gz | tar -xof -</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000124Z">
        <seg>gzip -dc mi_modulo.tar.gz | tar -xof -</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>h2xs -AX --skip-exporter --use-new-tests -n Foo::Bar</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174542Z">
        <seg>h2xs -AX --skip-exporter --use-new-tests -n Foo::Bar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>has content       =&gt; ( is =&gt; 'ro' );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T175003Z">
        <seg>has contenido    =&gt; ( is =&gt; 'ro' );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>has is_on =&gt; (</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185357Z">
        <seg>has encendido =&gt; (</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>has last_mod_time =&gt; ( is =&gt; 'ro' );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T164858Z">
        <seg>has hora_ult_mod =&gt; ( is =&gt; 'ro' );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>has path          =&gt; ( is =&gt; 'ro' );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T174955Z">
        <seg>has ruta         =&gt; ( is =&gt; 'ro' );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hash    =&gt;  {</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T115004Z" creationid="explorer" creationdate="20150905T115004Z">
        <seg>hash    =&gt;  {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T005903Z">
        <seg>http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://search.cpan.org/dist/dmake/</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T005858Z">
        <seg>http://search.cpan.org/dist/dmake/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://testers.cpan.org/</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010034Z">
        <seg>http://testers.cpan.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.cpan.org/       the Comprehensive Perl Archive</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T210234Z">
        <seg>http://www.cpan.org/       I&lt;Comprehensive Perl Archive Network&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.fsf.org/order/ftp.html</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174012Z">
        <seg>http://www.fsf.org/order/ftp.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.hp.com/go/openvms/freeware/</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174008Z">
        <seg>http://www.hp.com/go/openvms/freeware/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.perl.com/       Perl articles (O'Reilly)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T233224Z">
        <seg>http://www.perl.com/       artículos sobre Perl (O'Reilly)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.perl.org/       the Perl homepage</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T233216Z">
        <seg>http://www.perl.org/       página de inicio del lenguaje Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.pm.org/         the Perl Mongers</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T180213Z">
        <seg>http://www.pm.org/         el sitio de Perl Mongers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>identify_typeglob *bar::baz;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T160112Z">
        <seg>identificar_typeglob *bar::baz;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>identify_typeglob *foo;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T160106Z">
        <seg>identificar_typeglob *foo;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ( condition ) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T002929Z">
        <seg>if ( condición ) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ( defined blessed($thing) ) { ... }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211231Z">
        <seg>if ( defined blessed($algo) ) { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ( my $meth = $object-&gt;can('foo') ) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211035Z">
        <seg>if ( my $metodo = $objeto-&gt;can('foo') ) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ($a =~ /foo/) { ... }  # true if $a contains "foo"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T212800Z">
        <seg>if ($a =~ /foo/) { ... }  # verdadero si $a contiene "foo"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ($email =~ /([^@]+)@(.+)/) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180448Z">
        <seg>if ($email =~ /([^@]+)@(.+)/) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ($some_condition) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T181650Z">
        <seg>if ($una_condicion) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ($string =~ /^\d+$/) { ... }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T221846Z">
        <seg>if ($cadena =~ /^\d+$/) { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if ($zippy) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180420Z">
        <seg>if ($zippy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (/foo/)       { ... }  # true if $_ contains "foo"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T212748Z">
        <seg>if (/foo/)       { ... }  # verdadero si $_ contiene "foo"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (@_) {</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160505Z" creationid="explorer" creationdate="20150905T160505Z">
        <seg>if (@_) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (@animals &lt; 5) { ... }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234142Z">
        <seg>if (@animales &lt; 5) { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (datumtype == '#') {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231222Z">
        <seg>if (datumtype == '#') {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (isSPACE(datumtype))</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231241Z">
        <seg>if (isSPACE(datumtype))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (isSPACE(datumtype)) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231246Z">
        <seg>if (isSPACE(datumtype)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (myint::in_effect(1)) {</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T104008Z" creationid="explorer" creationdate="20150513T121456Z">
        <seg>if (entero::in_effect(1)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>in Some_package: $name is 'fred'</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T161302Z">
        <seg>en Un_paquete: $nombre es 'Pedro'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>in main: $name is 'barney'</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T161247Z">
        <seg>en main: $nombre es 'Pablo'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>int($$l) + int($$r);</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T121459Z" creationid="explorer" creationdate="20150513T121459Z">
        <seg>int($$l) + int($$r);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>is  =&gt; 'rw',</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193801Z">
        <seg>is  =&gt; 'rw',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>is better than</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T173126Z">
        <seg>es preferible a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>is exactly equivalent to</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011201Z">
        <seg>equivale exactamente a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>is( "1.20.300.4000", sprintf "%vd", pack("  U*",1,20,300,4000),</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T122237Z" creationid="explorer" creationdate="20150513T122237Z">
        <seg>is( "1.20.300.4000", sprintf "%vd", pack("  U*",1,20,300,4000),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>is( "1.20.300.4000", sprintf "%vd", pack("U*",1,20,300,4000),</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T122222Z" creationid="explorer" creationdate="20150513T122222Z">
        <seg>is( "1.20.300.4000", sprintf "%vd", pack("U*",1,20,300,4000),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>isa =&gt; 'Bool',</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193807Z">
        <seg>isa =&gt; 'Bool',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>isnt( v1.20.300.4000, sprintf "%vd", pack("C0U*",1,20,300,4000),</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T122310Z" creationid="explorer" creationdate="20150513T122310Z">
        <seg>isnt( v1.20.300.4000, sprintf "%vd", pack("C0U*",1,20,300,4000),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>items = SP - MARK;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231225Z">
        <seg>items = SP - MARK;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>last_mod_time =&gt; 1304974868,</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T162619Z">
        <seg>hora_ult_mod =&gt; 1304974868,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>le  less than or equal</seg>
      </tuv>
      <tuv lang="ES">
        <seg>le  menor o igual que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>letter is a (eg "abacadaf")</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T120352Z" creationid="explorer" creationdate="20150905T120352Z">
        <seg>es una a (p. ej., "abacadaf")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lib/anydbm.t                 12    1   8.33%  12</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T211248Z">
        <seg>lib/anydbm.t                 12    1   8.33%  12</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>line 123.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T183503Z">
        <seg>línea 123.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>local $bar = 2; # Restrict changes to block</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T151605Z">
        <seg>local $bar = 2; # Restringe los cambios al bloque</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>local *main::foo    = *main::bar;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011035Z">
        <seg>local *main::foo    = *main::bar;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logger("We have a logger subroutine!");</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T233913Z">
        <seg>registrador("Tenemos una subrutina para registrar.");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lt  less than</seg>
      </tuv>
      <tuv lang="ES">
        <seg>lt  menor que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>make install</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T173956Z">
        <seg>make install</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>make test</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174153Z">
        <seg>make test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>meta = HvMROMETA(stash);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T215348Z">
        <seg>meta = HvMROMETA(stash);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mkdir $tmpdir, 0700	or die "can't mkdir $tmpdir: $!";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111013T190739Z">
        <seg>mkdir $tmpdir, 0700	or die "No se puede ejecutar mkdir $tmpdir: $!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mkdir 'tmp',   0777	or die "can't mkdir $tmpdir/tmp: $!";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111013T190746Z">
        <seg>mkdir 'tmp',   0777	or die "No se puede ejecutar mkdir $tmpdir/tmp: $!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mms install</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174028Z">
        <seg>mms install</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mms test</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T182141Z">
        <seg>mms test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>module-starter --module=Foo::Bar \</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T153037Z">
        <seg>module-starter --module=Foo::Bar \</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $a = $hash{"ABC"};</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190144Z">
        <seg>my $a = $hash{"ABC"};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $animal = "camel";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233503Z">
        <seg>my $animal = "camello";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $answer = 42;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T230806Z">
        <seg>my $respuesta = 42;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $bar   = decode('ISO-8859-1', readline STDIN);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125203Z">
        <seg>my $bar   = decode('ISO-8859-1', readline STDIN);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $bar = $foo;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083122Z">
        <seg>my $bar = $foo;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $bar_string  = encode('BAR', $text_string);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120511T211057Z">
        <seg>my $cadena_B     = encode('B', $cadena_texto);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $byte_count = length $binary;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110212T161940Z">
        <seg>my $numero_bytes = length $binario;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $byte_count = length $body;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110212T170326Z">
        <seg>my $numero_bytes = length $cuerpo_texto;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $c = C-&gt;new();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T084234Z">
        <seg>my $c = C-&gt;new();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $cage = File::MP3-&gt;new(</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T085517Z">
        <seg>my $minero = Archivo::MP3-&gt;new(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $called =  $AUTOLOAD =~ s/.*:://r;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211306Z">
        <seg>my $llamado =  $AUTOLOAD =~ s/.*:://r;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $character_count = length $text;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T214122Z">
        <seg>my $numero_caracteres = length $texto;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $class = 'Class';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211141Z">
        <seg>my $clase = 'Clase';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $class = 'File';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211353Z">
        <seg>my $clase = 'Archivo';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $class = shift;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T125444Z">
        <seg>my $clase = shift;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $db = tie %hash, 'DB_File', $filename, O_CREAT|O_RDWR, 0666,</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150514T160625Z" creationid="explorer" creationdate="20150514T160625Z">
        <seg>my $db = tie %hash, 'DB_File', $archivo, O_CREAT|O_RDWR, 0666,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $db = tie(%hash, 'SDBM_File', $filename, O_RDWR|O_CREAT, 0640)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T131910Z">
        <seg>my $db = tie(%hash, 'SDBM_File', $archivo, O_RDWR|O_CREAT, 0640)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $dir = "${MACPERL}site_perl";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010413Z">
        <seg>my $dir = "${MACPERL}site_perl";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $file = $class-&gt;new( $path, $data );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211403Z">
        <seg>my $archivo = $clase-&gt;new( $ruta, $datos );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $file = File-&gt;new( $path, $data );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T210924Z">
        <seg>my $archivo = Archivo-&gt;new( $ruta, $datos );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $file = File-&gt;new(...);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T194338Z">
        <seg>my $archivo = Archivo-&gt;new(...);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $file = new File $path, $data;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211152Z">
        <seg>my $archivo = new Archivo $ruta, $datos;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $file = new File:: $path, $data;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211211Z">
        <seg>my $archivo = new Archivo::$ruta, $datos;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $filename = "filt";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T131901Z">
        <seg>my $archivo = "filt";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $foo   = decode('UTF-8', get 'http://example.com/');</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T222249Z">
        <seg>my $foo   = decode('UTF-8', get 'http://ejemplo.com/');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $foo = {};</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083120Z">
        <seg>my $foo = {};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $glob = shift;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231343Z">
        <seg>my $glob = shift;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $hinthash = (caller($level))[10];</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T212840Z">
        <seg>my $hash_pistas = (caller($nivel))[10];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $hostname = File-&gt;new(</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195743Z">
        <seg>my $nombre_host = Archivo-&gt;new(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $l = MyMaths-&gt;new(1.2);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110819T100848Z">
        <seg>my $l = MisOperadores-&gt;new(1.2);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $level = shift // 0;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110819T101638Z">
        <seg>my $nivel = shift // 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $line  = &lt;$in&gt;;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T003553Z">
        <seg>my $linea  = &lt;$entrada&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $logmessage = $_[0];                 # uncommon, and ugly</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110204T165728Z">
        <seg>my $mensaje_registro = $_[0];            # poco común (y poco estético)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $logmessage = shift;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T212840Z">
        <seg>my $mensaje_registro = shift;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $method = 'save';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T210927Z">
        <seg>my $metodo = 'guardar';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $mp3 = File::MP3-&gt;new( 'Andvari.mp3', $data );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T214156Z">
        <seg>my $mp3 = Archivo::MP3-&gt;new( 'Andvari.mp3', $datos );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $num = shift;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180456Z">
        <seg>my $num = shift;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $object = bless {}, $class;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211214Z">
        <seg>my $objeto = bless {}, $clase;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $object = bless {};</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211223Z">
        <seg>my $objeto = bless {};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $pod = File-&gt;new( 'perlobj.pod', $data );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T235239Z">
        <seg>my $pod = Archivo-&gt;new( 'perlobj.pod', $datos );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $prefix = shift // "This file is at ";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T182954Z">
        <seg>my $prefijo = shift // "Ruta del archivo: ";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $priv_func = sub {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165454Z">
        <seg>my $func_priv = sub {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $priv_var    = '';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165416Z">
        <seg>my $var_priv    = '';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $r = MyMaths-&gt;new(3.4);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T221044Z">
        <seg>my $r = MisOperadores-&gt;new(3.4);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $result = $num * $num;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T235526Z">
        <seg>my $resultado = $num * $num;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $self   = shift;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T172934Z">
        <seg>my $self    = shift;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $self = bless \( my $object ), $class;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T201340Z">
        <seg>my $self = bless \( my $objeto ), $clase;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $self = bless {</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160331Z" creationid="explorer" creationdate="20150905T160331Z">
        <seg>my $self = bless {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $self = shift;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T233056Z">
        <seg>my $self = shift;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $self = {};</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T153738Z">
        <seg>my $self = {};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $some_condition = 1;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T181646Z">
        <seg>my $una_condicion = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $sub = sub {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211015Z">
        <seg>my $sub = sub {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $text_string = decode('FOO', $foo_string);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T233325Z">
        <seg>my $cadena_texto = decode('A', $cadena_A);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $time = Time-&gt;new();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211350Z">
        <seg>my $hora = Hora-&gt;new();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $time = Time-&gt;new;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T201412Z">
        <seg>my $hora = Hora-&gt;new();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $time = time;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T214754Z">
        <seg>my $hora = time;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $var = "value";</seg>
      </tuv>
      <tuv lang="ES">
        <seg>my $var = "valor";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $variables = {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180406Z">
        <seg>my $variables = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $x = "foo";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180411Z">
        <seg>my $x = "foo";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $xyzzy = decode('Windows-1251', $cgi-&gt;param('foo'));</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125207Z">
        <seg>my $xyzzy = decode('Windows-1251', $cgi-&gt;param('foo'));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my $y = "bar";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180414Z">
        <seg>my $y = "bar";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my %fruit_color = (</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234357Z">
        <seg>my %color_fruta = (</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my %fruit_color = ("apple", "red", "banana", "yellow");</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234320Z">
        <seg>my %color_fruta = ("manzana", "rojo", "plátano", "amarillo");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my %hash;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190120Z">
        <seg>my %hash;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my %secret_hash = ();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165425Z">
        <seg>my %hash_secreto = ();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my ( $path, $data ) = @_;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T184343Z">
        <seg>my ( $ruta, $datos ) = @_;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my ($class, $value) = @_;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T144416Z">
        <seg>my ($clase, $valor) = @_;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my ($logmessage, $priority) = @_;       # common</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110204T165732Z">
        <seg>my ($mensaje_registro, $prioridad) = @_; # común</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my (@length_content) = unpack "(V/a)*", $binary;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110213T202821Z">
        <seg>my (@contenido_longitud) = unpack "(V/a)*", $binario;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my @animals = ("camel", "llama", "owl");</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110201T185348Z">
        <seg>my @animales = ("camello", "llama", "búho");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my @backwards = reverse @numbers;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T001800Z">
        <seg>my @orden_inverso = reverse @numeros;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my @colors = values %fruit_colors;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T162047Z">
        <seg>my @colores = values %color_fruta;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my @fruits = keys %fruit_colors;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T162054Z">
        <seg>my @frutas  = keys %color_fruta;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my @lines = &lt;$in&gt;;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T003557Z">
        <seg>my @lineas = &lt;$entrada&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my @mixed   = ("camel", 42, 1.23);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234015Z">
        <seg>my @mezcla   = ("camello", 42, 1.23);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my @numbers = (23, 42, 69);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T161103Z">
        <seg>my @numeros  = (23, 42, 69);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>my @sorted    = sort @animals;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T161607Z">
        <seg>my @ordenados     = sort @animales;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myint-&gt;import();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T232655Z">
        <seg>entero-&gt;import();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>myint-&gt;unimport();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T232706Z">
        <seg>entero-&gt;unimport();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>native floating_point --&gt; decimal string		(*)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T222519Z">
        <seg>punto flotante nativo --&gt; cadena decimal (*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>native floating_point --&gt; native integer		(*)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T170034Z">
        <seg>punto flotante nativo --&gt; entero nativo (*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>native integer        --&gt; decimal string</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T170027Z">
        <seg>entero nativo         --&gt; cadena decimal</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>native integer        --&gt; native floating point	(*)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T170023Z">
        <seg>entero nativo         --&gt; punto flotante nativo (*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ne  inequality</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T120440Z">
        <seg>ne  distinto que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>needs to become</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T233420Z">
        <seg>debe convertirse en</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>next if /^$/;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180442Z">
        <seg>next if /^$/;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nmake install</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T005932Z">
        <seg>nmake install</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nmake test</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174007Z">
        <seg>nmake test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>no main::getcwd()</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170800Z">
        <seg>no existe main::getcwd()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>no myint;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T232512Z">
        <seg>no entero;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>not</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T115041Z" creationid="explorer" creationdate="20150905T115041Z">
        <seg>not</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>on the source files.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T001504Z">
        <seg>donde &lt;nombres de los archivos&gt; son los archivos de código fuente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>open my $barfh, '&gt;:encoding(BAR)', 'example.bar.txt';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T233601Z">
        <seg>open my $fh_B, '&gt;:encoding(B)', 'ejemplo.B.txt';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>open my $fh, '&lt;:encoding(UTF-8)', $filename;  # auto decoding on read</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T171521Z">
        <seg>open my $fh, '&lt;:encoding(UTF-8)', $archivo;  # descodificación automática al leer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>open my $fh, '&gt;', $self-&gt;path() or die $!;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T160005Z">
        <seg>open my $archivo, '&gt;', $self-&gt;ruta() or die $!;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>open my $fh, '&gt;', 'path/to/file';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211847Z">
        <seg>open my $archivo, '&gt;', 'ruta/de/archivo';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>open my $fh, '&gt;:encoding(UTF-8)', $filename;  # auto encoding on write</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110428T171508Z">
        <seg>open my $fh, '&gt;:encoding(UTF-8)', $archivo;  # codificación automática al escribir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>open my $foofh, '&lt;:encoding(FOO)', 'example.foo.txt';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T233546Z">
        <seg>open my $fh_A, '&lt;:encoding(A)', 'ejemplo.A.txt';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>open my $logfile, "&gt;&gt;", "my.log" or die "Could not open my.log: $!";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T222040Z">
        <seg>open my $registro, "&gt;&gt;", "mi.registro" or die "No se pudo abrir mi.registro: $!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>open(FOO,$foo) || die "Can't open $foo: $!";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T122835Z">
        <seg>open(FOO,$foo) || die "No se puede abrir $foo: $!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>open(my $in,  "&lt;",  "input.txt")  or die "Can't open input.txt: $!";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T163146Z">
        <seg>open(my $entrada,  "&lt;",  "entrada.txt") or die "No se puede abrir entrada.txt: $!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>open(my $log, "&gt;&gt;", "my.log")     or die "Can't open my.log: $!";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T163238Z">
        <seg>open(my $registro, "&gt;&gt;", "mi.registro") or die "No se puede abrir mi.registro: $!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>open(my $out, "&gt;",  "output.txt") or die "Can't open output.txt: $!";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T163427Z">
        <seg>open(my $salida,   "&gt;",  "salida.txt" ) or die "No se puede abrir salida.txt: $!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>opendir(D, $dir)	 or die "can't opendir $dir: $!";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111014T124855Z">
        <seg>opendir(D, $dir)	 or die "No se puede ejecutar opendir $dir: $!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T173604Z">
        <seg>o bien</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or by letting automatic decoding and encoding do all the work:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120424T084407Z">
        <seg>o dejar que la descodificación y la codificación automáticas se encarguen de hacer la conversión:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or by skipping the text string part, and going directly from one binary
encoding to the other:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120424T084339Z">
        <seg>También puede omitir la parte de la cadena de texto y pasar directamente de una codificación binaria a otra:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or die "Cannot open $filename: $!\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T131919Z">
        <seg>or die "No se puede abrir $archivo: $!\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or this:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T153813Z">
        <seg>o bien:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or, for zipped modules, type</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003050Z">
        <seg>o bien, para módulos comprimidos, escriba</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>orwant@medita.mit.edu</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174046Z">
        <seg>orwant@medita.mit.edu</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>our $AUTOLOAD;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211248Z">
        <seg>our $AUTOLOAD;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>our $VERSION     = 1.00;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011555Z">
        <seg>our $VERSION     = 1.00;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>our $Var1    = '';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011649Z">
        <seg>our $Var1    = '';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>our $stuff   = '';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165349Z">
        <seg>our $cosa   = '';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>our %Hashit  = ();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T115716Z">
        <seg>our %Hash1  = ();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>our @EXPORT      = qw(func1 func2);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011601Z">
        <seg>our @EXPORT      = qw(func1 func2);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>our @EXPORT_OK   = qw($Var1 %Hashit func3);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T115705Z">
        <seg>our @EXPORT_OK   = qw($Var1 %Hash1 func3);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>our @ISA         = qw(Exporter);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011558Z">
        <seg>our @ISA         = qw(Exporter);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>our @more    = ();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T083418Z">
        <seg>our @otras    = ();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pack("U*",1,20,300,4000);</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T122343Z" creationid="explorer" creationdate="20150513T122343Z">
        <seg>pack("U*",1,20,300,4000);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package A;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162513Z">
        <seg>package A;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package B;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120723T215529Z">
        <seg>package B;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package C;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120723T215545Z">
        <seg>package C;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package Child;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T163833Z">
        <seg>package Hijo;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package File::MP3;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T085614Z">
        <seg>package Archivo::MP3;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package File;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195711Z">
        <seg>package Archivo;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package HasOnOfSwitch;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185353Z">
        <seg>package TieneInterruptor;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package MultiChild;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162910Z">
        <seg>package VariosHijos;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package MyMaths;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110819T101433Z">
        <seg>package MisOperadores;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package Some::Module;  # assumes Some/Module.pm</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T083249Z">
        <seg>package Mi::Modulo;  # se supone que está en Mi/Modulo.pm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package Time;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T200354Z">
        <seg>package Hora;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package main;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231356Z">
        <seg>package main;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>package myint;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T232614Z">
        <seg>package entero;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pat++;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T122403Z" creationid="explorer" creationdate="20150513T122403Z">
        <seg>pat++;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>patcopy++;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231236Z">
        <seg>patcopy++;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>path          =&gt; '/etc/hostname',</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T172420Z">
        <seg>ruta         =&gt; '/etc/hostname',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>path          =&gt; 'mp3s/My-Body-Is-a-Cage.mp3',</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T173915Z">
        <seg>ruta          =&gt; 'mp3/Soy-minero.mp3',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>path =&gt; $path,</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160345Z" creationid="explorer" creationdate="20150905T160345Z">
        <seg>ruta  =&gt; $ruta,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>path perlfaq.*               cpan/perlfaq/lib/
path perlglossary            cpan/perlfaq/lib/
path perlxs(?:tut|typemap)?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T131117Z">
        <seg>path perlfaq.*               cpan/perlfaq/lib/
path perlglossary            cpan/perlfaq/lib/
path perlxs(?:tut|typemap)?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pattern.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T235014Z">
        <seg>patrón.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pax -o to=IBM-1047,from=ISO8859-1 -r &lt; yourmodule.tar</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003414Z">
        <seg>pax -o to=IBM-1047,from=ISO8859-1 -r &lt; mimodulo.tar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl		Perl overview (this section)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T142743Z">
        <seg>perl             Información general sobre Perl (esta sección)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl - The Perl 5 language interpreter</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110427T221909Z">
        <seg>perl - El intérprete del lenguaje Perl 5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl -MCPAN -e shell</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T194533Z">
        <seg>perl -MCPAN -e shell</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl -MEncode -le "print for Encode-&gt;encodings(':all')"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172249Z">
        <seg>perl -MEncode -le "print for Encode-&gt;encodings(':all')"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl -i.bak -pe 's/(?:\015)?\012/\015/g' &lt;filenames&gt;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T151522Z">
        <seg>perl -i.bak -pe 's/(?:\015)?\012/\015/g' &lt;nombres de los archivos&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl ./Porting/podtidy pod/perlhacktut.pod</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231206Z">
        <seg>perl ./Porting/podtidy pod/perlhacktut.pod</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl ./Porting/podtidy pod/perlobj.pod</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120723T215604Z">
        <seg>perl ./Porting/podtidy pod/perlobj.pod</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl ./Porting/podtidy pod/perlootut.pod</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193652Z">
        <seg>perl ./Porting/podtidy pod/perlootut.pod</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl ./Porting/podtidy pod/perlsource.pod</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193950Z">
        <seg>perl ./Porting/podtidy pod/perlsource.pod</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl Makefile.PL</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T005539Z">
        <seg>perl Makefile.PL</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl Makefile.PL PREFIX=/my/perl_directory</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T151209Z">
        <seg>perl Makefile.PL PREFIX=/mi/directorio_perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl progname.pl</seg>
      </tuv>
      <tuv lang="ES">
        <seg>perl nombre_programa.pl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl sets C&lt;$^X&gt; where possible to a full path by asking the operating
system.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T203246Z">
        <seg>Siempre que es posible, perl establece como valor de C&lt;$^X&gt; una ruta completa; para ello, consulta al sistema operativo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl.org?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T102334Z">
        <seg>¿Y perl.org?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5004delta	Perl changes in version 5.004</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144138Z">
        <seg>perl5004delta    Cambios en la versión 5.004</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5005delta	Perl changes in version 5.005</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144136Z">
        <seg>perl5005delta    Cambios en la versión 5.005</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5100delta	Perl changes in version 5.10.0</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144108Z">
        <seg>perl5100delta    Cambios en la versión 5.10.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5101delta	Perl changes in version 5.10.1</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144105Z">
        <seg>perl5101delta    Cambios en la versión 5.10.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5120delta	Perl changes in version 5.12.0</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144104Z">
        <seg>perl5120delta    Cambios en la versión 5.12.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5121delta	Perl changes in version 5.12.1</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144101Z">
        <seg>perl5121delta    Cambios en la versión 5.12.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5122delta	Perl changes in version 5.12.2</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144100Z">
        <seg>perl5122delta    Cambios en la versión 5.12.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5123delta	Perl changes in version 5.12.3</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144057Z">
        <seg>perl5123delta    Cambios en la versión 5.12.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5124delta	Perl changes in version 5.12.4</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144055Z">
        <seg>perl5124delta    Cambios en la versión 5.12.4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5125delta	Perl changes in version 5.12.5</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150910T223321Z" creationid="explorer" creationdate="20150513T111130Z">
        <seg>perl5125delta      Cambios en la versión 5.12.5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5140delta	Perl changes in version 5.14.0</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144053Z">
        <seg>perl5140delta    Cambios en la versión 5.14.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5141delta	Perl changes in version 5.14.1</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144050Z">
        <seg>perl5141delta    Cambios en la versión 5.14.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5142delta	Perl changes in version 5.14.2</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144045Z">
        <seg>perl5142delta    Cambios en la versión 5.14.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5143delta	Perl changes in version 5.14.3</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20121114T011223Z">
        <seg>perl5143delta    Cambios en la versión 5.14.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5144delta	Perl changes in version 5.14.4</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T144907Z" creationid="explorer" creationdate="20150905T144907Z">
        <seg>perl5144delta    Cambios en la versión 5.14.4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5160delta	Perl changes in version 5.16.0</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144039Z">
        <seg>perl5160delta    Cambios en la versión 5.16.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5161delta	Perl changes in version 5.16.1</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20121114T011210Z">
        <seg>perl5161delta    Cambios en la versión 5.16.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5162delta	Perl changes in version 5.16.2</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T144853Z" creationid="explorer" creationdate="20150905T144853Z">
        <seg>perl5162delta    Cambios en la versión 5.16.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5163delta	Perl changes in version 5.16.3</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T144842Z" creationid="explorer" creationdate="20150905T144842Z">
        <seg>perl5163delta    Cambios en la versión 5.16.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5180delta	Perl changes in version 5.18.0</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T144831Z" creationid="explorer" creationdate="20150905T144831Z">
        <seg>perl5180delta    Cambios en la versión 5.18.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5181delta	Perl changes in version 5.18.1</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T144819Z" creationid="explorer" creationdate="20150905T144819Z">
        <seg>perl5181delta    Cambios en la versión 5.18.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5182delta	Perl changes in version 5.18.2</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T144809Z" creationid="explorer" creationdate="20150905T144809Z">
        <seg>perl5182delta    Cambios en la versión 5.18.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5184delta	Perl changes in version 5.18.4</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T144757Z" creationid="explorer" creationdate="20150905T144757Z">
        <seg>perl5184delta    Cambios en la versión 5.18.4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5200delta	Perl changes in version 5.20.0</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T144011Z" creationid="explorer" creationdate="20150905T144011Z">
        <seg>perl5200delta    Cambios en la versión 5.20.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5201delta	Perl changes in version 5.20.1</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T144000Z" creationid="explorer" creationdate="20150905T144000Z">
        <seg>perl5201delta    Cambios en la versión 5.20.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5202delta	Perl changes in version 5.20.2</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T143943Z" creationid="explorer" creationdate="20150905T143943Z">
        <seg>perl5202delta    Cambios en la versión 5.20.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5210delta	Perl changes in version 5.21.0</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T143932Z" creationid="explorer" creationdate="20150905T143932Z">
        <seg>perl5210delta    Cambios en la versión 5.21.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl52110delta	Perl changes in version 5.21.10</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150910T223242Z" creationid="explorer" creationdate="20150905T143629Z">
        <seg>perl52110delta   Cambios en la versión 5.21.10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl52111delta	Perl changes in version 5.21.11</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150910T223240Z" creationid="explorer" creationdate="20150905T143603Z">
        <seg>perl52111delta   Cambios en la versión 5.21.11</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5211delta	Perl changes in version 5.21.1</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T143922Z" creationid="explorer" creationdate="20150905T143922Z">
        <seg>perl5211delta    Cambios en la versión 5.21.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5212delta	Perl changes in version 5.21.2</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T143907Z" creationid="explorer" creationdate="20150905T143907Z">
        <seg>perl5212delta    Cambios en la versión 5.21.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5213delta	Perl changes in version 5.21.3</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T143855Z" creationid="explorer" creationdate="20150905T143855Z">
        <seg>perl5213delta    Cambios en la versión 5.21.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5214delta	Perl changes in version 5.21.4</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T143843Z" creationid="explorer" creationdate="20150905T143843Z">
        <seg>perl5214delta    Cambios en la versión 5.21.4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5215delta	Perl changes in version 5.21.5</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T143831Z" creationid="explorer" creationdate="20150905T143831Z">
        <seg>perl5215delta    Cambios en la versión 5.21.5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5216delta	Perl changes in version 5.21.6</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T143818Z" creationid="explorer" creationdate="20150905T143818Z">
        <seg>perl5216delta    Cambios en la versión 5.21.6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5217delta	Perl changes in version 5.21.7</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T143803Z" creationid="explorer" creationdate="20150905T143803Z">
        <seg>perl5217delta    Cambios en la versión 5.21.7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5218delta	Perl changes in version 5.21.8</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T143750Z" creationid="explorer" creationdate="20150905T143750Z">
        <seg>perl5218delta    Cambios en la versión 5.21.8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl5219delta	Perl changes in version 5.21.9</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T143733Z" creationid="explorer" creationdate="20150905T143645Z">
        <seg>perl5219delta    Cambios en la versión 5.21.9</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl561delta	Perl changes in version 5.6.1</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T145153Z">
        <seg>perl561delta     Cambios en la versión 5.6.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl56delta 	Perl changes in version 5.6</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T145157Z">
        <seg>perl56delta      Cambios en la versión 5.6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl581delta	Perl changes in version 5.8.1</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T145149Z">
        <seg>perl581delta     Cambios en la versión 5.8.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl582delta	Perl changes in version 5.8.2</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T145146Z">
        <seg>perl582delta     Cambios en la versión 5.8.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl583delta	Perl changes in version 5.8.3</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T145143Z">
        <seg>perl583delta     Cambios en la versión 5.8.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl584delta	Perl changes in version 5.8.4</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T145142Z">
        <seg>perl584delta     Cambios en la versión 5.8.4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl585delta	Perl changes in version 5.8.5</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T145139Z">
        <seg>perl585delta     Cambios en la versión 5.8.5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl586delta	Perl changes in version 5.8.6</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T145137Z">
        <seg>perl586delta     Cambios en la versión 5.8.6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl587delta	Perl changes in version 5.8.7</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T145134Z">
        <seg>perl587delta     Cambios en la versión 5.8.7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl588delta	Perl changes in version 5.8.8</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T145131Z">
        <seg>perl588delta     Cambios en la versión 5.8.8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl589delta	Perl changes in version 5.8.9</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T145129Z">
        <seg>perl589delta     Cambios en la versión 5.8.9</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perl58delta 	Perl changes in version 5.8.0</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T145151Z">
        <seg>perl58delta      Cambios en la versión 5.8.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlaix		Perl notes for AIX</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144310Z">
        <seg>perlaix          Notas para AIX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlamiga		Perl notes for AmigaOS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144320Z">
        <seg>perlamiga        Notas para AmigaOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlandroid		Perl notes for Android</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150910T223432Z" creationid="explorer" creationdate="20150513T111114Z">
        <seg>perlandroid      Notas para Android</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlapi		Perl API listing (autogenerated)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143815Z">
        <seg>perlapi          Lista de API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlapio		Perl internal IO abstraction interface</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143833Z">
        <seg>perlapio         Interfaz de abstracción de E/S interna</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlartistic	Perl Artistic License</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T211529Z">
        <seg>perlartistic     Licencia Artistic de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlbook		Perl book information</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143943Z">
        <seg>perlbook         Información de libros sobre Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlbook - Books about and related to Perl</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110427T231838Z">
        <seg>perlbook - Libros sobre Perl y otros libros relacionados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlboot</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T134553Z">
        <seg>perlboot</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlboot - Links to information on object-oriented programming in Perl</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150514T160143Z" creationid="explorer" creationdate="20150514T160143Z">
        <seg>perlboot - Vínculos a información sobre programación orientada a objetos en Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlbot</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T134558Z">
        <seg>perlbot</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlbot - Links to information on object-oriented programming in Perl</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150514T160241Z" creationid="explorer" creationdate="20150514T160241Z">
        <seg>perlbot - Vínculos a información sobre programación orientada a objetos en Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlbs2000		Perl notes for POSIX-BC BS2000</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144341Z">
        <seg>perlbs2000       Notas para POSIX-BC BS2000</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlcall		Perl calling conventions from C</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143736Z">
        <seg>perlcall         Convenciones de llamada desde C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlce		Perl notes for WinCE</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144350Z">
        <seg>perlce           Notas para WinCE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlcheat		Perl cheat sheet</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141439Z">
        <seg>perlcheat        Referencia rápida de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlclib		Internal replacements for standard C library functions</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T220333Z">
        <seg>perlclib         Sustitutos internos de funciones de la biblioteca estándar de C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlcn		Perl for Simplified Chinese (in EUC-CN)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144223Z">
        <seg>perlcn           Perl para chino simplificado (en EUC-CN)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlcommunity	Perl community information</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143955Z">
        <seg>perlcommunity    Información sobre la comunidad Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlcommunity - a brief overview of the Perl community</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120407T135438Z">
        <seg>perlcommunity - Breve descripción de la comunidad Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlcygwin		Perl notes for Cygwin</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144359Z">
        <seg>perlcygwin       Notas para Cygwin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldata		Perl data structures</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T142806Z">
        <seg>perldata         Estructuras de datos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldbmfilter	Perl DBM filters</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T211302Z">
        <seg>perldbmfilter  Filtros DBM</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldbmfilter - Perl DBM Filters</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T131825Z">
        <seg>perldbmfilter - Filtros DBM de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldebguts 	Perl debugging guts and tips</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T140439Z">
        <seg>perldebguts      Componentes y consejos para la depuración</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldebtut		Perl debugging tutorial</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141454Z">
        <seg>perldebtut       Tutorial de depuración</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldebug		Perl debugging</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143131Z">
        <seg>perldebug        Depuración</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldelta		Perl changes since previous version</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144029Z">
        <seg>perldelta        Cambios con respecto a la versión anterior</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldiag		Perl diagnostic messages</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T142925Z">
        <seg>perldiag         Mensajes de diagnóstico</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc		Look up Perl documentation in Pod format</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144006Z">
        <seg>perldoc          Consulta de la documentación de Perl en formato Pod</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc - Look up Perl documentation in Pod format.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111007T163744Z">
        <seg>perldoc - Consultar la documentación de Perl en formato Pod.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc -L fr -q FAQ Keyword</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T213126Z" creationid="explorer" creationdate="20160506T213126Z">
        <seg>perldoc -L fr -q I&lt;palabra clave de perlfaq&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc -L it -f BuiltinFunction</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T213037Z" creationid="explorer" creationdate="20160506T213037Z">
        <seg>perldoc -L it -f I&lt;función predefinida&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc -a PerlAPI</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T213330Z" creationid="explorer" creationdate="20150905T113016Z">
        <seg>perldoc -a I&lt;API de Perl&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc -a newHV</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T213340Z" creationid="explorer" creationdate="20160506T213340Z">
        <seg>perldoc -a newHV</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc -f BuiltinFunction</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T213017Z" creationid="explorer" creationdate="20160506T213017Z">
        <seg>perldoc -f I&lt;función predefinida&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc -f sprintf</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110719T074056Z">
        <seg>perldoc -f sprintf</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc -q FAQ Keyword</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T213116Z" creationid="explorer" creationdate="20160506T213116Z">
        <seg>perldoc -q I&lt;palabra clave de perlfaq&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc -q shuffle</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110808T213225Z">
        <seg>perldoc -q shuffle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc -v '$"'</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191500Z">
        <seg>perldoc -v '$"'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc -v @+</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191501Z">
        <seg>perldoc -v @+</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc -v DATA</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T191501Z">
        <seg>perldoc -v DATA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc -v PerlVariable</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160506T213201Z" creationid="explorer" creationdate="20160506T213201Z">
        <seg>perldoc -v I&lt;variable de Perl&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldoc [-h] [-D] [-t] [-u] [-m] [-l] [-F]</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T112918Z" creationid="explorer" creationdate="20150905T112918Z">
        <seg>perldoc [-h] [-D] [-t] [-u] [-m] [-l] [-F]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldos		Perl notes for DOS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144421Z">
        <seg>perldos          Notas para DOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldsc		Perl data structures intro</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141335Z">
        <seg>perldsc          Introducción a las estructuras de datos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perldtrace		Perl's support for DTrace</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143617Z">
        <seg>perldtrace       Compatibilidad con DTrace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlebcdic		Considerations for running Perl on EBCDIC platforms</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143450Z">
        <seg>perlebcdic       Ejecución de Perl en plataformas EBCDIC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlembed		Perl ways to embed perl in your C or C++ application</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T140435Z">
        <seg>perlembed        Formas de integrar Perl en una aplicación C o C++</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlexperiment	A listing of experimental features in Perl</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150910T223354Z">
        <seg>perlexperiment   Lista de funcionalidades experimentales de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfaq		Perl frequently asked questions</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141502Z">
        <seg>perlfaq          Preguntas más frecuentes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfaq1		General Questions About Perl</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141616Z">
        <seg>perlfaq1         Preguntas generales sobre Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfaq1 - General Questions About Perl</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T000526Z">
        <seg>perlfaq1 - Preguntas generales sobre Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfaq2		Obtaining and Learning about Perl</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141624Z">
        <seg>perlfaq2         Cómo obtener y aprender a utilizar Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfaq2 - Obtaining and Learning about Perl</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T101515Z">
        <seg>perlfaq2 - Cómo obtener Perl y dónde buscar información sobre Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfaq3		Programming Tools</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141632Z">
        <seg>perlfaq3         Herramientas de programación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfaq4		Data Manipulation</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141640Z">
        <seg>perlfaq4         Manipulación de datos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfaq5		Files and Formats</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141647Z">
        <seg>perlfaq5         Archivos y formatos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfaq6		Regexes</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141655Z">
        <seg>perlfaq6         Expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfaq7		Perl Language Issues</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141703Z">
        <seg>perlfaq7         Problemas del lenguaje Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfaq8		System Interaction</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141710Z">
        <seg>perlfaq8         Interacción con el sistema</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfaq9		Networking</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141717Z">
        <seg>perlfaq9         Conexión a redes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfilter		Perl source filters</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143610Z">
        <seg>perlfilter       Filtros de código fuente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfork		Perl fork() information</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143312Z">
        <seg>perlfork         Información sobre fork()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlform		Perl formats</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143232Z">
        <seg>perlform         Formatos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfreebsd 	Perl notes for FreeBSD</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144441Z">
        <seg>perlfreebsd      Notas para FreeBSD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfreebsd - Perl version 5 on FreeBSD systems</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T184934Z">
        <seg>perlfreebsd - Perl versión 5 en sistemas FreeBSD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlfunc		Perl built-in functions</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20121113T233749Z">
        <seg>perlfunc         Funciones predefinidas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlgit		Using git with the Perl repository</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143925Z">
        <seg>perlgit          Uso de git con el repositorio de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlglossary	Perl Glossary</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143625Z">
        <seg>perlglossary     Glosario</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlgpl		GNU General Public License</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T211531Z">
        <seg>perlgpl          Licencia GNU General Public License</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlguts		Perl internal functions for those doing extensions</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143728Z">
        <seg>perlguts         Funciones internas para crear extensiones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlhack		Perl hackers guide</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143840Z">
        <seg>perlhack         Guía para hackers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlhacktips	Tips for Perl core C code hacking</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143907Z">
        <seg>perlhacktips     Consejos para modificar el código C del núcleo de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlhacktut 	Walk through the creation of a simple C code patch</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T230246Z">
        <seg>perlhacktut      Tutorial de creación de un parche sencillo de código C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlhacktut - Walk through the creation of a simple C code patch</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T152639Z">
        <seg>perlhacktut - Tutorial de creación de un parche sencillo de código C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlhaiku		Perl notes for Haiku</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144450Z">
        <seg>perlhaiku        Notas para Haiku</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlhist		Perl history records</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144016Z">
        <seg>perlhist         Registros históricos de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlhpux		Perl notes for HP-UX</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144500Z">
        <seg>perlhpux         Notas para HP-UX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlhurd		Perl notes for Hurd</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144510Z">
        <seg>perlhurd         Notas para Hurd</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlhurd - Perl version 5 on Hurd</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T151631Z">
        <seg>perlhurd - Perl versión 5 en Hurd</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlintern		Perl internal functions (autogenerated)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143821Z">
        <seg>perlintern       Funciones internas de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlinterp		Overview of the Perl interpreter source and how it works</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143854Z">
        <seg>perlinterp       Descripción del código fuente y el funcionamiento del intérprete</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlintro		Perl introduction for beginners</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141310Z">
        <seg>perlintro        Introducción a Perl para principiantes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlintro -- a brief introduction and overview of Perl</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T225748Z">
        <seg>perlintro -- Breve introducción y descripción general de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perliol		C API for Perl's implementation of IO in Layers</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143827Z">
        <seg>perliol          API en C para implementar en Perl las capas de E/S</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlipc		Perl interprocess communication</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143304Z">
        <seg>perlipc          Comunicación entre procesos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlirix		Perl notes for Irix</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144519Z">
        <seg>perlirix         Notas para Irix</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perljp		Perl for Japanese (in EUC-JP)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144233Z">
        <seg>perljp           Perl para japonés (en EUC-JP)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlko		Perl for Korean (in EUC-KR)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144246Z">
        <seg>perlko           Perl para coreano (en EUC-KR)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perllexwarn 	Perl warnings and their control</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T142933Z">
        <seg>perllexwarn      Advertencias y control de advertencias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perllinux		Perl notes for Linux</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144528Z">
        <seg>perllinux        Notas para Linux</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perllocale		Perl locale support</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143342Z">
        <seg>perllocale       Compatibilidad con la configuración regional</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perllol		Perl data structures: arrays of arrays</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141343Z">
        <seg>perllol          Estructuras de datos: arrays de arrays</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlmacos		Perl notes for Mac OS (Classic)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144539Z">
        <seg>perlmacos        Notas para Mac OS (Classic)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlmacosx		Perl notes for Mac OS X</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144548Z">
        <seg>perlmacosx       Notas para Mac OS X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlmod		Perl modules: how they work</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143518Z">
        <seg>perlmod          Funcionamiento de un módulo Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlmod - Perl modules (packages and symbol tables)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T232017Z">
        <seg>perlmod - Módulos Perl (paquetes y tablas de símbolos)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlmodinstall	Perl modules: how to install from CPAN</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T140349Z">
        <seg>perlmodinstall   Instalación de módulos de CPAN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlmodinstall - Installing CPAN Modules</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T005553Z">
        <seg>perlmodinstall - Instalación de módulos de CPAN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlmodlib		Perl modules: how to write and use</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143526Z">
        <seg>perlmodlib       Programación y utilización de módulos Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlmodstyle	Perl modules: how to write modules with style</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T140345Z">
        <seg>perlmodstyle     Cómo programar módulos Perl con estilo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlmroapi		Perl method resolution plugin interface</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143743Z">
        <seg>perlmroapi       Interfaz de complementos: resolución de métodos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlmroapi - Perl method resolution plugin interface</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T214619Z">
        <seg>perlmroapi - Interfaz del complemento de resolución de métodos de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlnetware 	Perl notes for NetWare</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144607Z">
        <seg>perlnetware      Notas para NetWare</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlnewmod		Perl modules: preparing a new module for distribution</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143546Z">
        <seg>perlnewmod       Preparar la distribución de un módulo Perl nuevo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlnewmod - preparing a new module for distribution</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T185120Z">
        <seg>perlnewmod - Preparar la distribución de un módulo nuevo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlnumber		Perl number semantics</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T140200Z">
        <seg>perlnumber       Semántica de números</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlnumber - semantics of numbers and numeric operations in Perl</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T191301Z">
        <seg>perlnumber - Semántica de números y operaciones numéricas en Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlobj		Perl objects</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143240Z">
        <seg>perlobj          Objetos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlobj - Perl object reference</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T123649Z">
        <seg>perlobj - Referencia de objetos en Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlootut		Perl OO tutorial for beginners</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141408Z">
        <seg>perlootut        Tutorial de POO para principiantes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlootut - Object-Oriented Programming in Perl Tutorial</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193648Z">
        <seg>perlootut - Manual de programación orientada a objetos en Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlop		Perl operators and precedence</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T142815Z">
        <seg>perlop           Operadores y precedencia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlopenbsd 	Perl notes for OpenBSD</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144616Z">
        <seg>perlopenbsd      Notas para OpenBSD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlopenbsd - Perl version 5 on OpenBSD systems</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T151656Z">
        <seg>perlopenbsd - Perl versión 5 en sistemas OpenBSD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlopentut	Perl open() tutorial</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T211102Z">
        <seg>perlopentut    Tutorial de open()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlos2		Perl notes for OS/2</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144627Z">
        <seg>perlos2          Notas para OS/2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlos390		Perl notes for OS/390</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144637Z">
        <seg>perlos390        Notas para OS/390</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlos400		Perl notes for OS/400</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144647Z">
        <seg>perlos400        Notas para OS/400</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlpacktut	Perl pack() and unpack() tutorial</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T204727Z">
        <seg>perlpacktut    Tutorial de pack() y unpack()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlperf		Perl Performance and Optimization Techniques</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141423Z">
        <seg>perlperf         Rendimiento y técnicas de optimización</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlplan9		Perl notes for Plan 9</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144657Z">
        <seg>perlplan9        Notas para Plan 9</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlpod		Perl plain old documentation</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T205253Z">
        <seg>perlpod          Documentación en texto simple (POD)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlpodspec 	Perl plain old documentation format specification</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T135845Z">
        <seg>perlpodspec      Especificación del formato POD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlpodstyle	Perl POD style guide</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T142910Z">
        <seg>perlpodstyle     Guía de estilo para POD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlpolicy		Perl development policies</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143916Z">
        <seg>perlpolicy       Directivas de desarrollo de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlport		Perl portability guide</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143334Z">
        <seg>perlport         Guía de portabilidad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlpragma		Perl modules: writing a user pragma</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T140359Z">
        <seg>perlpragma       Programación de un pragma de usuario</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlpragma - how to write a user pragma</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T104123Z">
        <seg>perlpragma - Crear un pragma de usuario</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlqnx		Perl notes for QNX</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144706Z">
        <seg>perlqnx          Notas para QNX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlre		Perl regular expressions, the rest of the story</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143148Z">
        <seg>perlre           Expresiones regulares: el resto de la historia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlreapi		Perl regular expression plugin interface</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143801Z">
        <seg>perlreapi        Interfaz de complementos: expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlrebackslash	Perl regular expression backslash sequences</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T205511Z">
        <seg>perlrebackslash  Secuencias de escape en expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlrecharclass	Perl regular expression character classes</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143206Z">
        <seg>perlrecharclass  Clases de caracteres en expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlref		Perl references, the rest of the story</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143222Z">
        <seg>perlref          Referencias: el resto de la historia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlreftut		Perl references short introduction</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141327Z">
        <seg>perlreftut       Breve introducción a las referencias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlreguts		Perl regular expression engine internals</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143808Z">
        <seg>perlreguts       Componentes del motor de expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlrepository</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T144930Z" creationid="explorer" creationdate="20150905T144930Z">
        <seg>perlrepository</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlrequick 	Perl regular expressions quick start</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141352Z">
        <seg>perlrequick      Guía rápida de las expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlreref		Perl regular expressions quick reference</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143214Z">
        <seg>perlreref        Referencia rápida de expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlretut		Perl regular expressions tutorial</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141400Z">
        <seg>perlretut        Tutorial de expresiones regulares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlriscos		Perl notes for RISC OS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144715Z">
        <seg>perlriscos       Notas para RISC OS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlrun		Perl execution and options</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T142918Z">
        <seg>perlrun          Ejecución y opciones de ejecución</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlsec		Perl security</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143509Z">
        <seg>perlsec          Seguridad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlsolaris 	Perl notes for Solaris</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144724Z">
        <seg>perlsolaris      Notas para Solaris</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlsource		Guide to the Perl source tree</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143847Z">
        <seg>perlsource       Guía del árbol de código fuente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlsource - A guide to the Perl source tree</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110718T080527Z">
        <seg>perlsource - Guía del árbol de código fuente de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlstyle		Perl style guide</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141431Z">
        <seg>perlstyle        Guía de estilo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlstyle - Perl style guide</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110220T001351Z">
        <seg>perlstyle - Guía de estilo de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlsub		Perl subroutines</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T142822Z">
        <seg>perlsub          Subrutinas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlsymbian 	Perl notes for Symbian</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144733Z">
        <seg>perlsymbian      Notas para Symbian</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlsyn		Perl syntax</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T142758Z">
        <seg>perlsyn          Sintaxis</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlsynology 	Perl notes for Synology</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150910T223451Z" creationid="explorer" creationdate="20150905T150243Z">
        <seg>perlsynology     Notas sobre Synology para Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlthrtut		Perl threads tutorial</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143327Z">
        <seg>perlthrtut       Tutorial de uso de hilos de ejecución</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perltie		Perl objects hidden behind simple variables</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143249Z">
        <seg>perltie          Objetos Perl ocultos en variables simples</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perltoc		Perl documentation table of contents</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141319Z">
        <seg>perltoc          Tabla de contenido de la documentación de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perltodo</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T134607Z">
        <seg>perltodo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perltodo - Link to the Perl to-do list</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160429T222304Z" creationid="explorer" creationdate="20160426T231438Z">
        <seg>perltodo - Vínculo a la lista de tareas pendientes de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perltooc</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T134608Z">
        <seg>perltooc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perltooc - Links to information on object-oriented programming in Perl</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T115826Z" creationid="explorer" creationdate="20150513T115826Z">
        <seg>perltooc - Vínculos a información sobre programación orientada a objetos en Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perltoot</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120524T134612Z">
        <seg>perltoot</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perltoot - Links to information on object-oriented programming in Perl</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T115433Z" creationid="explorer" creationdate="20150513T115433Z">
        <seg>perltoot - Vínculos a información sobre programación orientada a objetos en Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perltrap		Perl traps for the unwary</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T141446Z">
        <seg>perltrap         Trampas para los incautos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perltru64		Perl notes for Tru64</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144744Z">
        <seg>perltru64        Notas para Tru64</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perltw		Perl for Traditional Chinese (in Big5)</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144257Z">
        <seg>perltw           Perl para chino tradicional (en Big5)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlunicode 	Perl Unicode support</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143405Z">
        <seg>perlunicode      Compatibilidad con Unicode</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlunicook 	Perl Unicode cookbook</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150910T223130Z" creationid="explorer" creationdate="20150905T150100Z">
        <seg>perlunicook      Recetario de Unicode en Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlunifaq		Perl Unicode FAQ</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143412Z">
        <seg>perlunifaq       Preguntas más frecuentes sobre Unicode</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlunifaq - Perl Unicode FAQ</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110211T195238Z">
        <seg>perlunifaq - Preguntas más frecuentes sobre Unicode en Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perluniintro	Perl Unicode introduction</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143357Z">
        <seg>perluniintro     Introducción a Unicode</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perluniprops	Index of Unicode properties in Perl</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150910T223153Z" creationid="explorer" creationdate="20150905T143446Z">
        <seg>perluniprops     Índice de propiedades Unicode en Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlunitut		Perl Unicode tutorial</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143431Z">
        <seg>perlunitut       Tutorial de Unicode</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlunitut - Perl Unicode Tutorial</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110205T221526Z">
        <seg>perlunitut - Tutorial de Unicode en Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlutil		utilities packaged with the Perl distribution</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T145116Z">
        <seg>perlutil         Utilidades incluidas en una distribución Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlutil - utilities packaged with the Perl distribution</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T132340Z">
        <seg>perlutil - Utilidades incluidas en la distribución de Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlvar		Perl predefined variables</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143140Z">
        <seg>perlvar          Variables predefinidas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlvms		Perl notes for VMS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144814Z">
        <seg>perlvms          Notas para VMS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlvos		Perl notes for Stratus VOS</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144825Z">
        <seg>perlvos          Notas para Stratus VOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlwin32		Perl notes for Windows</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T144835Z">
        <seg>perlwin32        Notas para Windows</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlxs		Perl XS application programming interface</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143703Z">
        <seg>perlxs           Interfaz de programación de aplicaciones XS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlxstut		Perl XS tutorial</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143654Z">
        <seg>perlxstut        Tutorial de XS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>perlxstypemap	Perl XS C/Perl type conversion tools</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T143714Z">
        <seg>perlxstypemap    Herramientas de conversión de tipos XS C/Perl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plan( tests =&gt; 156 );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110628T165506Z">
        <seg>plan( tests =&gt; 156 );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plan( tests =&gt; 159 );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231251Z">
        <seg>plan( tests =&gt; 159 );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pm.org?</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110405T102332Z">
        <seg>¿Y pm.org?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pragma/warnings             333    1   0.30%  215</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T211248Z">
        <seg>pragma/warnings             333    1   0.30%  215</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180346Z">
        <seg>print</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print         "10.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231447Z">
        <seg>print         "10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print         "11.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011510Z">
        <seg>print         "11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print         "12.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011518Z">
        <seg>print         "12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print         "13.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010931Z">
        <seg>print         "13.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print       " 4.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231504Z">
        <seg>print       " 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print " 3.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010947Z">
        <seg>print " 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "1..156\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110628T165453Z">
        <seg>print "1..156\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "A: ", $l + $r, "\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193745Z">
        <seg>print "A: ", $l + $r, "\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "B: ", $l + $r, "\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193747Z">
        <seg>print "B: ", $l + $r, "\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "C: ", $l + $r, "\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193749Z">
        <seg>print "C: ", $l + $r, "\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "D: ", $l + $r, "\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193751Z">
        <seg>print "D: ", $l + $r, "\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "E: ", $l + $r, "\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193754Z">
        <seg>print "E: ", $l + $r, "\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "Hello</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233552Z">
        <seg>print "Hola</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "Hello, $name\n";     # works fine</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T124136Z">
        <seg>print "Hola, $nombre\n";  # funciona correctamente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "Hello, world";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233532Z">
        <seg>print "Hola a todos";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "Hello, world\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233902Z">
        <seg>print "Hola a todos\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "Hostname is $2\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T232506Z">
        <seg>print "El nombre de host es $2\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "Its title is ", $self-&gt;title, "\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T163212Z">
        <seg>print "Título: ", $self-&gt;titulo, "\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "Just another Perl hacker,";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T122236Z">
        <seg>print "Just another Perl hacker,";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "Just read in this line: $_";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T003122Z">
        <seg>print "Acabo de leer esta línea: $_";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "LA LA LA\n" while 1;          # loops forever</seg>
      </tuv>
      <tuv lang="ES">
        <seg>print "LA LA LA\n" while 1;          # bucle sin fin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "Scalars begin with a $variables-&gt;{'scalar'}-&gt;{'sigil'}\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T123253Z">
        <seg>print "Los escalares empiezan por $variables-&gt;{'escalar'}-&gt;{'sigilo'}\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "Starting analysis\n" if $verbose;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111022T100059Z">
        <seg>print "Iniciando análisis\n" if $verbose;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "The animal is $animal\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T231001Z">
        <seg>print "El animal es $animal\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "The square of $answer is ", $answer * $answer, "\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T001501Z">
        <seg>print "El cuadrado de $respuesta es ", $respuesta * $respuesta, "\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "The value of $key is $hash{$key}\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234942Z">
        <seg>print "El valor de $clave es $hash{$clave}\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "This element is $_\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234902Z">
        <seg>print "Este elemento es $_\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "This file is at ", $self-&gt;path, "\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200206Z">
        <seg>print "Ruta del archivo: ", $self-&gt;ruta, "\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "Username is $1\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T232502Z">
        <seg>print "El nombre de usuario es $1\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "We have no bananas" unless $bananas;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T235734Z">
        <seg>print "No quedan plátanos" unless $platanos;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "Yow!" if $zippy;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T235719Z">
        <seg>print "¡Caramba!" if $zippy;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "Yow!";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110204T164416Z">
        <seg>print "¡Caramba!";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print "ok $test\n"; $test++;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T002104Z">
        <seg>print "ok $test\n"; $test++;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $animal;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180354Z">
        <seg>print $animal;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $animals[0];              # prints "camel"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T161126Z">
        <seg>print $animales[0];  # imprime "camello"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $animals[1];              # prints "llama"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T161131Z">
        <seg>print $animales[1];  # imprime "llama"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $foo;     # Prints '1'!</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T112247Z">
        <seg>print $foo;     # Imprime '1'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $list[$_] foreach 0 ..</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234915Z">
        <seg>print $lista[$_] foreach 0 ..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $log $logmessage;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T225647Z">
        <seg>print $registro $mensaje_registro;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $logfile $logmessage;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T222046Z">
        <seg>print $registro $mensaje_registro;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $mixed[$#mixed];       # last element, prints 1.23</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T161139Z">
        <seg>print $mezcla[$#mezcla];  # último elemento, imprime 1.23</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $out $record;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T225640Z">
        <seg>print $salida $registro;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $prefix, ", ", $self-&gt;path, "\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T183002Z">
        <seg>print $prefijo, ", ", $self-&gt;ruta, "\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $time-&gt;epoch();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T200450Z">
        <seg>print $hora-&gt;tiempo_Unix();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $time-&gt;epoch;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T201419Z">
        <seg>print $hora-&gt;tiempo_Unix();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $x;               # prints "foo"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T162445Z">
        <seg>print $x;               # imprime "foo"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $x;           # prints "foo"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T162438Z">
        <seg>print $x;           # imprime "foo"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $y;               # prints nothing; $y has fallen out of scope</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T121341Z">
        <seg>print $y;               # no imprime nada; $y está fuera del ámbito</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print $y;           # prints "bar"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T162441Z">
        <seg>print $y;           # imprime "bar"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print 'Hello, $name\n';     # prints $name\n literally</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110203T124130Z">
        <seg>print 'Hola, $nombre\n';  # imprime $nombre\n literalmente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print 'Hello, world';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233623Z">
        <seg>print 'Hola a todos';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print 'You gave me ', *{$glob}{PACKAGE},</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T141449Z" creationid="explorer" creationdate="20150905T140243Z">
        <seg>print 'He recibido ', *{$glob}{PACKAGE},</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print 'not ' unless "1.20.300.4000" eq sprintf "%vd",</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T122335Z" creationid="explorer" creationdate="20150513T122335Z">
        <seg>print 'not ' unless "1.20.300.4000" eq sprintf "%vd",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print 42;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180353Z">
        <seg>print 42;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print STDERR "This is your final warning.\n";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T235449Z">
        <seg>print STDERR "Ésta es la última advertencia.\n";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print blessed( $bar );      # prints "Class"</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083140Z">
        <seg>print blessed( $bar );      # imprime "Clase"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print blessed( $bar );      # prints undef</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T083221Z">
        <seg>print blessed( $bar );      # imprime undef</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print blessed($hash);      # undef</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T172646Z">
        <seg>print blessed($hash);         # undef</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print blessed($hostname);  # File</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T195945Z">
        <seg>print blessed($nombre_host);  # Archivo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print { $barfh } $_ while &lt;$foofh&gt;;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120503T233616Z">
        <seg>print { $fh_B } $_ while &lt;$fh_A&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print {$fh} $binary;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110212T161932Z">
        <seg>print {$fh} $binario;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print {$fh} $self-&gt;data()       or die $!;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T235210Z">
        <seg>print {$archivo} $self-&gt;datos()      or die $!;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print("Hello, world\n");</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233857Z">
        <seg>print("Hola a todos\n");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180445Z">
        <seg>print;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>print;          # prints contents of $_ by default</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T231504Z">
        <seg>print;          # imprime el contenido de $_ de manera predeterminada</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>prints:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011040Z">
        <seg>imprime:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>private_sv = MRO_GET_PRIVATE_DATA(meta, &amp;my_mro_alg);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T225734Z">
        <seg>private_sv = MRO_GET_PRIVATE_DATA(meta, &amp;mi_alg_mro);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>range operator (creates a list of numbers or strings)</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T115446Z" creationid="explorer" creationdate="20150905T115446Z">
        <seg>operador de intervalo (crea una lista de números o cadenas)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rather than:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011053Z">
        <seg>en lugar de:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>require "SomeModule.pm";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170233Z">
        <seg>require "MiModulo.pm";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>require './test.pl';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231247Z">
        <seg>require './test.pl';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>require Cwd;		# make Cwd:: accessible</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170700Z">
        <seg>require Cwd;		# hace Cwd:: accesible</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>require Cwd;	    	# make Cwd:: accessible</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T160708Z">
        <seg>require Cwd;		# hace Cwd:: accesible</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>require Exporter;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T203210Z">
        <seg>require Exporter;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>require SomeModule;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T170226Z">
        <seg>require MiModulo;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>require myint;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T232651Z">
        <seg>require entero;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return $class-&gt;SUPER::new(@_);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T184732Z">
        <seg>return $clase-&gt;SUPER::new(@_);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return $hinthash-&gt;{"myint/in_effect"};</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120605T214020Z">
        <seg>return $hash_pistas-&gt;{"entero/in_effect"};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return $result;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T235528Z">
        <seg>return $resultado;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return $self-&gt;{$called};</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T181115Z">
        <seg>return $self-&gt;{$llamado};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return $self-&gt;{path};</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T205916Z">
        <seg>return $self-&gt;{ruta};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return $self;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T153751Z">
        <seg>return $self;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return $time_for{$self};</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T201407Z">
        <seg>return $hora_para{$self};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return ${ $self };</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T151357Z">
        <seg>return ${ $self };</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return bless \$time, $class;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T184055Z">
        <seg>return bless \$hora, $clase;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return bless {}, $class;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T125447Z">
        <seg>return bless {}, $clase;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return bless {}, shift;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162515Z">
        <seg>return bless {}, shift;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return if ${^GLOBAL_PHASE} eq 'DESTRUCT';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T183457Z">
        <seg>return if ${^GLOBAL_PHASE} eq 'DESTRUCT';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return print reverse sort num values %array;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T133049Z">
        <seg>return print reverse sort num values %array;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return print(reverse(sort num (values(%array))));</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T133056Z">
        <seg>return print(reverse(sort num (values(%array))));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>s/foo/bar/;               # replaces foo with bar in $_</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120802T164431Z">
        <seg>s/foo/bar/;        # reemplaza foo por bar en $_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>save $file;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211200Z">
        <seg>guardar $archivo;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say 'A';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162547Z">
        <seg>say 'A';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say 'B';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120723T215543Z">
        <seg>say 'B';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say 'C';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T084232Z">
        <seg>say 'C';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>say 'Prepare to rock';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162152Z">
        <seg>say 'Preparado para el rock';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scalar  =&gt;  {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T212534Z">
        <seg>escalar  =&gt;  {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>set</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T120149Z" creationid="explorer" creationdate="20150905T120149Z">
        <seg>especificado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sigil =&gt; '$',</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T114602Z" creationid="explorer" creationdate="20150905T114602Z">
        <seg>sigilo =&gt; '$',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sigil =&gt; '%',</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T114615Z" creationid="explorer" creationdate="20150905T114615Z">
        <seg>sigilo =&gt; '%',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sigil =&gt; '@',</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T114610Z" creationid="explorer" creationdate="20150905T114610Z">
        <seg>sigilo =&gt; '@',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>so instead of this:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T000559Z">
        <seg>así que en vez de esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>string concatenation</seg>
      </tuv>
      <tuv lang="ES">
        <seg>concatenación de cadenas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>struct mro_alg {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193557Z">
        <seg>struct mro_alg {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub AUTOLOAD {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211253Z">
        <seg>sub AUTOLOAD {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub DESTROY {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T211312Z">
        <seg>sub DESTROY {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub DESTROY { } # see below</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T181132Z">
        <seg>sub DESTROY { } # ver a continuación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub Some_package::foo { ... }   # &amp;foo defined in Some_package</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T181533Z">
        <seg>sub Un_paquete::foo { ... }   # &amp;foo definida en Un_paquete</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub epoch {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T200440Z">
        <seg>sub tiempo_Unix {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub func1      { ... }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010948Z">
        <seg>sub func1      { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub func2      { ... }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010951Z">
        <seg>sub func2      { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub func3      { ... }</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T011016Z">
        <seg>sub func3      { ... }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub identify_typeglob {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T160044Z">
        <seg>sub identificar_typeglob {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub import {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110628T184436Z">
        <seg>sub import {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub in_effect {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T225935Z">
        <seg>sub in_effect {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub load {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120725T125505Z">
        <seg>sub cargar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub logger {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T233832Z">
        <seg>sub registrador {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub new {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T193806Z">
        <seg>sub new {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub path {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T205912Z">
        <seg>sub ruta {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub print_info {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200133Z">
        <seg>sub imprimir_info {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub save {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T155934Z">
        <seg>sub guardar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub speak {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162538Z">
        <seg>sub decir {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub square {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T235522Z">
        <seg>sub cuadrado {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub turn_off {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185404Z">
        <seg>sub apagar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub turn_on {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185400Z">
        <seg>sub encender {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub unimport {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110819T101559Z">
        <seg>sub unimport {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sub { no warnings 'uninitialized'; s/\0$// } );</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190138Z">
        <seg>sub { no warnings 'uninitialized'; s/\0$// } );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sv_setpvn(cat, "", 0);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231226Z">
        <seg>sv_setpvn(cat, "", 0);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>t/op/pack.t has a sensible ok() function, but if it didn't we could use
the one from t/test.pl.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T002832Z">
        <seg>t/op/pack.t tiene una función ok() adecuada, pero si no la tuviera, podríamos usar la de t/test.pl.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tar/extract/verbose Your_Module.tar</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003218Z">
        <seg>tar/extract/verbose Mi_Modulo.tar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>the key 12345 will get stored in the DBM database as the 5 byte string
"12345".</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111006T154234Z">
        <seg>la clave 12345 se almacenará en la base de datos DBM como una cadena de 5 bytes, "12345".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>the user will see something like this:</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T152951Z">
        <seg>el usuario verá algo similar a:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>title         =&gt; 'My Body Is a Cage',</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120628T173854Z">
        <seg>titulo        =&gt; 'Soy minero',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>to give the output</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111030T001438Z">
        <seg>devuelva el siguiente resultado:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>to install it locally.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010241Z">
        <seg>para instalarlo localmente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tr [abc]</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172725Z">
        <seg>tr [abc]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>undef $db;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190145Z">
        <seg>undef $db;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>unless $path =~ /\.mp3\z/;</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160413Z" creationid="explorer" creationdate="20150905T160413Z">
        <seg>unless $ruta =~ /\.mp3\z/;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>unless ( condition ) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T002940Z">
        <seg>unless ( condición ) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>unless exists $self-&gt;{$called};</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160658Z" creationid="explorer" creationdate="20150905T160658Z">
        <seg>unless exists $self-&gt;{$llamado};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>unlink $filename;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T131856Z">
        <seg>unlink $archivo;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>untie %hash;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190152Z">
        <seg>untie %hash;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>until ( condition ) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T003005Z">
        <seg>until ( condición ) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>unzip Your-Module.zip</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003054Z">
        <seg>unzip Mi-Modulo.zip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use AutoSplit;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T174129Z">
        <seg>use AutoSplit;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use C&lt;BE&lt;lt&gt;E&lt;gt&gt;&gt; for commands names like B&lt;cat&gt; or B&lt;grep&gt;.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111015T151814Z">
        <seg>usar C&lt;BE&lt;lt&gt;E&lt;gt&gt;&gt; para nombres de comandos, como B&lt;cat&gt; o B&lt;grep&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use C&lt;CE&lt;lt&gt;E&lt;gt&gt;&gt; for function, variable and module names (and more
generally anything that can be considered part of code, like filehandles
or specific values).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111015T151740Z">
        <seg>usar C&lt;CE&lt;lt&gt;E&lt;gt&gt;&gt; para nombres de funciones, variables y módulos (y, de manera más general, cualquier cosa que se pueda considerar que forma parte del código, como identificadores de archivos o valores específicos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use C&lt;FE&lt;lt&gt;E&lt;gt&gt;&gt; or C&lt;CE&lt;lt&gt;E&lt;gt&gt;&gt; for file names.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111015T151819Z">
        <seg>usar C&lt;FE&lt;lt&gt;E&lt;gt&gt;&gt; o C&lt;CE&lt;lt&gt;E&lt;gt&gt;&gt; para nombres de archivos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Class::Accessor 'antlers';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120626T185604Z">
        <seg>use Class::Accessor 'antlers';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Class::Tiny qw( path content last_mod_time );</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160426T233447Z" creationid="explorer" creationdate="20150905T125412Z">
        <seg>use Class::Tiny qw( ruta contenido hora_ult_mod );</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Cwd;			# import names from Cwd::</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T160649Z">
        <seg>use Cwd;			# importa nombres de Cwd::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use DB_File;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190155Z">
        <seg>use DB_File;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Encode qw(encode decode);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125151Z">
        <seg>use Encode qw(encode decode);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Encode qw(from_to);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172317Z">
        <seg>use Encode qw(from_to);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Encode;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125153Z">
        <seg>use Encode;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Fcntl;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190129Z">
        <seg>use Fcntl;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Hash::Util::FieldHash 'fieldhash';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T183605Z">
        <seg>use Hash::Util::FieldHash 'fieldhash';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Module ();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165942Z">
        <seg>use Modulo ();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Module LIST;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120906T083649Z">
        <seg>use Modulo LISTA;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Module;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T165850Z">
        <seg>use Modulo;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Moose::Role;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193800Z">
        <seg>use Moose::Role;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Moose;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193814Z">
        <seg>use Moose;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use MyMaths;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110819T100841Z">
        <seg>use MisOperadores;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Package 1.2 qw(some imported subs);</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120731T225325Z">
        <seg>use Paquete 1.2 qw(algunas subrutinas importadas);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Perl; used to provide a slashdot-style news/blog website covering all
things Perl, from minutes of the meetings of the Perl 6 Design team to
conference announcements with (ir)relevant discussion.</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20160505T092714Z" creationid="explorer" creationdate="20160505T092440Z">
        <seg>use Perl; es un sitio web de noticias/blog sobre Perl al estilo Slashdot que en su día cubría toda la información relacionada con Perl, desde actas de las reuniones del equipo de diseño de Perl 6 hasta anuncios de conferencias con debates (ir)relevantes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use SDBM_File;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T190121Z">
        <seg>use SDBM_File;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use Scalar::Util 'blessed';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T193948Z">
        <seg>use Scalar::Util 'blessed';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use mro 'c3';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120728T084230Z">
        <seg>use mro 'c3';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use myint();</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T232540Z">
        <seg>use entero();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use myint;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111029T232505Z">
        <seg>use entero;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use overload '+' =&gt; sub {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110812T144447Z">
        <seg>use overload '+' =&gt; sub {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use parent 'Father', 'Mother';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T163845Z">
        <seg>use parent 'Padre', 'Madre';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use parent 'File';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120625T200437Z">
        <seg>use parent 'Archivo';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use parent 'File';    # sets @File::MP3::ISA = ('File');</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T161737Z">
        <seg>use parent 'Archivo';    # establece @Archivo::MP3::ISA = ('Archivo');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use parent 'Parent1', 'Parent2';</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T162927Z">
        <seg>use parent 'Padre1', 'Padre2';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use parent -norequire, 'A';</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160220Z" creationid="explorer" creationdate="20150905T160220Z">
        <seg>use parent -norequire, 'A';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use parent -norequire, 'B';</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T160227Z" creationid="explorer" creationdate="20150905T160227Z">
        <seg>use parent -norequire, 'B';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use strict;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172834Z">
        <seg>use strict;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use utf8;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172303Z">
        <seg>use utf8;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use warnings;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172838Z">
        <seg>use warnings;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>version 5.021009</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150905T110514Z" creationid="explorer" creationdate="20150905T110514Z">
        <seg>versión 5.021009</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>warn "No hostname given";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T152938Z">
        <seg>warn "No se ha especificado un nombre de host";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>we can write the more sensible (see L&lt;Test::More&gt; for a full
explanation of is() and other testing functions).</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T160636Z">
        <seg>podemos escribir una prueba más apropiada (en L&lt;Test::More&gt; encontrará una descripción completa de is() y otras funciones para realizar pruebas):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>which looks like your module is doing something wrong.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120729T183425Z">
        <seg>que parece indicar que su módulo ha producido un error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while ( condition ) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T234837Z">
        <seg>while ( condición ) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while (&lt;$in&gt;) {     # assigns each line in turn to $_</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110204T164808Z">
        <seg>while (&lt;$entrada&gt;) {     # asigna una línea cada vez a $_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while (&lt;&gt;) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180442Z">
        <seg>while (&lt;&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while (pat &lt; patend &amp;&amp; *pat != '\n')</seg>
      </tuv>
      <tuv lang="ES" changeid="explorer" changedate="20150513T122401Z" creationid="explorer" creationdate="20150513T122401Z">
        <seg>while (pat &lt; patend &amp;&amp; *pat != '\n')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>while (pat &lt; patend) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110717T231231Z">
        <seg>while (pat &lt; patend) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>with an initial C&lt;U0&gt;, and the bytes that follow will be interpreted as</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T160031Z">
        <seg>con C&lt;U0&gt; al principio, y los bytes que siguen se interpretarán como</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>with invaluable help from Chris Nandor, and valuable help from Brandon
Allbery, Charles Bailey, Graham Barr, Dominic Dunlop, Jarkko
Hietaniemi, Ben Holzman, Tom Horsley, Nick Ing-Simmons, Tuomas
J. Lukka, Laszlo Molnar, Alan Olsen, Peter Prymmer, Gurusamy Sarathy,
Christoph Spalinger, Dan Sugalski, Larry Virden, and Ilya Zakharevich.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T012816Z">
        <seg>con la ayuda inestimable de Chris Nandor, y la valiosa ayuda de Brandon Allbery, Charles Bailey, Graham Barr, Dunlop Domingo, Hietaniemi Jarkko, Holzman Ben, Tom Horsley, Nick Ing-Simmons, J. Tuomas Lukka, Laszlo Molnar, Olsen Alan, Peter Prymmer, Gurusamy Sarathy, Spalinger Christoph, Sugalski Dan, Larry Virden y Zakharevich Ilya.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>with the sequence C&lt;1100&gt; repeating again and again.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T192535Z">
        <seg>donde la secuencia C&lt;1100&gt; se repite una y otra vez.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>world";</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110129T233559Z">
        <seg>a todos";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x   string multiplication</seg>
      </tuv>
      <tuv lang="ES">
        <seg>x   multiplicación de cadenas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>your pattern with C&lt;C0&gt; (or anything else) to force Perl not to UTF-8</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120904T154128Z">
        <seg>el patrón con C&lt;C0&gt; (o cualquier otra cosa) para evitar que Perl fuerce la codificación en UTF-8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>zero or one of the previous thing</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230554Z">
        <seg>cero o una coincidencias de lo anterior</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{</seg>
      </tuv>
      <tuv lang="ES">
        <seg>{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{3,6}               matches between 3 and 6 of the previous thing</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230619Z">
        <seg>{3,6}               detecta entre 3 y 6 coincidencias de lo anterior</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{3,}                matches 3 or more of the previous thing</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230631Z">
        <seg>{3,}                detecta 3 o más coincidencias de lo anterior</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{3}                 matches exactly 3 of the previous thing</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110130T230607Z">
        <seg>{3}                 detecta exactamente 3 coincidencias de lo anterior</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>|</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20111008T182304Z">
        <seg>|</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>||  or</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110627T125311Z">
        <seg>||  or</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T171333Z">
        <seg>}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} else {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180419Z">
        <seg>} else {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} elsif ( other condition ) {</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110131T002934Z">
        <seg>} elsif ( otra condición ) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>},</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T172814Z">
        <seg>},</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}, $class;</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120730T184427Z">
        <seg>}, $clase;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>};</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20110608T180410Z">
        <seg>};</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
    <tu>
      <prop type="file">perlhacktut.pod</prop>
      <prop type="prev">}</prop>
      <prop type="next">That's the C part done.</prop>
      <tuv lang="EN-US">
        <seg>OK.</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120903T234500Z">
        <seg>Muy bien.</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">perlmodinstall.pod</prop>
      <prop type="prev">C.</prop>
      <prop type="next">Check the contents of the distribution.</prop>
      <tuv lang="EN-US">
        <seg>BUILD</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T001056Z">
        <seg>COMPILAR</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">perlmodinstall.pod</prop>
      <prop type="prev">C.</prop>
      <prop type="next">Go into the newly-created directory and type:</prop>
      <tuv lang="EN-US">
        <seg>BUILD</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000158Z">
        <seg>COMPILAR</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">perlmodinstall.pod</prop>
      <prop type="prev">C.</prop>
      <prop type="next">Make sure you have MMS (from Digital) or the freeware MMK ( available
from MadGoat at http://www.madgoat.com ).</prop>
      <tuv lang="EN-US">
        <seg>BUILD</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T003228Z">
        <seg>COMPILAR</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">perlmodinstall.pod</prop>
      <prop type="prev">C.</prop>
      <prop type="next">You'll need the C&lt;nmake&gt; utility, available at
http://download.microsoft.com/download/vc15/Patch/1.52/W95/EN-US/nmake15.exe
or dmake, available on CPAN.</prop>
      <tuv lang="EN-US">
        <seg>BUILD</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120905T000538Z">
        <seg>COMPILAR</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">perlmodinstall.pod</prop>
      <prop type="prev">DECOMPRESS</prop>
      <prop type="next">gzip -d Your-Module.tgz</prop>
      <tuv lang="EN-US">
        <seg>Type</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010549Z">
        <seg>Escriba</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">perlmodinstall.pod</prop>
      <prop type="prev">INSTALL</prop>
      <prop type="next">mms install</prop>
      <tuv lang="EN-US">
        <seg>Type</seg>
      </tuv>
      <tuv lang="ES" changeid="zipf" changedate="20120901T010016Z">
        <seg>Escriba</seg>
      </tuv>
    </tu>
  </body>
</tmx>
